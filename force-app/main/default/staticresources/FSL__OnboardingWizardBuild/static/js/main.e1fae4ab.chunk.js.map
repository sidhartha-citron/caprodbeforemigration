{"version":3,"sources":["Utils/customLabels.js","components/LeftPanel/Navigation/Navigation.js","components/LeftPanel/LeftPanel.js","utils/customLabels.js","components/PageHeader/PageHeader.js","utils/callRemoteAction.js","utils/lsdIcons.js","components/Tooltip/Tooltip.js","components/WorkCanvas/DefineTerritories/TerritoriesTree/NewTerritory/NewTerritory.js","utils/DhmlxTreeNode.js","utils/Utils.js","components/WorkCanvas/DefineTerritories/TerritoriesTree/TerritoriesTree.js","data/OperatingHours.js","utils/miscSalesforceObjects.js","components/OperatingHoursSelect/OperatingHoursSelect.js","components/Lightbox/Lightbox.js","components/TimeSelect/TimeSelect.js","components/OperatingHoursCreator/OperatingHoursCreator.js","components/WorkCanvas/DefineTerritories/TerritoryForm/TerritoryForm.js","components/WorkCanvas/DefineTerritories/BulkTerritoriesActions/BulkTerritoriesActions.js","components/SuccessMessage/SuccessMessage.js","components/WorkCanvas/DefineTerritories/DefineTerritories.js","data/WorkType.js","data/Skills.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypesList/NewWorkType/NewWorkType.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypesList/WorkTypeItem/WorkTypeItem.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypesList/WorkTypeItem/WorkTypeSkill/WorkTypeSkill.js","components/SearchInput/SearchInput.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypesList/WorkTypesList.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypeForm/SkillsSelector/SkillsSelector.js","utils/ObjectNames.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypeForm/WorkTypeForm.js","components/WorkCanvas/WorkTypesAndSkills/WorkTypesAndSkills.js","data/Policies.js","components/WorkCanvas/AppointmentBooking/SlotsPreview/SlotsPreview.js","components/WorkCanvas/AppointmentBooking/AppointmentBooking.js","components/WorkCanvas/ResourcesDefenition/ResourcesTable/InlineResourceFieldEdit/InlineResourceFieldEdit.js","components/WorkCanvas/ResourcesDefenition/LicensesToggles/LicensesToggles.js","components/WorkCanvas/ResourcesDefenition/ResourcesTable/ResourcesTable.js","components/WorkCanvas/ResourcesDefenition/SearchResources/SearchResources.js","components/WorkCanvas/ResourcesDefenition/LicensesCounter/LicensesCounter.js","components/WorkCanvas/ResourcesDefenition/AddNewResource/AddNewResource.js","components/WorkCanvas/ResourcesDefenition/ResourcesBulkActions/ResourcesBulkActions.js","components/WorkCanvas/ResourcesDefenition/ResourcesDefenition.js","components/WorkCanvas/SchedulingPolicies/PoliciesList/PoliciesList.js","components/WorkCanvas/SchedulingPolicies/PolicyForm/PolicyForm.js","components/WorkCanvas/SchedulingPolicies/RulesSelector/RulesExplanationLightbox.js","components/WorkCanvas/SchedulingPolicies/RulesSelector/RulesSelector.js","components/WorkCanvas/SchedulingPolicies/ObjectivesEditor/ObjectivesEditor.js","components/WorkCanvas/SchedulingPolicies/AddPolicy/AddPolicy.js","components/WorkCanvas/SchedulingPolicies/SchedulingPolicies.js","components/WorkCanvas/SharingUsersTerritories/AgentDispatcherLicenses/AgentDispatcherLicenses.js","components/WorkCanvas/SharingUsersTerritories/UserTerritoriesTable/UserTerritoriesTable.js","components/WorkCanvas/SharingUsersTerritories/SharingUsersTerritories.js","components/WorkCanvas/Home/ObjectCounter/ObjectCounter.js","components/WorkCanvas/Home/Home.js","components/Toast/Toast.js","components/WorkCanvas/WorkCanvas.js","App.js","index.js"],"names":["labels","window","customLabels","Navigation","className","Link","this","getCssClass","to","OBHome","TerritoriesDefenition","WorkTypesAndSkills","ResourcesDefenition","SharingUsersTerritories","AppointmentBooking","SchedulingPolicies","name","location","href","substr","length","indexOf","Component","LeftPanel","PageHeader","state","showMore","icon","props","style","url","text","secondParagraph","more","onClick","__toggleMore","bind","ReadMore","ReadLess","title","setState","callRemoteAction","remoteActionName","params","promise","Promise","resolve","reject","escape","shouldEscapeResult","remoteActionsParams","remoteActions","concat","data","ev","includes","operations","setComponenetSavingStatus","status","buffer","filter","v","undefined","Visualforce","remoting","Manager","invokeAction","apply","lsdIcons","icons","Tooltip","tooltipPositionClass","tipPosition","info","NewTerritory","addingDisabled","buttonOrSpinner","__addNewTerritory","NewTerritoryButton","src","spinner","SavingTerritory","type","disabled","placeholder","addNewTerritoryPlaceholder","maxlength","ref","input","territoryNameInput","onKeyDown","__handleKeyboardAdd","GuidedSetup_territories_add_tooltip","value","validate","then","territory","onNewAdded","catch","ex","console","error","message","alert","substring","wentWrongContactSysAdmin","TerritoryNameCantBeBlank","e","which","DhtmlxTreeNode","sobject","items","open","parent","ParentTerritoryId","address","Address","id","Id","Name","operatingHours","OperatingHours","userdata","treeifyTerritories","nodes","dhtmlxNodes","map","m","tree","mappedArr","forEach","hasOwnProperty","mappedElem","replace","push","sort","a","b","toLowerCase","decodeHTML","DOMParser","parseFromString","documentElement","textContent","openSObjectLink","objectId","sforce","isInConsole","preventDefault","generateConsoleUrl","result","success","openConsoleUrl","consoleUrl","openPrimaryTab","openLightningPrimaryTab","openConsoleTab","TerritoriesTree","__validateNewTerritory","s","nextProps","territories","dhtmlXTreeView","dnd","multiselect","context_menu","iconset","__attachTreeEvents","updatedTerritory","setItemText","encodeHTML","pId","i","toUpperCase","TerritoryNameExist","me","attachEvent","parentId","node","changedTerritories","operatingHoursId","JSON","stringify","afterSave","selectTerritoryHandler","addItem","selectItem","synced","oh","timezoneList","mandatoryRules","OperatingHoursSelect","defaultHours","selected","OperatingHoursLabel","GuidedSetup_appt_booking_oh_tooltip","onChange","__onTerritoryChanged","selectedOperatingHours","__generateOptions","Object","assign","get","addNewOh","getNow","options","SelectOperatingHours","dontShowTz","__findTzOptionLabel","TimeZone","tz","label","Lightbox","show","styles","height","maxHeight","width","closeContainerStyle","Number","parseInt","__handleVisibility","close","children","handleVisibility","displayTwoDigits","n","TimeSelect","hours","minutes","ampm","hoursOptions","minutesOptions","ampmSelect","__onTimeChanged","selectAmpm","selectHours","selectMinutes","nextState","OperatingHoursCreator","isAmpm","isAMPM","isSaving","timezone","days","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","slotSize","createSlots","from","timeZoneListOptions","DaysMiniComp","keys","day","__toggleDay","Days","savingElement","OnboardingSaving","timezoneDiv","hideTimezone","GuidedSetup_appt_booking_timezone_info","ObTimezone","ObAppBookingTimezoneExplain","__tzChanged","timezoneSelect","daysTooltip","guidedsetup_operatinghours_days_tooltip","CreateNewOH","__setIntroLabel","OnboardingOHPNameLabel","__onNameChanged","nameInput","WorkingOn","__createSlots","OBFrom","__timeFromChanged","OBTo","__timeToChanged","__saveOperatingHours","Save","selectedDay","time","opHours","AlreadyOHwithThatName","__areHoursValid","fromConverted","__convertAmpm","toConverted","parameters","OHCreatorBadHours","NoDaysSelected","HoursFieldsHofefing","OhNameNotBlank","times","ret","GuidedSetup_appt_booking_oh_lightbox_intro","CreateNewOpHoursExplain","slotHoursOptions","t","OHCreateSlots","__slotsSizeChanged","OHCreateSlotsHours","target","TerritoryForm","OperatingHoursId","street","city","postalCode","country","showWorkingHoursCreator","key","nameBeforeSave","addressInputs","__saveChanges","debounce","NoTerritorySelectedText","googleMapsLink","Longitude","Latitude","LocateInGmap","__openSObjectLink","Open_Service_Territory_Record","OpHoursName","territoryName","__territoryNameChanged","__operationHoursChanged","Open_Operating_Hours_Record","__openWorkingHoursCreator","__closeWorkingHoursCreator","__afterSaveOperatingHours","ObTerritoryAddress","Territory_Address_Header_tooltip","ObAddress","__addressFieldChanged","ObCity","ObStateProvince","ObZip","ObCountry","field","operationHoursId","territoryToSave","afterOpAdded","BulkTerritoriesActions","__mutualTerritoriesHours","externalDiv","OpenInLayout","XSelectedTerritories","ohId","SuccessMessage","DefineTerritories","selectedTerritory","lastSaved","showOpSuccess","background","rightSide","Array","isArray","__showSuccess","__handleFormSaved","OpSavedGood","TerritoriesDefenitionExplanation","GuidedSetup_terittories_second_paragraph","__selectTerritory","setTimeout","selectedIds","getSelectedId","territoriesToAdd","selectedTerritories","found","j","combinedTerritories","workType","workTypes","skills","NewWorkType","buttonClass","onSubmit","__addNewWorkType","addNewWorkTypePlaceholder","workTypeNameInput","NewWorkTypeButton","event","log","WorkTypeNameCantBeBlank","WorkTypeItem","selectedClass","isSelected","__selectWorkType","worktype","onSelectedWorkType","SearchInput","searchTerm","__doSearch","doSearch","search","search_work_types","__handleSearch","React","WorkTypesList","selectedId","allWorkTypes","filteredWorkTypes","_","wt","index","__setSelectedWorkType","selectWorkType","__validateNewWorkType","__setSearchTerm","__renderWorkTypeItems","SkillsSelector","sessionId","soapEndPoint","newProps","existingSkills","requiredSkills","sk","Skill","skillsBox","removeAll","add","generateSkillSelector","skillNames","reduce","obj","item","MasterLabel","Taggle","duplicateTagClass","EnterSkills","preserveCase","tags","onBeforeTagAdd","tag","validSkill","SkillSpecialChars","has","confirm","ConfirmCreateNewSkill","__addSkill","onTagAdd","addRequiredSkill","onTagRemove","removeRequiredSkill","find","container","getContainer","getInput","$","autocomplete","source","appendTo","position","at","of","delay","select","ui","array","term","matcher","RegExp","escapeRegex","grep","test","origin","split","join","ajax","dataType","beforeSend","xhr","setRequestHeader","res","textStatus","jqXHR","responseText","errorThrown","stopPropagation","nospcae","ObjectNames","objectNames","WorkTypeForm","tooltipTextDueDate","DueDateOffsetTooltip","tooltipTextName","worktype_name_tooltip","tooltipTextAutoCreate","worktype_auto_create_tooltip","tooltipTextSkillReq","worktype_skill_req_tooltip","Description","WorkType","Due_Date_Offset__c","w","EstimatedDuration","DurationType","ShouldAutoCreateSvcAppt","SkillRequirements","Open_WorkType_Record","wt_Name","__wtFieldChanged","PolicyDescription","wt_Description","marginBottom","DueDateOffset","min","__calcDueDateInDays","wt_EstimatedDuration","Duration_Type","wt_DurationType","Minutes","Hours","AutoCreateServiceAppointment","checked","wt_ShouldAutoCreateSvcAppt","__wtCheckboxFieldChanged","Skill_Requirements","__addRequiredSkill","__removeRequiredSkill","NoWorkTypeSelectedText","fieldName","skillId","reqSkill","Math","floor","DaysLabel","toFixed","workTypeToSave","selectedWorkType","work_type","Data_WorkType","worktypes","Data_Skills","WorkTypesAndSkillsExplanation","__handleSelectWorkType","wts","WorkTypesAndSkillsPoint1","WorkTypesAndSkillsPoint3","WorkTypesAndSkillsPoint2","WorkTypesAndSkillsPoint4","WorkTypesAndSkillsPoint5","policies","parseAllPoliciesObjects","goalsJunction","gj","SchedulingPolicy","SchedulingPolicyGoal","ServiceGoal","Service_Goal","Weight","rulesJunction","rj","SchedulingPolicyWorkRule","WorkRule","parsePolicy","policy","Daily_Optimization__c","Commit_Mode__c","Fix_Overlaps__c","junction","parsedJunction","parsePolicyObjective","splice","DAY_INDEX","SlotsPreview","slots","__renderDay","ExplainPreviewSlots","dayName","dailySlots","slotElements","formatTimeSlot","OnboardingNoSlots","slot","startMinutes","endMinutes","startHour","endHour","toString","timeSlotsCache","appBooking","abSerttings","defaultOperatingHoursForAb","selectedPolicy","defaultPolicyForAb","showPreview","showSuccess","objects","moreText","AppBookingMore1","policyOptions","AppointmentBookingExplanation","SchedulingPolicyName","GuidedSetup_appt_booking_policy_tooltip","__schedulingPolicyChanged","__toggleWorkingHoursCreator","newPolicyId","isUpdated","preCachedSlots","s1","s2","StartTime","DayOfWeek","EndTime","InlineResourceFieldEdit","oldValue","saveValueDebounced","valueChanged","onBlur","checkIfEmpty","onSave","resourceId","LicensesToggles","saving","mobile","fsl","generateFslLicense","generateMobileLicense","fslClasses","RemoveFslLicenseAlt","AddFslLicenseAlt","licenseChanged","fslLicense","mobileClasses","RemoveMobileLicenseAlt","AddMobileLicenseAlt","mobileLicense","ResourcesTable","sortBy","order","selectedRows","toggleAll","tableRows","users","sortRows","isRowVisible","user","rowClasses","resources","onRowClicked","generateResourceCellContent","Open_User_Record","GanttLabel","inlineValueChanged","generateTerritoryCellContent","IsActive","getUserFslLicense","getUserMobileLicense","toggleAllRows","setSortAndOrder","styleColumn","TableResourceName","TableUsername","TableGanttLabel","TableTerritory","TableActive","TableLicenses","col","orderBy","arrowup","arrowdown","uId","Open_Service_Resource_Record","territoryMembers","userId","fslLicenseId","licenseTypes","assignedLicenses","mobileLicenseId","u1","u2","u","FieldServiceSchedulingPsl","FieldServiceMobilePsl","t1","t2","u1score","getLicenseScoreForSort","u2score","resourceExist","checkIfUsersHaveResource","u1Val","getResourceFieldForSort","u2Val","saveResource","isAdded","cb","selectedRowsIds","k","onRowSelected","SearchResources","searchTermChangedDebounced","OBSearchResources","searchTermChanged","LicensesCounter","LicenseRemaining","generateFslCounter","generateMoibileCounter","Licenses_in_use_tooltip","counters","used","total","AddNewResource","point4","OBNewResourcePoint4","tooltipText","OBNewResourcePoint1","OBNewResourcePoint2","OBNewResourcePoint3","resourceName","ganttLabel","licenses","inputs","savingOrButtonElemet","addNewResource","NewREsources","generateUserOptions","ObResourceName","ObGanttLabel","generateTerritoriesOptions","ObSelectUser","userChanged","ObSelectTerritory","change","resource","onAdded","gotErrors","ResourceMustHaveLicenses","MustSelectServiceTerritory","MustEnterUser","MustEnterResourceName","ResourcesBulkActions","showEditLightbox","action","form","tooltipTexts","SkillsAddedTooltip","overide","SkillsAddedNotRemoved","remove","SkillsRemovedTooltip","Save_Skills","__toggleLightbox","UpdateXResources","__actionChanged","AddSkillsOb","RemoveSkillsOb","OverideSkillsOb","AddResourceSkillss","Search_Skills","__generateSkills","__updateResources","UpdateResources","SkillId","skill","__skillChanged","htmlFor","DestructiveActionConfirm","searchText","selectedResourcesIds","permissionSets","ResourcesDefenitionExplanation2","getResourcesAndUsers","sortedTerritories","ResourcesDefenitionExplanation","__onResourceCreated","__searchTermChanged","licensesCounters","selectedRowsUpdated","permissionSetsIds","OutOfMobileLicenses","OutOfFslLicenses","permissionsResult","permissions","al","AssigneeId","PermissionSetLicenseId","parseResource","stm","ServiceResourceId","ServiceTerritory","licenseCounter","c","DeveloperName","TotalLicenses","UsedLicenses","ps","r","RelatedRecordId","updateField","ServiceResource","updatedResource","newResources","parsedResource","isFirstPermission","licensesIds","changeResourceActive","changeResourceIncludeInOptimization","sObject","PoliciesList","list","cssClass","__policySelected","__clonePolicy","clone","onSelected","ConfirmPolicyClone","onClone","PolicyForm","isUseEdge","inday_useEdge","commitModeTooltipText","guidedsetup_commit_mode_tooltip_a","guidedsetup_commit_mode_tooltip_b","guidedsetup_commit_mode_tooltip_c","guidedsetup_commit_mode_tooltip_d","indayAlert","guidedsetup_inday_tooltip_disabled","indayTooltipText","guidedsetup_inday_tooltip","Open_Scheduling_Policy_Record","PolicyName","SchedulingPolicy_form_name_tooltip","__nameOnBlur","__fieldChanged","In_Day","Commit_mode","FixOverlaps","guidedsetup_fixoverlaps_tooltip","isCheckbox","formSavedCallback","RulesExplanationLightbox","RulesTypes","formatRule","RuleExp1","RuleExp2","RuleExp3","RuleExp4","RuleExp5","RuleExp7","RuleExp8","RuleExp9","RuleExp10","RuleExp11","RuleExp12","RuleExp13","rule","RulesSelector","selectedRules","__filterSelectedRules","policyId","rules","unselectedRules","showRulesExplanationLightbox","RulesPreselectedTooltip","RulesPreselectedTooltip2","RulesPreselectedTooltip3","availableActions","__addRules","__removeRules","RulesSelection","RulesExplainOb","RulesExplainObCont","__toggleRulesExplanationLightbox","RulesExplainMore","RulesExplainObCont2","AvailableRules","multiple","unselectedRulesSelect","__generateRulesOptions","SelectedRules","selectedRulesSelect","__doesHaveAvailabilityRule","NoAvabRule","selectedOptions","elements","onRemoved","junctions","bringSelected","r1","r2","earlyStart","dueDate","RecordType","got","NORMALIZED_MAX_VALUE_FOR_OBJECTIVE","ObjectivesEditor","sliders","sliderElements","__createSlidersElements","objectives","__setAvailableGoals","numberOfActiveObjective","OBObjectives","ObjectiveEditorTextIntro","setValue","objectiveWeights","__updatePie","dhtmlXSlider","size","step","max","linkTo","newValue","normalizedValue","normalize","maxWeightNotNormalized","__handleValueChanged","__createPie","objective","goalsJunctions","__normalizeWeights","objectiveId","objectiveJunction","objectiveJunctionToSave","__preparePieData","objectivesPie","dhtmlXChart","view","color","pieInnerText","labelLines","shadow","parse","pieData","colors","colorsHex","currentColor","sumOfWeights","weight","clearAll","maxNew","maxOld","AddPolicy","PolicyNamePlaceHolder","policyNameInput","__addNewPolicy","onNewPolicy","PolicyNameBlank","__generatePageHeader","sobjects","__setSobjectsOnState","pageHeader","__handleNewPolicyAdded","__generagePoliciesList","SelectPolicyFromTheLeft","__handlePolicyRulesChanged","goals","__handleObjectiveChange","callback","newPolicies","__reselectPolicyAfterFetching","desc","isInday","commitMode","isFixOverlaps","p","upsertPolicy","deleteOrAdd","remoteActionToCall","newObjects","junctionsIds","o","newJunctions","junctionMap","parseRulePolicyJunction","updatePolicies","actionType","didDelete","deletePolicyObjectiveJuction","newJunction","upsertPolicyObjectiveJunction","SchedulingPolicyOBInto","generateIntroText","__handlePolicySelected","SchedulingPolicyOBInto2","SchedulingPolicyOBPoint1","SchedulingPolicyOBPoint2","SchedulingPolicyOBEnding","AgentDispatcherLicenses","generateDispatcherLicense","generateAgentLicense","dispatcherLicense","doesHaveLicense","RemoveDisLicnse","AddDisLicnse","agentLicense","hasAgentPermissions","agentClasses","RemoveAgentLicnse","AddAgentLicnse","LicenseConflictDispatcher","LicenseConflictAgent","handleChange","UserTerritoriesTable","asc","arrow","UTuser","UTterr","UTLicense","__generateAllRows","userIds","userTerritories","__filterRow","dispatcherPslId","FieldServiceDispatcherPsl","findIndex","dummy","territoryId","active","userName","__generateRow","ut","territoriesNames","__editClicked","UTEdit","agentPermissions","__licenseChanged","licenseType","isDispatcher","handleLicenseChanged","editClicked","isNew","lightboxUser","filterTerritories","showAddLightbox","socialshare","maintext","SharingUsersTerritoriesExplanation","SharringMore1","SharringMore2","SharringMore3","getSUTdata","SearchUsersOb","__addNewButton","UTAddNew","RemainingDispatcherLicenses","UTDispatchers","__toggleAddNew","__renderLightboxContent","SavingUserTerritories","__generateLightboxTitle","SearchTerrriris","__generateLightboxIntro","__generateTerritoriesCheckbox","__createUserTerritories","CreateUserTerritories","usersWithNoUt","unshift","CUTSelectUser","AssignTerritoriesFor","Assign_Territories_Dispatcher_intro1","Assign_Territories_Dispatcher_intro2","somethingSelected","Nocurrentterr47","territoriesIds","tId","newUts","userTerritoriesArr","parseUserTerritory","NoUSelected","checkTerritoryInLightbox","tid","l","assignedPermissionSet","aps","licensesCounter","parsedUt","UserTerritories","TerritoryName","User","__handleReplyWhenLicenseChanged","deleteIds","ObjectCounter","count","initCountAnimation","counterTemplate","counterElement","link","increaseBy","intervalSpeed","intervalId","setInterval","clearInterval","innerText","Home","fill","links","partCWithLink","GuidedSetup_Welcome_walkthrough_partC","WelcomeOb","GuidedSetup_Welcome_walkthrough_partA","GuidedSetup_Welcome_walkthrough_partB","GuidedSetup_Setup_link","__generateCounters","Toast","toastElement","WorkCanvas","display","Route","path","exact","component","App","ReactDOM","render","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e1fae4ab.chunk.js","sourcesContent":["let labels = window.customLabels;\n\nexport default labels;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport labels from '../../../Utils/customLabels';\nimport './styles.css';\n\nclass Navigation extends Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n\n\n\n        return (\n            <div className=\"link-box\">\n                <Link className={this.getCssClass('/')} to=\"/\">{labels.OBHome}</Link>\n                <Link className={this.getCssClass('DefineTerritories')} to=\"/DefineTerritories\">1. {labels.TerritoriesDefenition}</Link>\n                <Link className={this.getCssClass('WorkTypesAndSkills')} to=\"/WorkTypesAndSkills\">2. {labels.WorkTypesAndSkills}</Link>\n                <Link className={this.getCssClass('ResourcesDefenition')} to=\"/ResourcesDefenition\">3. {labels.ResourcesDefenition}</Link>\n                <Link className={this.getCssClass('SharingUsersTerritories')} to=\"/SharingUsersTerritories\">4. {labels.SharingUsersTerritories}</Link>\n                <Link className={this.getCssClass('AppointmentBooking')} to=\"/AppointmentBooking\">5. {labels.AppointmentBooking}</Link>\n                <Link className={this.getCssClass('SchedulingPolicies')} to=\"/SchedulingPolicies\">6. {labels.SchedulingPolicies}</Link>\n\n            </div>\n        );\n    }\n\n\n    getCssClass(name) {\n\n        if (name === '/') {\n            if (window.location.href.substr(window.location.href.length-2, 2) === '#/') {\n                return 'menu-link obnav-active';\n            } else {\n                return 'menu-link';\n            }\n        }\n\n        return window.location.href.indexOf(name) > -1 ? 'menu-link obnav-active' : 'menu-link'\n    }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation/Navigation';\nimport './styles.css';\n\nclass LeftPanel extends Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div className=\"leftPanelBody\">\n\n                <Navigation />\n\n            </div>\n        );\n    }\n\n\n    renderProgression() {\n\n        return (<div className=\"setupProgress\">\n\n            Setup Progress\n\n            <div className=\"progressBar\">\n                <div className=\"actualProgress\">45%</div>\n            </div>\n\n            <div className=\"progressTip\">\n                <b>Tip:</b> add 3 resources to gain 10%\n            </div>\n\n        </div>);\n    }\n}\n\nexport default LeftPanel;\n","let labels = window.customLabels;\n\nexport default labels;","import React, { Component } from 'react';\nimport './styles.css';\nimport labels from '../../utils/customLabels';\n\n\nexport default class PageHeader extends Component {\n\n    constructor() {\n        super();\n\n        this.state = { showMore: false }\n\n    }\n\n\n    render() {\n\n        let icon = this.props.icon ? (<svg aria-hidden=\"true\" style={this.props.icon.style} className=\"slds-icon icon-on-header\"><use href={this.props.icon.url}></use></svg>) : null,\n            text = (<div><p>{this.props.text}</p><p>{this.props.secondParagraph}</p></div>);\n\n\n        if (this.props.more && !this.state.showMore) {\n            text = (\n                <p>\n                    {this.props.text}\n                    <span className=\"show-more-less\" onClick={this.__toggleMore.bind(this)}>{labels.ReadMore}</span>\n                </p>);\n        } else if (this.props.more && this.state.showMore) {\n            text = (\n                <p>\n                    {this.props.text}\n                    {this.props.more}\n                    <span className=\"show-more-less\" onClick={this.__toggleMore.bind(this)}>{labels.ReadLess}</span>\n                </p>\n            );\n        }\n\n\n        return (\n            <div className=\"page-header\">\n                <h1>\n                    {icon}\n                    {this.props.title}\n                </h1>\n                {text}\n            </div>\n        )\n\n    }\n\n\n    __toggleMore() {\n        this.setState({ showMore: !this.state.showMore});\n    }\n\n}","// remote actions, defined in OnboardingRemoteActions.component\n\nfunction callRemoteAction(remoteActionName, ...params) {\n\n    let promise = new Promise( (resolve, reject) => {\n\n        let escape = window.shouldEscapeResult.indexOf(remoteActionName) > -1;\n\n        let remoteActionsParams = [window.remoteActions[remoteActionName]]\n            .concat(params)\n            .concat(function(data, ev) {\n\n                if (!remoteActionName.includes('get')) {\n\n                    callRemoteAction.operations--;\n\n                    if (callRemoteAction.setComponenetSavingStatus) {\n                        callRemoteAction.setComponenetSavingStatus(!!callRemoteAction.operations);\n                    }\n                }\n\n\n                ev.status ? resolve(data) : reject(ev);\n            })\n            .concat({ buffer: false, escape: escape });\n\n        remoteActionsParams = remoteActionsParams.filter(function(v) { return v !== undefined });\n\n        window.Visualforce.remoting.Manager.invokeAction.apply(window.Visualforce.remoting.Manager, remoteActionsParams);\n\n        if (!remoteActionName.includes('get')) {\n            callRemoteAction.operations++;\n\n            if (callRemoteAction.setComponenetSavingStatus) {\n                callRemoteAction.setComponenetSavingStatus(!!callRemoteAction.operations);\n            }\n        }\n\n\n    });\n\n    return promise;\n\n}\n\ncallRemoteAction.operations = 0;\n\n\nexport default callRemoteAction;","let lsdIcons = window.icons;\n\nexport default lsdIcons;","import React, { Component } from 'react';\nimport lsdIcons from '../../utils/lsdIcons';\nimport './styles.css';\n\n\nexport default class Tooltip extends Component {\n\n    render() {\n\n    \tlet fslClasses = 'slds-icon tooltip-icon';\n\n        let tooltipPositionClass = 'rules-select-help-tooltip';\n        if (this.props.tipPosition) {\n            if (this.props.tipPosition == 'up')\n                tooltipPositionClass = 'rules-select-help-tooltip tooltip-up';\n            else if (this.props.tipPosition == 'right')\n                tooltipPositionClass = 'rules-select-help-tooltip tooltip-right';\n        }\n        else {\n            tooltipPositionClass = 'rules-select-help-tooltip tooltip-down';\n        }\n\n        return (\n            <span className=\"is-relative\">\n                <span className=\"rules-select-help\">\n                \t<svg aria-hidden=\"true\"\n                \t     className={fslClasses}>\n                \t        <use href={lsdIcons.info} />\n                \t</svg>\n                </span>\n                <span className={tooltipPositionClass}>{this.props.text}</span>\n            </span>\n        );\n\n    }\n\n}\n\n\n","import React, { Component } from 'react';\nimport labels from '../../../../../utils/customLabels';\nimport callRemoteAction from '../../../../../utils/callRemoteAction';\nimport lsdIcons from '../../../../../utils/lsdIcons';\nimport Tooltip from \"../../../../Tooltip/Tooltip\";\nimport './styles.css';\n\nclass NewTerritory extends Component {\n\n    constructor() {\n        super();\n        this.state = { addingDisabled: false };\n    }\n\n    render() {\n\n        let buttonOrSpinner = <button className=\"guided-setup-button guided-setup-button_neutral\" onClick={this.__addNewTerritory.bind(this)}>{labels.NewTerritoryButton}</button>;\n\n        if (this.state.addingDisabled) {\n            buttonOrSpinner = (\n                <span className=\"add-new-saving\">\n                    <img src={lsdIcons.spinner}/>\n                    {labels.SavingTerritory}\n                </span>\n            )\n        }\n\n\n        return (\n            <div>\n                <div className=\"add-new-territory\">\n                    <input type=\"text\" disabled={this.state.addingDisabled} placeholder={labels.addNewTerritoryPlaceholder} maxlength=\"100\" ref={ input => { this.territoryNameInput = input }} onKeyDown={this.__handleKeyboardAdd.bind(this)}/>\n                    {buttonOrSpinner}\n                </div>\n                <Tooltip text={labels.GuidedSetup_territories_add_tooltip} />\n            </div>\n        );\n    }\n\n\n    __addNewTerritory() {\n\n        if (this.state.addingDisabled) {\n            return;\n        }\n        let name = this.territoryNameInput.value;\n\n        if (!this.props.validate(name)) {\n            return;\n        }\n\n        if (name) {\n\n            this.setState({ addingDisabled: true });\n\n            callRemoteAction('addServiceTerritory', name).then(territory => {\n                this.territoryNameInput.value = '';\n                this.props.onNewAdded(territory);\n            }).catch(ex => {\n                console.error(ex);\n                if (ex.message.indexOf('System') > -1 && ex.message.indexOf('Class') > -1)\n                    alert(ex.message.substring(ex.message.indexOf('System'), ex.message.indexOf('Class')));\n                else\n                    alert(labels.wentWrongContactSysAdmin);\n            }).then(() => {\n                this.setState({ addingDisabled: false });\n            });\n\n\n        } else {\n            alert(labels.TerritoryNameCantBeBlank);\n        }\n\n    }\n\n    __handleKeyboardAdd(e) {\n\n        // if Enter is pressed\n        if (e.which === 13) {\n            this.__addNewTerritory();\n        }\n    }\n\n}\n\nexport default NewTerritory;","class DhtmlxTreeNode {\n\n    constructor(sobject) {\n\n        // dhtmlx stuff\n        this.items = [];\n        this.open = false;\n\n        // stuff from Salesforce\n        this.parent = sobject.ParentTerritoryId;\n        this.address = sobject.Address;\n        this.id = sobject.Id;\n        this.text = sobject.Name;\n        this.operatingHours = sobject.OperatingHours;\n        this.userdata = sobject;\n\n    }\n}\n\nexport default DhtmlxTreeNode;","import DhtmlxTreeNode from './DhmlxTreeNode';\n\n\nexport function treeifyTerritories(nodes) {\n\n    let dhtmlxNodes = nodes.map(m => new DhtmlxTreeNode(m)),\n        tree = [],\n        mappedArr = {};\n\n    dhtmlxNodes.forEach( territory => {\n        mappedArr[territory.id] = territory;\n        mappedArr[territory.id]['items'] = [];\n    });\n\n    for (let id in mappedArr) {\n\n        if (mappedArr.hasOwnProperty(id)) {\n\n            let mappedElem = mappedArr[id];\n            mappedElem.text = encodeHTML(mappedElem.text);\n\n            // If the element is not at the root level, add it to its parent array of items.\n            if (mappedElem.parent) {\n                mappedArr[mappedElem['parent']]['items'].push(mappedElem);\n            }\n\n            // If the element is at the root level, add it to first level elements array.\n            else {\n                tree.push(mappedElem);\n            }\n        }\n    }\n\n    return tree.sort( (a,b) => {\n        if (a.text.toLowerCase() > b.text.toLowerCase()) return 1;\n        if (a.text.toLowerCase() < b.text.toLowerCase()) return -1;\n        return 0;\n    });\n\n}\n\n\nexport function nodeToSobject(node) {\n    return {\n        ParentTerritoryId: node.pId || null,\n        Id: node.id,\n        Name: node.text,\n        operatingHoursId: node.OperatingHours && node.OperatingHours.Id\n    }\n}\n\nexport function decodeHTML(input) {\n    let domparser = new DOMParser().parseFromString(input, \"text/html\");\n    return domparser.documentElement.textContent;\n}\n\nfunction encodeHTML(s) {\n    return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n}\n\nfunction isInConsole() {\n\n    if (typeof window.sforce !== \"undefined\") {\n        return window.sforce.console.isInConsole()\n    }\n\n    return false;\n}\n\n\n// export function openConsoleTab(e, id) {\n\n//     if (isInConsole()) {\n\n//         e.preventDefault();\n\n//         window.sforce.console.generateConsoleUrl(['/' + id], function (result) {\n//             window.sforce.console.openConsoleUrl(null, result.consoleUrl, true);\n//         });\n\n//         return true;\n//     }\n\n//     return false;\n// }\n\n\n\nexport function openSObjectLink(objectId) {\n\n    let isConsole = openConsoleTab(null, objectId);\n\n    if (!isConsole) {\n        window.open('../' + objectId, '_blank');\n    }\n}\n\n// open url in console (if not in console, do nothing)\nfunction openConsoleTab(e, id) {\n\n\n    let isInConsole = (typeof window.sforce !== \"undefined\") ? window.sforce.console.isInConsole() : null;\n\n    if (isInConsole) {\n\n        if (e)\n            e.preventDefault();\n\n        window.sforce.console.generateConsoleUrl(['/' + id], function (result) {\n            if (result.success)\n                window.sforce.console.openConsoleUrl(null, result.consoleUrl, true);\n            else\n                openLightningPrimaryTab(id);\n        });\n\n        return true;\n    }\n\n    return false;\n}\n\n\nfunction openLightningPrimaryTab(id) {\n    window.sforce.console.openPrimaryTab(null, '/'+id, true);\n}","import React, { Component } from 'react';\nimport NewTerritory from './NewTerritory/NewTerritory';\nimport callRemoteAction from '../../../../utils/callRemoteAction';\nimport { treeifyTerritories, nodeToSobject } from '../../../../utils/Utils';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\n\n\nconst NO_SALESFORCE_ID_YET = 'NOT_SOBJECT';\n\nclass TerritoriesTree extends Component {\n\n    constructor() {\n        super();\n    }\n\n\n    render() {\n        return (\n            <div className=\"tree-container\">\n                <NewTerritory onNewAdded={this.__addNewTerritory.bind(this)}\n                              validate={this.__validateNewTerritory.bind(this)} />\n\n                <div id=\"dhmlxTerritoriesTree\"></div>\n            </div>\n\n        );\n    }\n\n    encodeHTML(s) {\n        return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n\n        // got new tree\n        if (!this.props.territories && nextProps.territories) {\n\n            this.territories = nextProps.territories;\n\n            this.tree = new window.dhtmlXTreeView({\n                parent: \"dhmlxTerritoriesTree\",\n                dnd: true,\n                multiselect: true,\n                context_menu: true,\n                iconset: \"font_awesome\",\n                items: treeifyTerritories(nextProps.territories)\n            });\n\n            this.__attachTreeEvents(this.tree);\n        }\n\n\n        // check if an updated territory was just saved\n        let territory = nextProps.updatedTerritory && nextProps.updatedTerritory[0];\n\n        if (territory) {\n            this.tree.setItemText(territory.Id, this.encodeHTML(territory.Name));\n            this.tree.items[territory.Id].pId = territory.ParentTerritoryId;\n            this.tree.items[territory.Id].userdata = territory;\n            //this.tree.refreshItem(territory.Id);\n        }\n\n    }\n\n\n    __validateNewTerritory(name) {\n\n        if (!name.replace(/\\s/g, '').length) {\n            alert(labels.TerritoryNameCantBeBlank);\n            return false;\n        }\n\n\n        // check if name already exist\n        for (let i=0; i<this.territories.length; i++) {\n            if (this.territories[i].Name.toUpperCase() === name.toUpperCase()) {\n                alert(labels.TerritoryNameExist);\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n\n    __attachTreeEvents(tree) {\n\n        let me = this;\n\n        // change the territories tree and save to Salesforce\n        tree.attachEvent(\"onDrop\", function (id, parentId) {\n\n            let changedTerritories = [nodeToSobject(tree.items[id])];\n\n            callRemoteAction('updateServiceTerritories', JSON.stringify(changedTerritories))\n                .then(territories => {\n                    me.props.afterSave(territories);\n                })\n                .catch(ex => {\n                    console.error(ex);\n                })\n\n        });\n\n\n        // select a territory to display its form\n        tree.attachEvent(\"onClick\", id => {\n            this.props.selectTerritoryHandler(tree.items[id], this.tree);\n            return true;\n        });\n\n        // don't allow dragging if not saved\n        this.tree.attachEvent(\"onBeforeDrag\", id => id.indexOf(NO_SALESFORCE_ID_YET) === -1);\n\n    }\n\n\n    __addNewTerritory(territory) {\n\n        this.tree.addItem(territory.Id, this.encodeHTML(territory.Name));\n        this.tree.selectItem(territory.Id);\n\n        this.tree.items[territory.Id].userdata = territory;\n        this.props.selectTerritoryHandler(this.tree.items[territory.Id], this.tree);\n\n        this.territories.push(territory);\n        this.props.afterSave([territory]);\n\n    }\n}\n\nexport default TerritoriesTree;\n","import callRemoteAction from '../utils/callRemoteAction';\n\nclass OperatingHours {\n\n    constructor() {\n        this.synced = false;\n    }\n\n    get() {\n\n        if (this.synced) {\n            return new Promise( resolve => resolve(this.operatingHours) );\n        }\n\n\n        return new Promise( (resolve, reject) => {\n\n            callRemoteAction('getOperatingHours').then(operatingHours => {\n                this.operatingHours = operatingHours;\n                this.synced = true;\n                resolve(this.operatingHours);\n            }).catch(ex => {\n                this.synced = false;\n                console.error('Unable to get operating hours');\n                reject(ex);\n            });\n\n        });\n    }\n\n\n    addNewOh(oh) {\n        if (this.operatingHours) {\n            this.operatingHours.push(oh);\n        }\n    }\n\n\n    getNow() {\n        return this.operatingHours;\n    }\n\n}\n\nlet operatingHours = new OperatingHours();\n\nexport default operatingHours;","let timezoneList = window.timezoneList;\nexport {timezoneList};\n\nlet mandatoryRules = window.mandatoryRules;\nexport {mandatoryRules};","import React, { Component } from 'react';\nimport operatingHours from '../../data/OperatingHours';\nimport labels from '../../utils/customLabels';\nimport {timezoneList} from '../../utils/miscSalesforceObjects';\nimport Tooltip from \"../Tooltip/Tooltip\";\n\nimport './styles.css';\n\nclass OperatingHoursSelect extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { operatingHours: [] , defaultHours: props.selected};\n    }\n\n\n    render() {\n        return (\n            <div className=\"oh-form\">\n                <div className=\"ohs-label\">{labels.OperatingHoursLabel}\n                    <Tooltip text={labels.GuidedSetup_appt_booking_oh_tooltip} />\n                </div>\n                <div className=\"ohs-input\">\n                    <select value={this.state.defaultHours}\n                            onChange={this.__onTerritoryChanged.bind(this)}\n                            ref={ input => { this.selectedOperatingHours = input }} >\n                                {this.__generateOptions()}\n                    </select>\n                </div>\n            </div>\n        );\n    }\n\n\n    // will be called when new territory is selected\n    componentWillReceiveProps(nextProps) {\n\n        this.setState(Object.assign({}, this.state, { defaultHours: nextProps.selected } ));\n\n        // save with default OH if new\n        // if (!this.props.selected && this.state.operatingHours.length > 0) {\n        //     this.props.onChange(this.state.operatingHours[0].Id);\n        // }\n    }\n\n\n    componentDidMount() {\n\n        operatingHours.get().then(oh => {\n            this.setState({ operatingHours: oh , defaultHours: this.props.selected || oh[0].Id });\n\n            // save with default OH if new\n            if (!this.props.selected && this.state.operatingHours.length > 0) {\n                this.props.onChange(this.state.operatingHours[0].Id);\n            }\n\n        });\n\n    }\n\n\n    componentWillUpdate(nextProps) {\n\n        if (JSON.stringify(this.props.addNewOh) !== JSON.stringify(nextProps.addNewOh)) {\n            operatingHours.addNewOh(nextProps.addNewOh);\n            this.setState(Object.assign({}, this.state, { operatingHours: operatingHours.getNow() } ));\n        }\n\n\n\n    }\n\n\n\n    __generateOptions() {\n\n        let options = this.props.multiselect ? [<option value='none'>{labels.SelectOperatingHours}</option>] : [];\n\n        this.state.operatingHours\n            .sort( (a,b) => a.Name.toUpperCase() <= b.Name.toUpperCase() ? -1 : 1)\n            .forEach(oh => {\n\n                if (this.props.dontShowTz) {\n                    options.push(<option value={oh.Id}>{oh.Name}</option>);\n                } else {\n                    options.push(<option value={oh.Id}>{oh.Name} {OperatingHoursSelect.__findTzOptionLabel(oh.TimeZone)}</option>);\n                }\n\n\n        });\n\n        return options;\n\n    }\n\n\n    static __findTzOptionLabel(tz) {\n\n        for (let i=0; i<timezoneList.length; i++) {\n            if (timezoneList[i].value === tz) {\n                return timezoneList[i].label.substring(0,11);\n            }\n        }\n\n    }\n\n\n    __onTerritoryChanged() {\n\n        if (this.props.onChange) {\n            this.props.onChange(this.selectedOperatingHours.value);\n        }\n    }\n\n}\n\n\nexport default OperatingHoursSelect;","import React, { Component } from 'react';\nimport './styles.css';\nimport lsdIcons from '../../utils/lsdIcons';\n\nclass Lightbox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n\n        if (!this.props.show) {\n            return null;\n        }\n\n        let styles = {\n                'height': this.props.height,\n                'max-height': this.props.maxHeight,\n                'width': this.props.width\n            },\n\n            closeContainerStyle = {\n                width: Number.parseInt(this.props.width) + 30\n            };\n\n\n\n        return (\n\n            <div className=\"lightbox-black\">\n\n                <div className=\"lightbox-close-container\" style={closeContainerStyle}>\n                    <svg aria-hidden=\"true\" className=\"slds-icon lightbox-close-icon\" onClick={this.__handleVisibility.bind(this)}>\n                        <use href={lsdIcons.close}></use>\n                    </svg>\n                </div>\n\n\n                <div\n                    className=\"lightbox-container\"\n                    style={styles}>\n                    {this.props.children}\n                </div>\n\n            </div>\n        );\n\n    }\n\n\n    __handleVisibility() {\n        this.props.handleVisibility();\n    }\n\n}\n\n\nexport default Lightbox;","import React, { Component } from 'react';\nimport './styles.css';\n// import labels from '../../utils/customLabels';\n\n\n\nclass TimeSelect extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hours: props.hours || 8,\n            minutes: props.minutes || 0,\n            ampm: props.ampm ? props.ampm : null\n        }\n    }\n\n\n    render() {\n\n        let hoursOptions = [],\n            minutesOptions = [],\n            hours = this.props.ampm ? 12 : 24;\n\n\n        for (let i=0; i<hours; i++) {\n            hoursOptions.push(<option value={i}>{displayTwoDigits(i)}</option>);\n        }\n\n\n        for (let i=0; i<60; i+=10) {\n            minutesOptions.push(<option value={i}>{displayTwoDigits(i)}</option>);\n        }\n\n\n        let ampmSelect = !this.props.ampm ? null : (\n            <div className=\"time-container-thingy minutes-select\">\n                <select value={this.state.ampm}\n                        onChange={this.__onTimeChanged.bind(this)}\n                        ref={ input => { this.selectAmpm = input }}>\n                    <option value=\"AM\">AM</option>\n                    <option value=\"PM\">PM</option>\n                </select>\n            </div>\n        );\n\n\n        return (\n\n            <span>\n                <div className=\"time-container-thingy\">\n                    <select\n                        value={this.state.hours}\n                        onChange={this.__onTimeChanged.bind(this)}\n                        ref={ input => { this.selectHours = input }}>\n                            {hoursOptions}\n                    </select>\n                </div>\n                :\n                <div className=\"time-container-thingy minutes-select\">\n                    <select\n                        value={this.state.minutes}\n                        onChange={this.__onTimeChanged.bind(this)}\n                        ref={ input => { this.selectMinutes = input }}>\n                            {minutesOptions}\n                    </select>\n                </div>\n                {ampmSelect}\n            </span>\n        );\n\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if  (JSON.stringify(nextState) !== JSON.stringify(this.state)) {\n            this.props.onChange(nextState);\n        }\n\n    }\n\n\n    __onTimeChanged() {\n\n        this.setState({\n            hours: this.selectHours.value,\n            minutes: this.selectMinutes.value,\n            ampm: this.selectAmpm ? this.selectAmpm.value : null,\n        });\n    }\n\n}\n\nfunction displayTwoDigits(n) {\n    if (n < 10) {\n        return '0' + n;\n    }\n\n    if (n === 24) {\n        return '00';\n    }\n\n    return n;\n}\n\n\nexport default TimeSelect;","import React, { Component } from 'react';\nimport TimeSelect from '../TimeSelect/TimeSelect';\nimport './styles.css';\nimport labels from '../../utils/customLabels';\nimport {timezoneList} from '../../utils/miscSalesforceObjects';\nimport lsdIcons from '../../utils/lsdIcons';\nimport callRemoteAction from '../../utils/callRemoteAction';\nimport operatingHours from '../../data/OperatingHours';\nimport Tooltip from \"../Tooltip/Tooltip\";\n\n\n\n\nclass OperatingHoursCreator extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.isAmpm = window.isAMPM;\n\n        this.state = {\n\n            name: '',\n            isSaving: false,\n            timezone: 'GMT',\n\n            days: {\n                Monday: true,\n                Tuesday: true,\n                Wednesday: true,\n                Thursday: true,\n                Friday: true,\n                Saturday: false,\n                Sunday: false\n            },\n\n            slotSize: props.createSlots ? 1 : 0,\n\n            from: {\n                hours: 7,\n                minutes: 0,\n                ampm: this.isAmpm ? 'AM' : null,\n            },\n\n            to: {\n                hours: 11,\n                minutes: 0,\n                ampm: this.isAmpm ? 'PM' : null,\n            }\n        };\n\n\n        this.timeZoneListOptions = [];\n\n        timezoneList.forEach(tz => {\n            this.timeZoneListOptions.push(<option value={tz.value}>{tz.label}</option>);\n        });\n\n    }\n\n\n    render() {\n\n        let DaysMiniComp = Object.keys(this.state.days).map(day => {\n            return (\n                <span onClick={this.__toggleDay.bind(this, day)}\n                      className={this.state.days[day] ? 'ohc-day-selected' : 'ohc-day-not-selected'}>\n                    {labels.Days[day]}\n                </span>\n            )\n        });\n\n        let savingElement = this.state.isSaving ? (\n            <div className=\"ohc-saving-container\">\n                <img className=\"ohc-saving-spinner\" src={lsdIcons.spinner} />\n                {labels.OnboardingSaving}\n            </div>) : null;\n\n\n        let timezoneDiv = this.props.hideTimezone ? (<div>{labels.GuidedSetup_appt_booking_timezone_info}</div>) :  (\n            <div>\n                {labels.ObTimezone}\n                <Tooltip text={labels.ObAppBookingTimezoneExplain} tipPosition=\"right\" />\n                <div className=\"time-container-thingy ohc-select-tz\">\n                    <select value={this.state.timezone}\n                            onChange={this.__tzChanged.bind(this)}\n                            ref = {input => this.timezoneSelect = input}>\n                        {this.timeZoneListOptions}\n                    </select>\n                </div>\n            </div>\n        );\n\n        let daysTooltip = this.props.createSlots ? null : (<Tooltip text={labels.guidedsetup_operatinghours_days_tooltip} />);\n\n\n        return (\n            <div className=\"operating-hours-creator\">\n\n                <h1>{labels.CreateNewOH}</h1>\n\n                <div id=\"ohc-content\">\n                    {this.__setIntroLabel()}\n\n\n                    <div>\n                        {labels.OnboardingOHPNameLabel}\n                        <input type=\"text\"\n                               onChange={this.__onNameChanged.bind(this)}\n                               ref={ input => { this.nameInput = input }}\n                        />\n                    </div>\n\n                    <div id=\"ohc-days\">\n                        <div className=\"ohc-days-inner\">\n                            {labels.WorkingOn} {DaysMiniComp}\n                            {daysTooltip}\n                        </div>\n\n                        <div>\n\n                            {this.__createSlots()}\n                            <div className=\"time-container\">\n                                {labels.OBFrom}\n                                <TimeSelect ampm={this.state.from.ampm} hours={this.state.from.hours} onChange={this.__timeFromChanged.bind(this)} />\n                                {labels.OBTo}\n                                <TimeSelect ampm={this.state.to.ampm} hours={this.state.to.hours} onChange={this.__timeToChanged.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n\n                    {timezoneDiv}\n\n                    {savingElement}\n\n                </div>\n\n\n                <button className=\"ohc-button-location guided-setup-button guided-setup-button_brand\" onClick={this.__saveOperatingHours.bind(this)}>{labels.Save}</button>\n\n\n            </div>\n        )\n\n    }\n\n\n    __toggleDay(selectedDay) {\n\n        let days = Object.assign({}, this.state.days);\n        days[selectedDay] = !days[selectedDay];\n\n        this.setState(Object.assign({}, this.state, {days}));\n    }\n\n\n    __timeToChanged(time) {\n        this.setState(Object.assign({}, this.state, {to: time}));\n    }\n\n    __timeFromChanged(time) {\n        this.setState(Object.assign({}, this.state, {from: time}));\n    }\n\n    __onNameChanged() {\n        this.setState(Object.assign({}, this.state, {name: this.nameInput.value}));\n    }\n\n    __tzChanged() {\n        this.setState(Object.assign({}, this.state, {timezone: this.timezoneSelect.value}));\n    }\n\n    __saveOperatingHours() {\n\n        if (this.state.isSaving) {\n            return;\n        }\n\n        if (!this.state.name) {\n            alert(labels.OhNameNotBlank);\n            return;\n        }\n\n        let opHours = operatingHours.getNow();\n        for (let i=0; i<opHours.length; i++) {\n            if (opHours[i].Name === this.state.name) {\n                alert(labels.AlreadyOHwithThatName);\n                return;\n            }\n        }\n\n        if (!this.__areHoursValid()) {\n            alert(labels.HoursFieldsHofefing);\n            return;\n        }\n\n\n        let days = [],\n            fromConverted = this.__convertAmpm(this.state.from),\n            toConverted = this.__convertAmpm(this.state.to);\n\n        for (let day in this.state.days) {\n            if (this.state.days[day]) {\n                days.push(day);\n            }\n        }\n\n        if (days.length === 0) {\n            alert(labels.NoDaysSelected);\n            return;\n        }\n\n        let parameters = [\n            this.state.name,\n            days,\n            [Number.parseInt(fromConverted.hours) , Number.parseInt(fromConverted.minutes), Number.parseInt(toConverted.hours), Number.parseInt(toConverted.minutes)],\n            this.state.slotSize,\n            this.state.timezone\n        ];\n\n\n        if (Number.parseInt(fromConverted.hours) + Number.parseInt(this.state.slotSize) > Number.parseInt(toConverted.hours) || Number.parseInt(fromConverted.hours) + Number.parseInt(this.state.slotSize) == Number.parseInt(toConverted.hours) &&  Number.parseInt(fromConverted.minutes) >= Number.parseInt(toConverted.minutes)) {\n            alert(labels.OHCreatorBadHours);\n            return;\n        }\n\n\n        this.setState({isSaving: true});\n\n        callRemoteAction('saveOperatingHours', ...parameters).then(operatingHours => {\n            this.setState({isSaving: false});\n            this.props.afterSave(operatingHours);\n        }).catch(ex => {\n            this.setState({isSaving: false});\n           console.error(ex);\n        });\n\n    }\n\n\n    __areHoursValid() {\n\n        let fromConverted = this.__convertAmpm(this.state.from),\n            toConverted = this.__convertAmpm(this.state.to);\n\n\n        if (fromConverted.hours > toConverted.hours) {\n            return false;\n        }\n\n        if (fromConverted.hours == toConverted.hours && fromConverted.minutes >= toConverted.minutes) {\n            return false;\n        }\n\n        return true;\n\n    }\n\n    __convertAmpm(times) {\n\n        let ret = {\n            minutes: Number.parseInt(times.minutes),\n            hours: Number.parseInt(times.hours),\n            ampm: times.ampm\n        };\n\n\n        if (times.ampm && times.ampm === 'PM') {\n            ret.hours += 12;\n        }\n\n        return ret;\n\n    }\n\n    __setIntroLabel() {\n        if (!this.props.createSlots) {\n            return (<h2>{labels.CreateNewOpHoursExplain}</h2>);\n        }\n        else {\n            return (<h2>{labels.GuidedSetup_appt_booking_oh_lightbox_intro}</h2>);\n        }\n    }\n\n    __createSlots() {\n\n        if (!this.props.createSlots) {\n            return null;\n        }\n\n        let slotHoursOptions = [1,2,3,4,5,6,7,8,9, 10, 11, 12].map(t => <option value={t}>{t}</option>);\n\n\n        return (\n            <span>\n                {labels.OHCreateSlots}\n                <div className=\"time-container-thingy slots-creator-select\">\n                    <select value={this.state.slotSize} onChange={this.__slotsSizeChanged.bind(this)}>\n                        { slotHoursOptions }\n                    </select>\n                </div>\n                {labels.OHCreateSlotsHours}\n            </span>\n        )\n    }\n\n\n    __slotsSizeChanged(e) {\n        this.setState({slotSize: e.target.value});\n    }\n\n}\n\n\n\nexport default OperatingHoursCreator;","import React, { Component } from 'react';\nimport OperatingHoursSelect from '../../../OperatingHoursSelect/OperatingHoursSelect';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\nimport debounce from 'lodash/debounce';\nimport callRemoteAction from '../../../../utils/callRemoteAction';\nimport Lightbox from '../../../Lightbox/Lightbox';\nimport OperatingHoursCreator from '../../../OperatingHoursCreator/OperatingHoursCreator';\nimport { openSObjectLink } from '../../../../utils/Utils';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\n\n\nclass TerritoryForm extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            territory: {\n                Id: null,\n                Name: null,\n                OperatingHoursId: null,\n                Address: {\n                    street: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                }\n            },\n\n            showWorkingHoursCreator: false,\n\n            addNewOh: null\n\n        };\n\n        if (props.territory && props.territory.userdata) {\n            for (let key in props.territory.userdata) {\n                this.state.territory[key] = props.territory.userdata[key];\n            }\n        }\n\n        this.nameBeforeSave = '';\n\n        this.addressInputs = {};\n\n        this.__saveChanges = debounce(this.__saveChanges, 2000);\n\n    }\n\n\n    render() {\n\n        if (!this.props.territory) {\n            return (\n                <div className=\"territory-form\">\n                    <div className=\"select-a-territory\">\n                        {labels.NoTerritorySelectedText}\n                    </div>\n                </div>\n            )\n        }\n\n\n        let googleMapsLink = null;\n        if (this.state.territory.Longitude && this.state.territory.Latitude) {\n            googleMapsLink = (<a className=\"open-external-link locate-in-gmap\" href={'http://maps.google.com/?ll=' + this.state.territory.Latitude + ',' + this.state.territory.Longitude} target=\"_blank\">{labels.LocateInGmap}</a>);\n        }\n\n\n\n        return (\n            <div className=\"territory-form form-arrow\">\n\n                <div className=\"territory-form-header\">\n                    <h2 className=\"truncate\">{this.nameBeforeSave}</h2>\n                    <span className=\"truncate\" onClick={this.__openSObjectLink.bind(this, this.state.territory.Id)}>{labels.Open_Service_Territory_Record}</span>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.OpHoursName}</div>\n                    <div className=\"form-input\">\n                        <input maxlength=\"100\" type=\"text\" value={this.state.territory.Name} ref={ input => { this.territoryName = input }} onChange={this.__territoryNameChanged.bind(this)} />\n                    </div>\n                </div>\n\n                <OperatingHoursSelect\n                    multiselect={false}\n                    addNewOh={this.state.addNewOh}\n                    selected={this.state.territory.OperatingHoursId}\n                    onChange={this.__operationHoursChanged.bind(this)} />\n\n                <div className=\"create-operating-hours\">\n\n                    <div>\n                        <span className=\"open-external-link\" onClick={this.__openSObjectLink.bind(this, this.state.territory.OperatingHoursId)}>{labels.Open_Operating_Hours_Record}</span>\n                    </div>\n\n                    <div onClick={this.__openWorkingHoursCreator.bind(this)}>\n                        {labels.CreateNewOH}\n                    </div>\n                </div>\n\n                <Lightbox show={this.state.showWorkingHoursCreator} height=\"420\" width=\"680\" handleVisibility={this.__closeWorkingHoursCreator.bind(this)}>\n                    <OperatingHoursCreator afterSave={this.__afterSaveOperatingHours.bind(this)} />\n                </Lightbox>\n\n\n\n\n                <div className=\"territory-address-mafrid\">\n                    <h2 className=\"form-territory-address\">{labels.ObTerritoryAddress}</h2> \n                    <Tooltip text={labels.Territory_Address_Header_tooltip} />\n                    {googleMapsLink}\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.ObAddress}</div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" value={this.state.territory.Address.street} ref={ input => { this.addressInputs.street = input }} onChange={this.__addressFieldChanged.bind(this, 'street')} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.ObCity}</div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" value={this.state.territory.Address.city} ref={ input => { this.addressInputs.city = input }} onChange={this.__addressFieldChanged.bind(this, 'city')} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.ObStateProvince}</div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" value={this.state.territory.Address.state} ref={ input => { this.addressInputs.state = input }} onChange={this.__addressFieldChanged.bind(this, 'state')} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.ObZip}</div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" value={this.state.territory.Address.postalCode} ref={ input => { this.addressInputs.postalCode = input }} onChange={this.__addressFieldChanged.bind(this, 'postalCode')} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.ObCountry}</div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" value={this.state.territory.Address.country} ref={ input => { this.addressInputs.country = input }} onChange={this.__addressFieldChanged.bind(this, 'country')} />\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n\n\n    componentWillMount() {\n        if (this.props && this.props.territory && this.props.territory.userdata) {\n            this.nameBeforeSave = this.props.territory.userdata.Name;\n        }\n    }\n\n    // will be called when a new territory was selected on the tree\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.territory && nextProps.territory.userdata) {\n\n            this.nameBeforeSave = nextProps.territory.userdata.Name;\n\n            let t = {\n                territory: nextProps.territory.userdata\n            };\n\n            if (t.territory.Address) {\n                t.territory.Address.street = t.territory.Address.street || '';\n                t.territory.Address.city = t.territory.Address.city || '';\n                t.territory.Address.state = t.territory.Address.state || '';\n                t.territory.Address.postalCode = t.territory.Address.postalCode || '';\n                t.territory.Address.country = t.territory.Address.country || '';\n            } else {\n                t.territory.Address = {\n                    street: '',\n                    city: '',\n                    state: '',\n                    postalCode: '',\n                    country: '',\n                };\n            }\n\n            this.setState(Object.assign({}, this.state, t));\n        }\n    }\n\n\n    __addressFieldChanged(field) {\n        let territory = Object.assign({}, this.state.territory);\n        territory.Address[field] = this.addressInputs[field].value;\n\n        this.setState( Object.assign({}, this.state, {territory} ) );\n        this.__saveChanges();\n    }\n\n\n    __territoryNameChanged() {\n        let territory = Object.assign({}, this.state.territory);\n        territory.Name = this.territoryName.value;\n\n        this.setState( Object.assign({}, this.state, {territory} ) );\n        this.__saveChanges();\n    }\n\n    __operationHoursChanged(operationHoursId) {\n\n        let territory = Object.assign({}, this.state.territory);\n        territory.OperatingHoursId = operationHoursId;\n\n        this.setState( Object.assign({}, this.state, {territory} ));\n        this.__saveChanges();\n    }\n\n\n    __saveChanges() {\n\n        if (this.state.territory.Name === null) {\n            return;\n        }\n\n        if (this.state.territory.Name === '') {\n            alert(labels.TerritoryNameCantBeBlank);\n            return;\n        }\n\n        // check if name already exist\n        for (let i=0; i<this.props.territories.length; i++) {\n            if (this.props.territories[i].Name.toUpperCase() === this.state.territory.Name.toUpperCase() && this.props.territories[i].Id !== this.state.territory.Id) {\n                alert(labels.TerritoryNameExist);\n                return;\n            }\n        }\n\n        let territoryToSave = Object.assign({}, this.state.territory);\n        delete territoryToSave['OperatingHours'];\n        delete territoryToSave.Longitude;\n        delete territoryToSave.Latitude;\n\n        if (territoryToSave.Address) {\n            Object.assign(territoryToSave, territoryToSave.Address);\n            delete territoryToSave.Address;\n        }\n\n        callRemoteAction('updateServiceTerritories', JSON.stringify([territoryToSave]))\n            .then(territories => {\n                this.props.afterSave(territories);\n            })\n            .catch(ex => {\n                console.error(ex);\n            })\n    }\n\n    __openSObjectLink(id, ev) {\n        ev.preventDefault();\n        openSObjectLink(id);\n    }\n\n\n    __openWorkingHoursCreator() {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: true} ));\n    }\n\n    __closeWorkingHoursCreator() {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: false} ));\n    }\n\n    __afterSaveOperatingHours(oh) {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: false, addNewOh: oh } ));\n        this.props.afterOpAdded();\n    }\n}\n\nexport default TerritoryForm;\n","import React, { Component } from 'react';\nimport OperatingHoursSelect from '../../../OperatingHoursSelect/OperatingHoursSelect';\nimport './styles.css';\nimport labels from '../../../../utils/customLabels';\nimport callRemoteAction from '../../../../utils/callRemoteAction';\nimport Lightbox from '../../../Lightbox/Lightbox';\nimport OperatingHoursCreator from '../../../OperatingHoursCreator/OperatingHoursCreator';\n\n\nclass BulkTerritoriesActions extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedOperatingHours: BulkTerritoriesActions.__mutualTerritoriesHours(props.territories),\n            territories: props.territories,\n            showWorkingHoursCreator: false,\n            addNewOh: null\n        }\n    }\n\n    render() {\n\n        let externalDiv = null;\n\n        if (this.state.selectedOperatingHours !== 'none') {\n            externalDiv = (<div>\n                <a className=\"open-external-link\" href={'../' + this.state.selectedOperatingHours} target=\"_blank\">{labels.OpenInLayout}</a>\n            </div>);\n        }\n\n        return (\n            <div className=\"bulk-ter-actions\">\n                <h2>{labels.XSelectedTerritories.replace('$0',this.props.territories.length)}</h2>\n\n                <OperatingHoursSelect multiselect={true} selected={this.state.selectedOperatingHours} onChange={this.__operationHoursChanged.bind(this)} addNewOh={this.state.addNewOh} />\n\n\n                <div className=\"create-operating-hours\">\n\n                    {externalDiv}\n\n                    <div onClick={this.__openWorkingHoursCreator.bind(this)}>\n                        {labels.CreateNewOH}\n                    </div>\n                </div>\n\n                <Lightbox show={this.state.showWorkingHoursCreator} height=\"420\" width=\"650\" handleVisibility={this.__closeWorkingHoursCreator.bind(this)}>\n                    <OperatingHoursCreator afterSave={this.__afterSaveOperatingHours.bind(this)} />\n                </Lightbox>\n\n            </div>\n        );\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            selectedOperatingHours: BulkTerritoriesActions.__mutualTerritoriesHours(nextProps.territories),\n            territories: nextProps.territories,\n            showWorkingHoursCreator: this.state.showWorkingHoursCreator,\n            addNewOh: this.state.addNewOh\n        });\n    }\n\n    __operationHoursChanged(ohId) {\n\n        if (ohId === 'none') {\n            return;\n        }\n\n        let territoryToSave = this.state.territories.map(t => {\n            return {\n                Id: t.Id,\n                OperatingHoursId: ohId\n            }\n        });\n\n        callRemoteAction('updateServiceTerritories', JSON.stringify(territoryToSave))\n            .then(territories => {\n                this.props.afterSave(territories);\n            })\n            .catch(ex => {\n                console.error(ex);\n            })\n\n\n\n    }\n\n\n    __openWorkingHoursCreator() {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: true} ));\n    }\n\n    __closeWorkingHoursCreator() {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: false} ));\n    }\n\n    __afterSaveOperatingHours(oh) {\n        this.setState(Object.assign({}, this.state, {showWorkingHoursCreator: false, addNewOh: oh } ));\n    }\n\n\n    static __mutualTerritoriesHours(territories) {\n\n        let oh = territories[0].OperatingHoursId;\n\n        for (let i=1; i<territories.length; i++) {\n            if (oh !== territories[i].OperatingHoursId) {\n                return 'none';\n            }\n        }\n\n        return oh;\n\n    }\n}\n\n\n\n\n\nexport default BulkTerritoriesActions;","import React, { Component } from 'react';\nimport './styles.css';\n\n\nexport default class SuccessMessage extends Component {\n\n    constructor() {\n        super();\n\n    }\n\n\n    render() {\n\n        if (this.props.show) {\n            return (\n                <div className=\"ob-success-message\">\n                    {this.props.text}\n                </div>\n            )\n        }\n\n\n        return null;\n\n    }\n\n}","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport TerritoriesTree from './TerritoriesTree/TerritoriesTree';\nimport TerritoryForm from './TerritoryForm/TerritoryForm';\nimport labels from '../../../utils/customLabels';\nimport lsdIcons from '../../../utils/lsdIcons';\nimport BulkTerritoriesActions from './BulkTerritoriesActions/BulkTerritoriesActions';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport SuccessMessage from \"../../SuccessMessage/SuccessMessage\";\n\n\nclass DefineTerritories extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            selectedTerritory: null,\n            lastSaved: null ,\n            territories: null,\n            showOpSuccess: false,\n        };\n\n        //this.moreText = (<div><ul><li>{labels.TerritoriesMore1}</li><li>{labels.TerritoriesMore2}</li></ul></div>);\n\n        this.icon = {\n            url: lsdIcons.territory,\n            style: {\n                background: '#7e8be4'\n            }\n        }\n    }\n\n    componentDidMount() {\n\n        callRemoteAction('getServiceTerritories').then(territories => {\n            this.setState(Object.assign({}, this.state, { territories }))\n        }).catch(ex => {\n            console.error(ex);\n        });\n\n    }\n\n    render() {\n\n\n        let rightSide = null;\n\n        if (Array.isArray(this.state.selectedTerritory) && this.state.selectedTerritory.length > 1) {\n\n            rightSide = (\n                <BulkTerritoriesActions\n                territories={this.state.selectedTerritory}\n                afterOpAdded={this.__showSuccess.bind(this)}\n                afterSave={this.__handleFormSaved.bind(this)} />\n            );\n\n        } else {\n            rightSide = (<TerritoryForm\n                territory={this.state.selectedTerritory}\n                afterSave={this.__handleFormSaved.bind(this)}\n                afterOpAdded={this.__showSuccess.bind(this)}\n                territories={this.state.territories} />);\n        }\n\n        return (\n            <div>\n\n                <SuccessMessage show={this.state.showOpSuccess} text={labels.OpSavedGood} />\n\n                <PageHeader\n                    title={labels.TerritoriesDefenition}\n                    text={labels.TerritoriesDefenitionExplanation}\n                    icon={this.icon}\n                    secondParagraph={labels.GuidedSetup_terittories_second_paragraph} />\n\n                <TerritoriesTree\n                    selectTerritoryHandler={this.__selectTerritory.bind(this)}\n                    updatedTerritory={this.state.lastSaved}\n                    afterSave={this.__handleFormSaved.bind(this)}\n                    territories={this.state.territories} />\n\n                {rightSide}\n            </div>\n        );\n\n    }\n\n\n    __showSuccess() {\n        this.setState({showOpSuccess:true});\n        window.setTimeout(() => this.setState({showOpSuccess:false}), 3000);\n    }\n\n\n    __selectTerritory(territory, tree) {\n\n        setTimeout(() => {\n\n            let selectedIds = tree.getSelectedId();\n\n            if (selectedIds.length > 1) {\n\n                let territories = this.state.territories.filter(t => selectedIds.indexOf(t.Id) > -1);\n\n                this.setState({ selectedTerritory: territories });\n            } else {\n\n                for (let i=0; i<this.state.territories.length; i++) {\n                    if (this.state.territories[i].Id === territory.id) {\n                        territory.userdata = this.state.territories[i];\n                        break;\n                    }\n                }\n\n                this.setState({ selectedTerritory: territory });\n            }\n\n        }, 0);\n\n    }\n\n    __handleFormSaved(territory) {\n\n        let territoriesToAdd = [],\n            selectedTerritories = [];\n\n        for (let i=0; i<territory.length; i++) {\n\n            let found = false;\n\n            for (let j=0; j<this.state.territories.length; j++) {\n\n                if (this.state.territories[j].Id === territory[i].Id) {\n                    this.state.territories[j] = territory[i];\n                    found = true;\n                }\n\n            }\n\n            if (!found) {\n                territoriesToAdd.push(territory[i]);\n            }\n\n        }\n\n        let combinedTerritories = territoriesToAdd.concat(this.state.territories);\n\n\n        // reselect\n        if (Array.isArray(this.state.selectedTerritory)) {\n\n            for (let i=0; i<this.state.selectedTerritory.length; i++) {\n                for (let j=0; j<combinedTerritories.length; j++) {\n\n                    if (combinedTerritories[j].Id === this.state.selectedTerritory[i].Id) {\n                        selectedTerritories.push(combinedTerritories[j]);\n                    }\n\n                }\n            }\n        }\n\n        // single territory selected\n        else if (this.state.selectedTerritory) {\n            for (let i=0; i<combinedTerritories.length; i++) {\n                if (this.state.selectedTerritory.Id === combinedTerritories[i].Id) {\n                    selectedTerritories = combinedTerritories[i];\n                    break;\n                }\n            }\n        }\n\n\n\n        this.setState(Object.assign(\n                {},\n                this.state, {lastSaved: territory},\n                {territories: combinedTerritories, selectedTerritory: selectedTerritories}\n            )\n        );\n    }\n\n}\n\nexport default DefineTerritories;","import callRemoteAction from '../utils/callRemoteAction';\n\nclass WorkType {\n\n    constructor() {\n        this.synced = false;\n    }\n\n    get() {\n\n        if (this.synced) {\n            return new Promise( resolve => resolve(this.workTypes) );\n        }\n\n\n        return new Promise( (resolve, reject) => {\n\n            callRemoteAction('getWorkTypes').then(workTypes => {\n                this.workTypes = workTypes;\n                this.synced = true;\n                resolve(this.workTypes);\n            }).catch(ex => {\n                this.synced = false;\n                console.error('Unable to get work types');\n                reject(ex);\n            });\n\n        });\n    }\n\n}\n\nlet workType = new WorkType();\n\nexport default workType;","import callRemoteAction from '../utils/callRemoteAction';\n\nclass Skills {\n\n    constructor() {\n        this.synced = false;\n    }\n\n    get() {\n\n        if (this.synced) {\n            return new Promise( resolve => resolve(this.skills) );\n        }\n\n\n        return new Promise( (resolve, reject) => {\n\n            callRemoteAction('getSkills').then(skills => {\n                this.skills = skills;\n                this.synced = true;\n                resolve(this.skills);\n            }).catch(ex => {\n                this.synced = false;\n                console.error('Unable to get skills');\n                reject(ex);\n            });\n\n        });\n    }\n\n}\n\nlet skills = new Skills();\n\nexport default skills;\n","import React, { Component } from 'react';\nimport labels from '../../../../../utils/customLabels';\nimport callRemoteAction from '../../../../../utils/callRemoteAction';\nimport '../../../../../globalStyles.css';\n\nclass NewWorkType extends Component {\n\n    constructor() {\n        super();\n        this.state = { addingDisabled: false };\n    }\n\n    render() {\n        let buttonClass = this.state.addingDisabled ? 'guided-setup-button guided-setup-button_neutral add-new-disabled' : 'guided-setup-button guided-setup-button_neutral';\n\n        return (\n            <form className=\"add-new\" onSubmit={this.__addNewWorkType.bind(this)}>\n                <input placeholder={labels.addNewWorkTypePlaceholder} maxlength=\"100\" type=\"text\" ref={ input => { this.workTypeNameInput = input }} />\n                <button className={buttonClass}>{labels.NewWorkTypeButton}</button>\n            </form>\n        );\n    }\n\n\n    __addNewWorkType(event) {\n        event.preventDefault();\n\n        if (this.state.addingDisabled) {\n            return;\n        }\n\n        let name = this.workTypeNameInput.value;\n\n        if (!this.props.validate(name)) {\n            return;\n        }\n\n        if (name) {\n\n            this.setState({ addingDisabled: true });\n\n            callRemoteAction('addWorkType', name).then(workType => {\n                console.log(workType);\n                this.workTypeNameInput.value = '';\n                this.props.onNewAdded(workType);\n            }).catch(ex => {\n                console.error(ex);\n            }).then(() => {\n                this.setState({ addingDisabled: false });\n            });\n\n        } else {\n            alert(labels.WorkTypeNameCantBeBlank);\n        }\n\n    }\n\n}\n\nexport default NewWorkType;","import React, { Component } from 'react';\nimport WorkTypeSkill from './WorkTypeSkill/WorkTypeSkill';\n\nimport './styles.css';\n\nclass WorkTypeItem extends Component {\n\n    constructor() {\n        super();\n        /*this.state = {\n            SkillRequirementsComponents: [],\n        }*/\n    }\n\n    /*componentDidMount() {\n\n        if (!this.props.worktype.SkillRequirements) {\n            return;\n        }\n\n        let SkillRequirementsComponents = this.props.worktype.SkillRequirements.map(skill => {\n\n            return (<WorkTypeSkill skill={skill}/>);\n        });\n\n        this.setState(Object.assign({}, {SkillRequirementsComponents}));\n    }*/\n\n    render() {\n\n        let selectedClass = this.props.isSelected ? 'worktype-single worktype-selected truncate' : 'worktype-single truncate';\n\n        return (\n            <div className={selectedClass} onClick={this.__selectWorkType.bind(this, this.props.worktype)}>\n                {this.props.worktype.Name}\n            </div>\n        );\n    }\n\n    __selectWorkType(workType) {\n        this.props.onSelectedWorkType(workType);\n    }\n}\n\nexport default WorkTypeItem;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass WorkTypeSkill extends Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div className=\"skill-bubble truncate\">\n                {this.props.skill.Skill.MasterLabel}\n            </div>\n        );\n    }\n\n}\n\nexport default WorkTypeSkill;\n","import React, { Component } from 'react';\nimport debounce from 'lodash/debounce';\nimport lsdIcons from '../../utils/lsdIcons';\nimport labels from '../../utils/customLabels';\nimport './styles.css';\n\nclass SearchInput extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            searchTerm: ''\n        };\n\n        this.__doSearch = debounce(this.__doSearch, 500);\n    }\n\n    __doSearch() {\n        this.props.doSearch(this.state.searchTerm);\n    }\n\n\n    __handleSearch(event) {\n        this.setState({ searchTerm: event.target.value }, () => {\n            this.__doSearch();\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <svg aria-hidden=\"true\" className=\"slds-icon search-icon\">\n                    <use href={lsdIcons.search}></use>\n                </svg>\n                <input\n                className=\"searchInput\"\n                type=\"search\"\n                placeholder={labels.search_work_types}\n                value={this.state.searchTerm}\n                onChange={this.__handleSearch.bind(this)} />\n            </div>\n        )\n    }\n}\n\nexport default SearchInput;","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport labels from '../../../../utils/customLabels';\nimport NewWorkType from './NewWorkType/NewWorkType';\nimport WorkTypeItem from './WorkTypeItem/WorkTypeItem';\nimport SearchInput from '../../../SearchInput/SearchInput';\nimport './styles.css';\n\n\nclass WorkTypesList extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            searchTerm: '',\n            selectedId: null\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.workTypes) {\n            this.allWorkTypes = nextProps.workTypes;\n        }\n    }\n\n    __renderWorkTypeItems() {\n\n        let filteredWorkTypes = this.allWorkTypes;\n\n        if (this.state.searchTerm) {\n            filteredWorkTypes = _.filter(this.allWorkTypes, wt => wt.Name.toUpperCase().indexOf(this.state.searchTerm.toUpperCase()) > -1);\n        }\n\n        return _.map(filteredWorkTypes, (wt, index) =>\n            <WorkTypeItem key={index}\n                          worktype={wt}\n                          onSelectedWorkType={this.__setSelectedWorkType.bind(this)}\n                          isSelected={this.state.selectedId == wt.Id} />);\n    }\n\n    __setSelectedWorkType(worktype) {\n        this.setState( {selectedId: worktype.Id} );\n        this.props.selectWorkType(worktype);\n    }\n\n    __addNewWorkType(workType) {\n        this.allWorkTypes.push(workType);\n        this.__setSelectedWorkType(workType);\n        this.props.afterSave([workType]);\n    }\n\n    __validateNewWorkType(name) {\n\n\n        if (!name.replace(/\\s/g, '').length) {\n            alert(labels.WorkTypeNameCantBeBlank);\n            return false;\n        }\n\n        // check if name already exist\n        for (let i=0; i<this.allWorkTypes.length; i++) {\n            if (this.allWorkTypes[i].Name.toLowerCase() === name.toLowerCase()) {\n                alert(labels.TerritoryNameExist);\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    __setSearchTerm(searchTerm) {\n        this.setState( {searchTerm} );\n    }\n\n    render() {\n\n        return (\n\n            <div className=\"worktypes-container\">\n                <NewWorkType onNewAdded={this.__addNewWorkType.bind(this)}\n                             validate={this.__validateNewWorkType.bind(this)}/>\n                <SearchInput doSearch={this.__setSearchTerm.bind(this)} />\n                <div className=\"worktype-list\">\n                    {this.__renderWorkTypeItems()}\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\nexport default WorkTypesList;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport labels from '../../../../../utils/customLabels';\n\nimport './styles.css';\n\n\nclass SkillsSelector extends Component {\n\n    constructor() {\n        super();\n\n        this.sessionId = window.sessionId;\n        this.soapEndPoint = window.soapEndPoint;\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps) {\n            this.existingSkills = _.map(newProps.requiredSkills, sk => sk.Skill['MasterLabel']);\n\n            if (this.skillsBox) {\n                this.skillsBox.removeAll();\n                if (this.existingSkills)\n                    this.skillsBox.add(this.existingSkills);\n\n                this.generateSkillSelector();\n            }\n        }\n    }\n\n    componentDidMount() {\n        //this.skillNames = _.map(this.props.skills, 'MasterLabel');\n        this.skillNames = _.reduce(this.props.skills, (obj,item) => {\n                                obj[item.MasterLabel] = item.Id;\n                                return obj;\n                            }, {});\n        this.existingSkills = _.map(this.props.requiredSkills, sk => sk.Skill['MasterLabel']);\n\n        this.generateSkillSelector();\n    }\n\n    generateSkillSelector() {\n        if (!this.skillsBox) {\n\n            this.skillsBox = new window.Taggle('skillsBox', {\n                duplicateTagClass: 'bounce',\n                placeholder: labels.EnterSkills,\n                preserveCase: true,\n                tags: this.existingSkills,\n                onBeforeTagAdd: (ev, tag) => {\n\n                    if (this.existingSkills.indexOf(tag) === -1 && !this.validSkill(tag)) {\n                        window.alert(labels.SkillSpecialChars);\n                        return false;\n                    }\n\n                   let found = _.has(this.skillNames, tag);\n                   if (!found) {\n                        if (!window.confirm(labels.ConfirmCreateNewSkill)) {\n                            return false;\n                        }\n                        else {\n                            this.__addSkill(ev, tag);\n                        }\n                   }\n                },\n                onTagAdd: (ev, tag) => {\n\n                    if (this.existingSkills.indexOf(tag) > -1)\n                        return;\n\n                    // make sure tag added by keyboard click or by mouse click\n                    if ( (ev && this.skillNames[tag])\n                        || (window.event && (window.event.target.className.indexOf('ui-menu-item') > -1 && this.skillNames[tag]))) {\n                        this.props.addRequiredSkill(this.skillNames[tag]);\n                    }\n                },\n                onTagRemove: (ev, tag) => {\n                    if (ev) {\n                        this.props.removeRequiredSkill(_.find(this.props.requiredSkills, ['SkillId', this.skillNames[tag]]));\n                    }\n                }\n            });\n\n            let container = this.skillsBox.getContainer();\n            let input = this.skillsBox.getInput();\n\n            window.$(input).autocomplete({\n                source: Object.keys(this.skillNames), // See jQuery UI documentaton for options\n                appendTo: container,\n                position: {at: \"left bottom\", of: container},\n                delay: 500,\n                select: (event, data) => {\n                    event.preventDefault();\n                    //Add the tag if user clicks\n                    if (event.which === 1) {\n                        this.skillsBox.add(data.item.value);\n                    }\n                }\n            });\n\n            // Overrides the default autocomplete filter function to\n            // search only from the beginning of the string\n            window.$.ui.autocomplete.filter = function (array, term) {\n                var matcher = new RegExp(\"\\\\b\" + window.$.ui.autocomplete.escapeRegex(term), \"i\");\n                return window.$.grep(array, function (value) {\n                    return matcher.test(value.label || value.value || value);\n                });\n            };\n        }\n    }\n\n    __addSkill(event, tag) {\n\n        if (!event) {\n            return;\n        }\n\n        // W-10177153\n        const url = window.location.origin + '/services/Soap/u/38.0';\n\n        let data = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n                        <SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"urn:sobject.partner.soap.sforce.com\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:ns2=\"urn:partner.soap.sforce.com\">\n                                <SOAP-ENV:Header>\n                                    <ns2:SessionHeader>\n                                        <ns2:sessionId>${this.sessionId}</ns2:sessionId>\n                                    </ns2:SessionHeader>\n                                </SOAP-ENV:Header>\n                                <SOAP-ENV:Body>\n                                    <ns2:create>\n\n                                        <ns2:sObjects>\n                                            <ns1:type>Skill</ns1:type>\n                                            <ns1:MasterLabel>${tag}</ns1:MasterLabel>\n                                            <ns1:DeveloperName>${window.escape(tag.split(' ').join('')).replace(/[_-]/g, \"\")}</ns1:DeveloperName>\n                                        </ns2:sObjects>\n\n                                    </ns2:create>\n                                </SOAP-ENV:Body>\n                        </SOAP-ENV:Envelope>`;\n\n        window.$.ajax({\n            url: url,\n            type: 'POST',\n            dataType: \"xml\",\n            data: data,\n            beforeSend: function (xhr) {\n                xhr.setRequestHeader('Content-Type', 'text/xml');\n                xhr.setRequestHeader('SOAPAction', '\"\"');\n            }\n        }).then(\n            ( res, textStatus, jqXHR ) => {\n                if (textStatus == 'success') {\n                    this.skillNames[tag] = window.$(jqXHR.responseText).find(\"id\").text();\n                    window.$(this.skillsBox.getInput()).autocomplete('option', 'source', Object.keys(this.skillNames));\n\n                    this.props.addRequiredSkill(this.skillNames[tag]);\n                }\n            },\n            ( jqXHR, textStatus, errorThrown ) => {\n                event.stopPropagation();\n                alert(errorThrown);\n            }\n        );\n    }\n\n\n    validSkill(name) {\n\n        let nospcae = name.split(' ').join('');\n\n        let re = /^\\w+$/;\n        return re.test(nospcae);\n    }\n\n    render() {\n        return (\n            <div className=\"skills-container\">\n                <div id=\"skillsBox\" className=\"input textarea clearfix\">\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default SkillsSelector;","let ObjectNames = window.objectNames;\n\nexport default ObjectNames;","import React, { Component } from 'react';\nimport callRemoteAction from '../../../../utils/callRemoteAction';\nimport labels from '../../../../utils/customLabels';\nimport '../../../../globalStyles.css';\nimport debounce from 'lodash/debounce';\nimport SkillsSelector from './SkillsSelector/SkillsSelector';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\nimport ObjectNames from \"../../../../utils/ObjectNames\";\nimport './styles.css';\nimport { openSObjectLink } from '../../../../utils/Utils';\n\n\nclass WorkTypeForm extends Component {\n\n    constructor() {\n\n        super();\n\n        this.tooltipTextDueDate = (<span>\n            {labels.DueDateOffsetTooltip}\n        </span>);\n\n        this.tooltipTextName = (<span>\n            {labels.worktype_name_tooltip}\n        </span>);\n\n        this.tooltipTextAutoCreate = (<span>\n            {labels.worktype_auto_create_tooltip}\n        </span>);\n\n        this.tooltipTextSkillReq = (<span>\n            {labels.worktype_skill_req_tooltip}\n        </span>);\n\n\n\n        this.state = {\n            workType: {\n                Id: null,\n                Name: null,\n                Description: null,\n                [ObjectNames.WorkType.Due_Date_Offset__c]: null,\n                EstimatedDuration: null,\n                DurationType: null,\n                ShouldAutoCreateSvcAppt: null,\n                SkillRequirements: null\n            },\n        };\n\n        this.__saveChanges = debounce(this.__saveChanges, 2000);\n\n    }\n\n    componentWillMount() {\n        if (this.props && this.props.workType) {\n            this.nameBeforeSave = this.props.workType.Name;\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.workType) {\n            this.nameBeforeSave = nextProps.workType.Name;\n\n            let w = {\n                    Id: nextProps.workType.Id || '',\n                    Name: nextProps.workType.Name || '',\n                    Description: nextProps.workType.Description || '',\n                    [ObjectNames.WorkType.Due_Date_Offset__c]: nextProps.workType[ObjectNames.WorkType.Due_Date_Offset__c],\n                    EstimatedDuration: nextProps.workType.EstimatedDuration || '',\n                    DurationType: nextProps.workType.DurationType || '',\n                    ShouldAutoCreateSvcAppt: nextProps.workType.ShouldAutoCreateSvcAppt,\n                    SkillRequirements: nextProps.workType.SkillRequirements\n                };\n\n            if (w[ObjectNames.WorkType.Due_Date_Offset__c] == undefined)\n                w[ObjectNames.WorkType.Due_Date_Offset__c] = '';\n\n            this.setState(Object.assign({}, this.state, { workType: w }));\n        }\n    }\n\n    render() {\n\n        if (!this.props.workType) {\n            return (\n                <div className=\"side-form\">\n                    <div className=\"select-a\">\n                        {labels.NoWorkTypeSelectedText}\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n\n            <div className=\"side-form form-arrow\">\n\n                <div className=\"form-header\">\n                    <h2 className=\"truncate\">{this.nameBeforeSave || this.state.workType.Name}</h2>\n                    <span className=\"truncate\" onClick={this.__openSObjectLink.bind(this, this.state.workType.Id)}>{labels.Open_WorkType_Record}</span>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.OpHoursName}<Tooltip text={this.tooltipTextName} /></div>\n                    <div className=\"form-input\">\n                        <input type=\"text\" maxlength=\"100\" value={this.state.workType.Name}\n                               ref={ input => { this.wt_Name = input }}\n                               onChange={this.__wtFieldChanged.bind(this, 'Name')}/>\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.PolicyDescription}</div>\n                    <div className=\"form-input\">\n                        <textarea\n                            value={this.state.workType.Description}\n                            ref={ input => { this.wt_Description = input }}\n                            onChange={this.__wtFieldChanged.bind(this, 'Description')} />\n                    </div>\n                </div>\n                <div className=\"form-row-container\" style={{marginBottom: 35+'px'}}>\n                    <div className=\"form-label\">{labels.DueDateOffset}<Tooltip text={this.tooltipTextDueDate} /></div>\n                    <div className=\"form-input\">\n                        <input type=\"number\" min=\"0\" value={this.state.workType[ObjectNames.WorkType.Due_Date_Offset__c]}\n                               ref={ input => { this['wt_' + ObjectNames.WorkType.Due_Date_Offset__c] = input }}\n                               onChange={this.__wtFieldChanged.bind(this, ObjectNames.WorkType.Due_Date_Offset__c)}/>\n                        <div className=\"due-date-calculated\">{this.__calcDueDateInDays(this.state.workType[ObjectNames.WorkType.Due_Date_Offset__c])}</div>\n\n                    </div>\n                </div>\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.EstimatedDuration}</div>\n                    <div className=\"form-input\">\n                        <input type=\"number\" min=\"0\" value={this.state.workType.EstimatedDuration}\n                               ref={ input => { this.wt_EstimatedDuration = input }}\n                               onChange={this.__wtFieldChanged.bind(this, 'EstimatedDuration')}/>\n                    </div>\n                </div>\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.Duration_Type}</div>\n                    <div className=\"form-input form-select\">\n                        <select value={this.state.workType.DurationType}\n                                ref={ input => { this.wt_DurationType = input }}\n                                onChange={this.__wtFieldChanged.bind(this, 'DurationType')} >\n                            <option value=\"Minutes\">{labels.Minutes}</option>\n                            <option value=\"Hours\">{labels.Hours}</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.AutoCreateServiceAppointment}<Tooltip text={this.tooltipTextAutoCreate} /></div>\n                    <div className=\"form-input checkbox_toggle\">\n                        <input type=\"checkbox\" checked={this.state.workType.ShouldAutoCreateSvcAppt}\n                               ref={ input => { this.wt_ShouldAutoCreateSvcAppt = input }}\n                               onChange={this.__wtCheckboxFieldChanged.bind(this, 'ShouldAutoCreateSvcAppt')}/>\n                    </div>\n                </div>\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.Skill_Requirements}<Tooltip text={this.tooltipTextSkillReq} tipPosition='up'/></div>\n                    <SkillsSelector skills={this.props.skills}\n                                    requiredSkills={this.state.workType.SkillRequirements}\n                                    addRequiredSkill={this.__addRequiredSkill.bind(this)}\n                                    removeRequiredSkill={this.__removeRequiredSkill.bind(this)}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    __wtFieldChanged(fieldName) {\n        let workType = Object.assign({}, this.state.workType);\n        workType[fieldName] = this['wt_' + fieldName].value;\n\n        if (fieldName == ObjectNames.WorkType.Due_Date_Offset__c && (this['wt_' + fieldName].value === '')) {\n            workType[fieldName] = null;\n        }\n\n        this.setState( Object.assign({}, this.state, {workType} ) );\n\n        this.__saveChanges();\n    }\n\n    __wtCheckboxFieldChanged(fieldName) {\n        let workType = Object.assign({}, this.state.workType);\n        workType[fieldName] = this['wt_' + fieldName].checked;\n\n        this.setState( Object.assign({}, this.state, {workType} ) );\n\n        this.__saveChanges();\n    }\n\n    __addRequiredSkill(skillId) {\n        if (!skillId)\n            return;\n\n        callRemoteAction('addRequiredSkill', this.state.workType.Id, skillId)\n            .then(wt => {\n                this.props.afterSave(wt);\n            })\n            .catch(ex => {\n                console.error(ex);\n            })\n    }\n\n    __removeRequiredSkill(reqSkill) {\n\n        if (!reqSkill)\n            return;\n\n        callRemoteAction('removeRequiredSkill', this.state.workType.Id, reqSkill.Id)\n            .then(wt => {\n                this.props.afterSave(wt);\n            })\n            .catch(ex => {\n                console.error(ex);\n            })\n    }\n\n    __calcDueDateInDays(minutes) {\n        if (minutes >= 1440)\n            return Math.floor(minutes/60/24) + ' ' + labels.DaysLabel;\n        if (minutes >= 60)\n            return ((minutes/60 % 10 == 0) ? minutes/60 : (minutes/60).toFixed(2)) + ' ' + labels.Hours;\n\n        return '';\n\n    }\n\n    __saveChanges() {\n\n        if (!this.state.workType.Name) {\n            return;\n        }\n\n        // check if name already exist\n        for (let i=0; i<this.props.workTypes.length; i++) {\n            if (this.props.workTypes[i].Name === this.state.workType.Name && this.props.workTypes[i].Id !== this.state.workType.Id) {\n                return;\n            }\n        }\n\n\n        console.info('saving.....');\n\n        let workTypeToSave = Object.assign({}, this.state.workType);\n        let requiredSkills = Object.assign({}, workTypeToSave.SkillRequirements);\n        delete workTypeToSave.SkillRequirements;\n\n        //console.log(workTypeToSave);\n        //console.log(JSON.stringify([workTypeToSave]));\n\n        callRemoteAction('updateWorkType', JSON.stringify(workTypeToSave), JSON.stringify([requiredSkills]))\n            .then(wt => {\n                this.props.afterSave(wt);\n            })\n            .catch(ex => {\n                console.error(ex);\n            })\n\n    }\n\n    __openSObjectLink(id, ev) {\n        ev.preventDefault();\n        openSObjectLink(id);\n    }\n\n}\n\nexport default WorkTypeForm;","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport labels from '../../../utils/customLabels';\nimport lsdIcons from '../../../utils/lsdIcons';\nimport Data_WorkType from '../../../data/WorkType';\nimport Data_Skills from '../../../data/Skills';\nimport WorkTypesList from './WorkTypesList/WorkTypesList';\nimport WorkTypeForm from './WorkTypeForm/WorkTypeForm';\nimport './styles.css';\n\n\nclass WorkTypesAndSkills extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            selectedWorkType: null,\n            lastSaved: null,\n            workTypes: null,\n            skills: null,\n        };\n\n        this.icon = {\n            url: lsdIcons.work_type,\n            style: {\n                background: '#5876a3'\n            }\n        }\n    }\n\n    componentDidMount() {\n\n        Data_WorkType.get().then(worktypes => {\n\n            this.setState(Object.assign({}, {workTypes: worktypes}));\n\n        });\n\n        Data_Skills.get().then(skills => {\n\n            this.setState(Object.assign({}, {skills: skills}));\n\n        });\n    }\n\n    render() {\n\n        return (\n            <div className=\"full-height\">\n                <PageHeader title={labels.WorkTypesAndSkills}\n                            text={labels.WorkTypesAndSkillsExplanation}\n                            icon={this.icon}/>\n\n                <WorkTypesList\n                    selectWorkType={this.__handleSelectWorkType.bind(this)}\n                    afterSave={this.__handleFormSaved.bind(this)}\n                    workTypes={this.state.workTypes} />\n\n                <WorkTypeForm workType={this.state.selectedWorkType}\n                              afterSave={this.__handleFormSaved.bind(this)}\n                              workTypes={this.state.workTypes}\n                              skills={this.state.skills} />\n            </div>\n        );\n\n    }\n\n    __handleSelectWorkType(worktype) {\n        this.setState({ selectedWorkType: worktype })\n    }\n\n    __handleFormSaved(worktype) {\n\n        if (!window.Array.isArray(worktype)) {\n            worktype = [worktype];\n        }\n\n        //find changed wt\n        let wts = this.state.workTypes;\n        for (let i=0; i<wts.length; i++){\n            if (worktype[0].Id === wts[i].Id)\n                wts[i] = worktype[0];\n        }\n\n\n        this.setState({\n            lastSaved: worktype[0],\n            workTypes: wts,\n            selectedWorkType: worktype[0]\n        })\n\n        // this.setState(Object.assign(\n        //         {},\n        //         this.state, {lastSaved: worktype},\n        //         {workTypes: [...wts]}, {selectedWorkType: worktype}\n        //     )\n        // );\n    }\n\n    static generateIntroText() {\n        return (\n            <span>\n                <ul>\n                    <li>{labels.WorkTypesAndSkillsPoint1}</li>\n                    <li>{labels.WorkTypesAndSkillsPoint3}</li>\n                    <li>{labels.WorkTypesAndSkillsPoint2}</li>\n                    <li>{labels.WorkTypesAndSkillsPoint4}</li>\n                    <li>{labels.WorkTypesAndSkillsPoint5}</li>\n                </ul>\n            </span>\n        );\n    }\n\n}\n\nexport default WorkTypesAndSkills;","import callRemoteAction from '../utils/callRemoteAction';\nimport { decodeHTML } from '../utils/Utils';\nimport ObjectNames from '../utils/ObjectNames';\n\nclass Policies {\n\n    constructor() {\n        this.synced = false;\n\n    }\n\n    get() {\n\n        if (this.synced) {\n            return new Promise( resolve => resolve(this.policies) );\n        }\n\n\n        return new Promise( (resolve, reject) => {\n\n            callRemoteAction('getSchedulingPolicies').then(policies => {\n\n                this.parseAllPoliciesObjects(policies);\n                this.synced = true;\n                resolve(this.policies);\n\n            }).catch(ex => {\n                this.synced = false;\n                console.error('Unable to get operating hours');\n                reject(ex);\n            });\n\n        });\n    }\n\n\n    parseAllPoliciesObjects(policies) {\n\n        policies.goalsJunction = policies.goalsJunction.map(gj => {\n            return {\n                Id: gj.Id,\n                SchedulingPolicy: gj[ObjectNames.SchedulingPolicyGoal.SchedulingPolicy],\n                ServiceGoal: gj[ObjectNames.SchedulingPolicyGoal.Service_Goal],\n                Weight: gj[ObjectNames.SchedulingPolicyGoal.Weight]\n            }\n        });\n\n        policies.rulesJunction = policies.rulesJunction.map(rj => {\n            return {\n                Id: rj.Id,\n                SchedulingPolicy: rj[ObjectNames.SchedulingPolicyWorkRule.SchedulingPolicy],\n                WorkRule: rj[ObjectNames.SchedulingPolicyWorkRule.WorkRule]\n            }\n        });\n\n        policies.policies = policies.policies.map(this.parsePolicy).sort( (a,b) => a.Name <= b.Name ? -1 : 1);\n\n        this.policies = policies;\n\n    }\n\n\n    getNow() {\n        return this.policies;\n    }\n\n    upsertPolicy(policy) {\n\n        for (let i=0; i<this.policies.policies.length; i++) {\n            if (this.policies.policies[i].Id === policy.Id) {\n                this.policies.policies[i] = policy;\n                return;\n            }\n        }\n\n        // new policy\n        this.policies.policies.push(policy);\n    }\n\n    parsePolicy(policy) {\n        return {\n            Id: policy.Id,\n            Name: decodeHTML(policy.Name),\n            Description: decodeHTML(policy[ObjectNames.SchedulingPolicy.Description]) || '',\n            Daily_Optimization__c: policy[ObjectNames.SchedulingPolicy.Daily_Optimization__c] || false,\n            Commit_Mode__c: policy[ObjectNames.SchedulingPolicy.Commit_Mode__c] || 'AlwaysCommit',\n            Fix_Overlaps__c: policy[ObjectNames.SchedulingPolicy.Fix_Overlaps__c] || false\n        };\n    }\n\n    parseRulePolicyJunction(junction) {\n        return {\n            Id: junction.Id,\n            SchedulingPolicy: junction[ObjectNames.SchedulingPolicyWorkRule.SchedulingPolicy],\n            WorkRule: junction[ObjectNames.SchedulingPolicyWorkRule.WorkRule]\n        };\n    }\n\n\n    parsePolicyObjective(junction) {\n        return {\n            Id: junction.Id,\n            SchedulingPolicy: junction[ObjectNames.SchedulingPolicyGoal.SchedulingPolicy],\n            ServiceGoal: junction[ObjectNames.SchedulingPolicyGoal.Service_Goal],\n            Weight: junction[ObjectNames.SchedulingPolicyGoal.Weight]\n        }\n    }\n\n    upsertPolicyObjectiveJunction(junction) {\n\n        let parsedJunction = this.parsePolicyObjective(junction),\n            goalsJunction = this.policies.goalsJunction;\n\n        for (let i=0; i<goalsJunction.length; i++) {\n            if (goalsJunction[i].Id === parsedJunction.Id) {\n                goalsJunction[i] = parsedJunction;\n                return;\n            }\n        }\n\n        // new policy\n        goalsJunction.push(parsedJunction);\n\n    }\n\n\n    deletePolicyObjectiveJuction(id) {\n\n        let goalsJunction = this.policies.goalsJunction;\n\n        for (let i=0; i<goalsJunction.length; i++) {\n            if (goalsJunction[i].Id === id) {\n                goalsJunction.splice(i,1);\n                return;\n            }\n        }\n    }\n\n    updatePolicies(field, obj) {\n        policies.policies[field] = obj;\n    }\n\n}\n\nlet policies = new Policies();\n\nexport default policies;","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\n\nconst DAY_INDEX = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ];\n\nexport default class SlotsPreview extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n\n        if (!this.props.slots) {\n            return null;\n        }\n\n\n        let days = this.props.slots.map( (slots, i) => {\n            return this.__renderDay(DAY_INDEX[i], slots)\n        });\n\n        return (\n            <div>\n                <div id=\"SlotsViewContainer\">\n                    <div className=\"slots-prev-exp\">{labels.ExplainPreviewSlots}</div>\n                    {days}\n                </div>\n\n                <div id=\"TimezoneWarning\">{labels.GuidedSetup_appt_booking_timezone_info}</div>\n            </div>\n        );\n    }\n\n\n\n    __renderDay(dayName, dailySlots) {\n\n        let slotElements = dailySlots.map(SlotsPreview.formatTimeSlot);\n\n        if (slotElements.length === 0) {\n            slotElements = (<div className=\"single-day-slot\">{labels.OnboardingNoSlots}</div>);\n        }\n\n\n        return (\n            <div className=\"day-container-slots\">\n\n                <div className=\"day-name-container-slots\">\n                    {labels.Days[dayName]}\n                </div>\n\n                {slotElements}\n\n            </div>\n        );\n\n    }\n\n\n    static formatTimeSlot(slot) {\n\n        let startMinutes = slot.startMinutes < 9 ? '0' + slot.startMinutes : slot.startMinutes,\n            endMinutes = slot.endMinutes < 9 ? '0' + slot.endMinutes : slot.endMinutes;\n\n        if (window.isAMPM) {\n\n            let startHour = slot.startHour,\n                endHour = slot.endHour;\n\n            if (slot.startHour === 0) {\n                startHour = '12' + ':' + startMinutes + 'AM';\n            } else if (slot.startHour === 12) {\n                startHour = '12' + ':' + startMinutes + 'PM';\n            } else if (slot.startHour > 12) {\n                startHour = (startHour - 12).toString() + ':' + startMinutes + 'PM';\n            } else {\n                startHour = startHour + ':' + startMinutes + 'AM';\n            }\n\n            if (slot.endHour === 0) {\n                endHour = '12' + ':' + endMinutes + 'AM';\n            } else if (slot.endHour === 12) {\n                endHour = '12' + ':' + endMinutes + 'PM';\n            } else if (slot.endHour > 12) {\n                endHour = (endHour - 12).toString() + ':' + endMinutes + 'PM';\n            } else {\n                endHour = endHour + ':' + endMinutes + 'AM';\n            }\n\n            return (\n                <div className=\"single-day-slot\">\n                    {startHour} - {endHour}\n                </div>\n            )\n\n        }\n\n\n        else {\n\n            return (\n                <div className=\"single-day-slot\">\n                    {slot.startHour}:{startMinutes} - {slot.endHour}:{endMinutes}\n                </div>\n            )\n\n        }\n\n    }\n\n\n}\n\n","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport labels from '../../../Utils/customLabels';\nimport OperatingHoursSelect from '../../OperatingHoursSelect/OperatingHoursSelect';\nimport policies from '../../../data/Policies';\nimport Lightbox from '../../Lightbox/Lightbox';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport OperatingHoursCreator from '../../OperatingHoursCreator/OperatingHoursCreator';\nimport './styles.css';\nimport lsdIcons from '../../../utils/lsdIcons';\nimport SlotsPreview from \"./SlotsPreview/SlotsPreview\";\nimport SuccessMessage from \"../../SuccessMessage/SuccessMessage\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\n\n\n\nlet timeSlotsCache = {};\n\nexport default class AppointmentBooking extends Component {\n\n    constructor() {\n\n        super();\n\n        this.icon = {\n            url: lsdIcons.appBooking,\n            style: {\n                background: '#3d96dd'\n            }\n        };\n\n        this.state = {\n            addNewOh: null,\n            selectedOperatingHours: window.abSerttings.defaultOperatingHoursForAb,\n            selectedPolicy: window.abSerttings.defaultPolicyForAb,\n            policies: [],\n            showWorkingHoursCreator: false,\n            showPreview: null,\n            showSuccess: false\n        };\n\n        policies.get().then(objects => {\n            this.setState( { policies: objects.policies });\n            this.__operationHoursChanged(window.abSerttings.defaultOperatingHoursForAb);\n        });\n\n        this.moreText = (<div>{labels.AppBookingMore1}</div>)\n\n    }\n\n    render() {\n\n\n        let policyOptions = this.state.policies.map( policy => {\n            return (<option value={policy.Id}>{policy.Name}</option>);\n        });\n\n        return (\n            <div>\n\n                <SuccessMessage show={this.state.showSuccess} text={labels.OpSavedGood} />\n\n                <PageHeader title={labels.AppointmentBooking} text={labels.AppointmentBookingExplanation} icon={this.icon} secondParagraph={this.moreText}/>\n\n                <div id=\"AppointmentBookingForm\">\n\n\n                    {/*<div id=\"Select-Default-Ab-Settings\">{labels.SelectDefaultAbSettings}</div>*/}\n                    {/*<div className=\"ab-explain-text\">{labels.SelectDefaultAbSettingsExplain}</div>*/}\n\n                    <div className=\"oh-form\">\n                        <div className=\"ohs-label\">{labels.SchedulingPolicyName}\n                            <Tooltip text={labels.GuidedSetup_appt_booking_policy_tooltip} />\n                        </div>\n                        <div className=\"ohs-input\">\n                            <select\n                                onChange={this.__schedulingPolicyChanged.bind(this)}\n                                value={this.state.selectedPolicy}>\n                                {policyOptions}\n                                </select>\n                        </div>\n                    </div>\n\n                    <OperatingHoursSelect\n                        multiselect={false}\n                        addNewOh={this.state.addNewOh}\n                        selected={this.state.selectedOperatingHours}\n                        dontShowTz={true}\n                        onChange={this.__operationHoursChanged.bind(this)} />\n\n                    <div className=\"create-new-oh-ab\" onClick={this.__toggleWorkingHoursCreator.bind(this)}>\n                        {labels.CreateNewOH}\n                    </div>\n\n                    <Lightbox show={this.state.showWorkingHoursCreator} height=\"420\" width=\"680\" handleVisibility={this.__toggleWorkingHoursCreator.bind(this)}>\n                        <OperatingHoursCreator hideTimezone={true} createSlots={true} afterSave={this.__afterSaveOperatingHours.bind(this)} />\n                    </Lightbox>\n\n                </div>\n\n\n                <SlotsPreview slots={this.state.showPreview} />\n            </div>\n        );\n\n    }\n\n\n    __schedulingPolicyChanged(e) {\n\n        let newPolicyId = e.target.value;\n\n        this.setState( {selectedPolicy: newPolicyId});\n\n        callRemoteAction('updateAbSettings', 'policy', newPolicyId).then(isUpdated => {\n\n            window.abSerttings.defaultPolicyForAb = newPolicyId;\n\n        }).catch(ex => {\n            console.error(ex);\n            this.setState( {selectedOperatingHours: window.abSerttings.defaultPolicyForAb});\n        });\n\n\n\n    }\n\n\n    __operationHoursChanged(id) {\n\n        if (this.state.selectedOperatingHours === id) {\n\n            callRemoteAction('getTimeSlots', id).then(slots => {\n\n                let preCachedSlots = {\n                    Monday: [],\n                    Tuesday: [],\n                    Wednesday: [],\n                    Thursday: [],\n                    Friday: [],\n                    Saturday: [],\n                    Sunday: []\n                };\n\n                slots.sort((s1,s2) => s1.StartTime > s2.StartTime ? 1 : -1)\n                    .forEach(slot => {\n                        preCachedSlots[slot.DayOfWeek].push({\n                            startHour:  Math.floor(slot.StartTime / 1000 / 60 / 60),\n                            startMinutes:  Math.floor(slot.StartTime / 1000 / 60 % 60),\n                            endHour:  Math.floor(slot.EndTime / 1000 / 60 / 60),\n                            endMinutes:  Math.floor(slot.EndTime / 1000 / 60 % 60)\n                        });\n                    });\n\n                // to guarantee order\n                timeSlotsCache[id] = [\n                    preCachedSlots.Monday, preCachedSlots.Tuesday, preCachedSlots.Wednesday,\n                    preCachedSlots.Thursday,preCachedSlots.Friday, preCachedSlots.Saturday, preCachedSlots.Sunday\n                ];\n\n                this.setState({showPreview: timeSlotsCache[id]})\n\n            });\n\n\n            return;\n        }\n\n        this.setState( {selectedOperatingHours: id});\n\n        callRemoteAction('updateAbSettings', 'hours', id).then(isUpdated => {\n\n            window.abSerttings.defaultOperatingHoursForAb = id;\n\n            if (timeSlotsCache[id]) {\n\n                this.setState({\n                    showPreview: timeSlotsCache[id],\n                    selectedOperatingHours: id\n                });\n\n                return;\n            }\n\n            // if slots not cached, bring them\n            // this.setState( {selectedOperatingHours: id});\n\n            callRemoteAction('getTimeSlots', id).then(slots => {\n\n                let preCachedSlots = {\n                    Monday: [],\n                    Tuesday: [],\n                    Wednesday: [],\n                    Thursday: [],\n                    Friday: [],\n                    Saturday: [],\n                    Sunday: []\n                };\n\n                slots.sort((s1,s2) => s1.StartTime > s2.StartTime ? 1 : -1)\n                .forEach(slot => {\n                    preCachedSlots[slot.DayOfWeek].push({\n                        startHour:  Math.floor(slot.StartTime / 1000 / 60 / 60),\n                        startMinutes:  Math.floor(slot.StartTime / 1000 / 60 % 60),\n                        endHour:  Math.floor(slot.EndTime / 1000 / 60 / 60),\n                        endMinutes:  Math.floor(slot.EndTime / 1000 / 60 % 60)\n                    });\n                });\n\n                // to guarantee order\n                timeSlotsCache[id] = [\n                    preCachedSlots.Monday, preCachedSlots.Tuesday, preCachedSlots.Wednesday,\n                    preCachedSlots.Thursday,preCachedSlots.Friday, preCachedSlots.Saturday, preCachedSlots.Sunday\n                ];\n\n                this.setState({showPreview: timeSlotsCache[id]})\n\n            });\n\n\n\n\n        }).catch(ex => {\n            console.error(ex);\n            this.setState( {selectedOperatingHours: window.abSerttings.defaultOperatingHoursForAb});\n        });\n\n\n\n\n\n\n    }\n\n    __toggleWorkingHoursCreator() {\n        this.setState( {showWorkingHoursCreator: !this.state.showWorkingHoursCreator} );\n    }\n\n    __afterSaveOperatingHours(oh) {\n        this.setState( {showWorkingHoursCreator: false, addNewOh: oh, showSuccess: true } );\n\n        window.setTimeout(() => {\n            this.setState( {showSuccess: false } );\n        }, 3500)\n    }\n\n}","import React, { Component } from 'react';\nimport debounce from 'lodash/debounce';\nimport './styles.css';\n\nexport default class InlineResourceFieldEdit extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            value: this.props.value,\n            oldValue: this.props.value,\n        };\n\n        this.saveValueDebounced = debounce(this.saveValueDebounced, 5).bind(this);\n    }\n\n\n    render() {\n\n        if (this.props.type === 'IsActive') {\n\n            return (\n                <input type=\"checkbox\"\n                       onChange={this.valueChanged.bind(this)}\n                       checked={this.state.value} />\n            )\n\n        }\n\n\n        return (<input className=\"rd-inline-edit\"\n                       onChange={this.valueChanged.bind(this)}\n                       onBlur={this.checkIfEmpty.bind(this)}\n                       type=\"text\"\n                       value={this.state.value} />)\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.value === nextProps.value) {\n            this.setState({value: nextProps.value});\n        }\n\n        this.setState({value: nextProps.value});\n\n    }\n\n\n    valueChanged(e) {\n\n        if (this.props.type === 'IsActive') {\n            this.setState({value: e.target.checked});\n            this.saveValueDebounced(e.target.checked);\n            return;\n        }\n\n        this.setState({value: e.target.value, oldValue: this.state.value});\n\n        this.saveValueDebounced(e.target.value);\n    }\n\n    saveValueDebounced(value) {\n\n        // do not save if blank\n        if (this.props.type === 'resourceName' && value === '') {\n            return;\n        }\n\n        this.props.onSave(value, this.props.type, this.props.resourceId);\n\n    }\n\n    checkIfEmpty() {\n\n        if (this.props.type === 'resourceName' && this.state.value === '') {\n            this.setState({value: this.state.oldValue});\n        }\n\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport './styles.css';\n\nexport default class LicensesToggles extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            saving: {\n                mobile: false,\n                fsl: false\n            }\n        }\n    }\n\n\n    render() {\n\n\n\n        return(\n            <div>\n\n                {this.generateFslLicense()}\n                {this.generateMobileLicense()}\n\n            </div>\n        );\n\n    }\n\n\n    generateFslLicense() {\n\n        let fslClasses = `slds-icon licenseIcon ${this.props.fsl ? 'fslLicense' : ''}`;\n\n        if (this.state.saving.fsl) {\n            return <img src={lsdIcons.spinner} className=\"lt-saving-icon lt-saving-fsl\" />;\n        }\n\n        return (\n            <span title={this.props.fsl ? labels.RemoveFslLicenseAlt : labels.AddFslLicenseAlt}>\n                <svg aria-hidden=\"true\"\n                     onClick={this.licenseChanged.bind(this,'fsl', !this.props.fsl)}\n                     className={fslClasses}>\n                        <use href={lsdIcons.fslLicense} />\n                </svg>\n            </span>\n        )\n    }\n\n\n    generateMobileLicense() {\n\n        let mobileClasses = `slds-icon licenseIcon fslMobile ${this.props.mobile ? 'mobileLicenseOn' : ''}`;\n\n        if (this.state.saving.mobile) {\n            return <img src={lsdIcons.spinner} className=\"lt-saving-icon\" />;\n        }\n\n        return (\n            <span title={this.props.mobile ? labels.RemoveMobileLicenseAlt : labels.AddMobileLicenseAlt}>\n                <svg aria-hidden=\"true\"\n                     onClick={this.licenseChanged.bind(this,'mobile', !this.props.mobile)}\n                     className={mobileClasses}>\n                        <use href={lsdIcons.mobileLicense} />\n                </svg>\n            </span>\n        )\n    }\n\n\n    licenseChanged(type, value) {\n\n        if (this.state.saving[type]) {\n            return;\n        }\n\n        let state = Object.assign({}, this.state);\n        state.saving[type] = true;\n        this.setState(state);\n\n        this.props.onChange(type, value, () => {\n\n            let state = Object.assign({}, this.state);\n            state.saving[type] = false;\n            this.setState(state);\n\n        })\n\n    }\n\n}\n","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport './styles.css';\nimport InlineResourceFieldEdit from \"./InlineResourceFieldEdit/InlineResourceFieldEdit\";\nimport LicensesToggles from \"../LicensesToggles/LicensesToggles\";\nimport { openSObjectLink } from '../../../../utils/Utils';\n\n\nexport default class ResourcesTable extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            sortBy: 'Name',\n            order: 1,\n            selectedRows: {},\n            toggleAll: false\n        };\n    }\n\n\n    render() {\n\n        let tableRows = this.props.users\n            .sort(this.sortRows.bind(this))\n            .filter(this.isRowVisible.bind(this))\n            .map(user => {\n\n                    let rowClasses = this.state.selectedRows[this.props.resources[user.Id].Id] ? 'rd-table-row rd-table-selected' : 'rd-table-row';\n\n                    return (\n                        <div className={rowClasses}>\n\n                            <div className=\"rd-table-cell rd-table-cell-selected\">\n                                <input type=\"checkbox\"\n                                       checked={this.state.selectedRows[this.props.resources[user.Id].Id]}\n                                       onClick={this.onRowClicked.bind(this, this.props.resources[user.Id].Id)} />\n                            </div>\n\n                            <div className=\"rd-table-cell\">\n                                {this.generateResourceCellContent(user.Id)}\n                            </div>\n\n                            <div className=\"rd-table-cell rd-table-cell-user\">\n                                {user.Name}\n                                <span title={labels.Open_User_Record} onClick={this.__openSObjectLink.bind(this, user.Id)}>\n                                    <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.open} /></svg>\n                                </span>\n                            </div>\n\n\n\n                            <div className=\"rd-table-cell\">\n                                { this.props.resources[user.Id] ?\n                                    <InlineResourceFieldEdit value={this.props.resources[user.Id].GanttLabel} type=\"GanttLabel\" resourceId={this.props.resources[user.Id].Id} onSave={this.inlineValueChanged.bind(this)} /> : '' }\n                             </div>\n\n                            <div className=\"rd-table-cell\">\n                                {this.generateTerritoryCellContent(user.Id)}\n                            </div>\n\n                            <div className=\"rd-table-cell rd-table-cell-small\">\n                                <InlineResourceFieldEdit value={this.props.resources[user.Id].IsActive} type=\"IsActive\" resourceId={this.props.resources[user.Id].Id} onSave={this.inlineValueChanged.bind(this)} />\n                            </div>\n\n\n                            <div className=\"rd-table-cell rd-table-cell-small rd-resource-licenses\">\n                                <LicensesToggles fsl={this.getUserFslLicense(user.Id)} mobile={this.getUserMobileLicense(user.Id)} onChange={this.licenseChanged.bind(this, user.Id)} />\n                            </div>\n                        </div>\n                    );\n                });\n\n\n\n        return (\n            <div id=\"rd-the-table\">\n\n                <div className=\"rd-user-table\">\n\n                    <div className=\"rd-table-head\">\n                        <div className=\"rd-table-head-cell rd-table-head-selected\"><input type=\"checkbox\" checked={this.state.toggleAll} onClick={this.toggleAllRows.bind(this)} /></div>\n                        <div className=\"rd-table-head-cell\" onClick={this.setSortAndOrder.bind(this, 'Name')} >{this.styleColumn(labels.TableResourceName, 'Name')}</div>\n                        <div className=\"rd-table-head-cell rd-table-head-user\" onClick={this.setSortAndOrder.bind(this, 'user')} >{this.styleColumn(labels.TableUsername, 'user')}</div>\n                        <div className=\"rd-table-head-cell\" onClick={this.setSortAndOrder.bind(this, 'GanttLabel')} >{this.styleColumn(labels.TableGanttLabel, 'GanttLabel')}</div>\n                        <div className=\"rd-table-head-cell\" onClick={this.setSortAndOrder.bind(this, 'ServiceTerritory')} >{this.styleColumn(labels.TableTerritory, 'ServiceTerritory')}</div>\n                        <div className=\"rd-table-head-cell rd-table-head-cell-small\" onClick={this.setSortAndOrder.bind(this, 'IsActive')} >{this.styleColumn(labels.TableActive, 'IsActive')}</div>\n                        <div className=\"rd-table-head-cell rd-table-head-cell-small\" onClick={this.setSortAndOrder.bind(this, 'licenses')} >{this.styleColumn(labels.TableLicenses, 'licenses')}</div>\n                    </div>\n\n\n                    <div className=\"rd-table-body\">\n                        {tableRows}\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n\n\n    styleColumn(label, col) {\n\n        if (col === this.state.sortBy) {\n            let orderBy = this.state.order === 1 ?\n                (<svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.arrowup} /></svg>)\n                :\n                <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.arrowdown} /></svg>;\n            return (<b>{label}{orderBy}</b>);\n        }\n\n        return label;\n\n    }\n\n\n    generateResourceCellContent(uId) {\n\n        if (this.props.resources[uId] === undefined) {\n            return '';\n        }\n\n        return (\n            <span>\n\n                <InlineResourceFieldEdit value={this.props.resources[uId].Name} type=\"resourceName\" resourceId={this.props.resources[uId].Id} onSave={this.inlineValueChanged.bind(this)} />\n\n                <span title={labels.Open_Service_Resource_Record} onClick={this.__openSObjectLink.bind(this, this.props.resources[uId].Id)}>\n                    <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.open} /></svg>\n                </span>\n            </span>\n        );\n\n    }\n\n\n    generateTerritoryCellContent(uId) {\n\n        if (!this.props.resources[uId] || !this.props.territoryMembers[this.props.resources[uId].Id]) {\n            return '';\n        }\n\n        return (<span>\n            {this.props.territoryMembers[this.props.resources[uId].Id].name}\n            <span title={labels.Open_Service_Territory_Record} onClick={this.__openSObjectLink.bind(this, this.props.territoryMembers[this.props.resources[uId].Id].id)}>\n                <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.open} /></svg>\n            </span>\n        </span>);\n\n    }\n\n\n    isRowVisible(user) {\n\n        // user not active\n        if (!user.IsActive) {\n            return false;\n        }\n\n        // user with no resource\n        if (!this.props.resources[user.Id]) {\n            return false;\n        }\n\n        // no filtering\n        if (!this.props.search) {\n            return true;\n        }\n\n        // filter applied\n        if (this.props.search &&\n            (\n                (this.props.resources[user.Id].Name.toUpperCase().indexOf(this.props.search.toUpperCase()) > -1)\n                || (this.props.resources[user.Id].GanttLabel.toUpperCase().indexOf(this.props.search.toUpperCase()) > -1)\n                || (user.Name && user.Name.toUpperCase().indexOf(this.props.search.toUpperCase()) > -1)\n            )\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n\n    getUserFslLicense(userId) {\n\n        let fslLicenseId = this.props.licenseTypes['FieldServiceSchedulingPsl'];\n\n        if (this.props.assignedLicenses[userId] && this.props.assignedLicenses[userId][fslLicenseId]) {\n            return this.props.assignedLicenses[userId][fslLicenseId];\n        }\n\n        return null;\n    }\n\n    getUserMobileLicense(userId) {\n\n        let mobileLicenseId = this.props.licenseTypes['FieldServiceMobilePsl'];\n\n        if (this.props.assignedLicenses[userId] && this.props.assignedLicenses[userId][mobileLicenseId]) {\n            return this.props.assignedLicenses[userId][mobileLicenseId];\n        }\n\n        return null;\n    }\n\n\n    // 3 - both exist, 2 - u2 exist, 1 - u1 exist, 0 - no resources\n    checkIfUsersHaveResource(u1, u2) {\n\n        if (this.props.resources[u1.Id] && this.props.resources[u2.Id]) {\n            return 3;\n        }\n\n        if (!this.props.resources[u1.Id] && this.props.resources[u2.Id]) {\n            return 2;\n        }\n\n        if (this.props.resources[u1.Id] && !this.props.resources[u2.Id]) {\n            return 1;\n        }\n\n        if (!this.props.resources[u1.Id] && !this.props.resources[u2.Id]) {\n            return 0;\n        }\n\n    }\n\n\n    setSortAndOrder(field) {\n\n        if (this.state.sortBy === field) {\n            this.setState({ order: this.state.order * -1});\n        } else {\n            this.setState( {sortBy: field, order: 1});\n        }\n\n    }\n\n    // 3 - both licenses, 2 - 2nd lisence in licensesTypes, 1 - 1st lisence in licensesTypes, 0 - no licenses, -1 - no resource assigned to user\n    getLicenseScoreForSort(u) {\n\n        if (!this.props.assignedLicenses[u.Id]) {\n            return -1;\n        }\n\n        if (Object.keys(this.props.assignedLicenses[u.Id]).length === 2) {\n            return 3;\n        }\n\n        if (this.props.assignedLicenses[u.Id][this.props.licenseTypes.FieldServiceSchedulingPsl]) {\n            return 2\n        }\n\n        if (this.props.assignedLicenses[u.Id][this.props.licenseTypes.FieldServiceMobilePsl]) {\n            return 1\n        }\n\n        if (Object.keys(this.props.assignedLicenses[u.Id]).length === 0) {\n            return 0;\n        }\n\n    }\n\n    getResourceFieldForSort(u) {\n        return this.props.resources[u.Id][this.state.sortBy];\n    }\n\n\n\n    sortRows(u1, u2) {\n\n        if (this.state.sortBy === 'ServiceTerritory') {\n\n            let t1 = this.props.resources[u1.Id] && this.props.territoryMembers[this.props.resources[u1.Id].Id] ? this.props.territoryMembers[this.props.resources[u1.Id].Id].name : '',\n                t2 = this.props.resources[u2.Id] && this.props.territoryMembers[this.props.resources[u2.Id].Id] ? this.props.territoryMembers[this.props.resources[u2.Id].Id].name : '';\n\n            if (t1 === '' && t2 === '') {\n                return 0;\n            }\n\n            if (t1 === '' && t2 !== '') {\n                return this.state.order * -1;\n            }\n\n            if (t1 !== '' && t2 === '') {\n                return this.state.order;\n            }\n\n            if (t1.toUpperCase() > t2.toUpperCase()) { return this.state.order }\n            if (t1.toUpperCase() < t2.toUpperCase()) { return this.state.order * -1 }\n            return 0;\n        }\n\n\n        if (this.state.sortBy === 'user') {\n            return u1.Name.toUpperCase() >= u2.Name.toUpperCase() ? this.state.order : this.state.order * -1;\n        }\n\n\n        if (this.state.sortBy === 'licenses') {\n\n            let u1score = this.getLicenseScoreForSort(u1),\n                u2score = this.getLicenseScoreForSort(u2);\n\n            if (u1score > u2score) { return this.state.order }\n            if (u1score < u2score) { return this.state.order * -1 }\n            return 0;\n\n        }\n\n\n        let resourceExist = this.checkIfUsersHaveResource(u1,u2);\n\n\n        if (resourceExist === 0) { return 0; }\n        if (resourceExist === 1) { return this.state.order; }\n        if (resourceExist === 2) { return this.state.order * -1; }\n        if (resourceExist === 3) {\n            let u1Val = this.getResourceFieldForSort(u1),\n                u2Val = this.getResourceFieldForSort(u2);\n\n            if (typeof u1Val === 'string') {\n                if (u1Val.toUpperCase() > u2Val.toUpperCase()) { return this.state.order }\n                if (u1Val.toUpperCase() < u2Val.toUpperCase()) { return this.state.order * -1 }\n                return 0;\n            } else {\n                if (u1Val > u2Val) { return this.state.order }\n                if (u1Val < u2Val) { return this.state.order * -1 }\n                return 0;\n            }\n\n        }\n\n    }\n\n\n    inlineValueChanged(value, field, resourceId) {\n        this.props.saveResource(value, field, resourceId);\n    }\n\n\n    licenseChanged(userId, type, isAdded, cb) {\n        this.props.licenseChanged(userId, type, isAdded, cb);\n    }\n\n\n    onRowClicked(resourceId) {\n        let selectedRows = Object.assign({}, this.state.selectedRows),\n            selectedRowsIds = [];\n\n        selectedRows[resourceId] = selectedRows[resourceId] ? !selectedRows[resourceId] : true;\n\n        Object.keys(selectedRows).forEach( k => selectedRows[k] ? selectedRowsIds.push(k) : null);\n        this.props.onRowSelected(selectedRowsIds);\n\n        this.setState({selectedRows});\n    }\n\n\n    toggleAllRows() {\n\n        let selectedRows = Object.assign({}, this.state.selectedRows),\n            toggleAll = !this.state.toggleAll;\n\n\n        this.props.users\n            .filter(this.isRowVisible.bind(this))\n            .forEach(user => {\n                selectedRows[this.props.resources[user.Id].Id] = toggleAll;\n            });\n\n\n        this.props.onRowSelected(toggleAll ? Object.keys(selectedRows) : []);\n\n        this.setState({selectedRows, toggleAll});\n    }\n\n\n    __openSObjectLink(id, ev) {\n        ev.preventDefault();\n        openSObjectLink(id);\n    }\n\n}","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport debounce from 'lodash/debounce';\nimport './styles.css';\nimport lsdIcons from '../../../../utils/lsdIcons';\n\n\n\nexport default class SearchResources extends Component {\n\n    constructor(props) {\n        super(props);\n        this.searchTermChangedDebounced = debounce(props.onChange, 100);\n    }\n\n\n    render() {\n\n        return (\n            <div id=\"rd-search-bar\">\n                <input type=\"text\" placeholder={labels.OBSearchResources} onChange={this.searchTermChanged.bind(this)} />\n                <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.search} /></svg>\n            </div>\n        );\n\n    }\n\n    searchTermChanged(e) {\n        this.searchTermChangedDebounced(e.target.value);\n    }\n}","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport './styles.css';\n\n\n\nexport default class LicensesCounter extends Component {\n\n    constructor() {\n        super();\n    }\n\n\n    render() {\n\n        return (<div className=\"licenses-container\">\n                    \n                    <div id=\"rd-remaining-licenses\">\n                        {labels.LicenseRemaining}\n                        {this.generateFslCounter()}\n                        {this.generateMoibileCounter()}\n                    </div>\n                    <span className=\"license-tooltip-cont\">\n                        <Tooltip text={labels.Licenses_in_use_tooltip} />\n                    </span>\n                </div>\n        );\n\n    }\n\n\n    generateFslCounter() {\n        if (this.props.counters && this.props.counters.FieldServiceSchedulingPsl) {\n            return (\n                <div className=\"rd-remaining\">\n                    <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.fslLicense} /></svg>\n                    {this.props.counters.FieldServiceSchedulingPsl.used}/{this.props.counters.FieldServiceSchedulingPsl.total}\n                </div>);\n        }\n    }\n\n    generateMoibileCounter() {\n        if (this.props.counters && this.props.counters.FieldServiceMobilePsl) {\n            return (\n                <div className=\"rd-remaining\">\n                    <svg aria-hidden=\"true\" className=\"slds-icon rd-mobile\"><use href={lsdIcons.mobileLicense} /></svg>\n                    {this.props.counters.FieldServiceMobilePsl.used}/{this.props.counters.FieldServiceMobilePsl.total}\n                </div>);\n        }\n    }\n}","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport LicensesToggles from \"../LicensesToggles/LicensesToggles\";\nimport Tooltip from \"../../../Tooltip/Tooltip\";\n\n\n\nexport default class AddNewResource extends Component {\n\n    constructor() {\n        super();\n\n        let point4 = labels.OBNewResourcePoint4.split('$0');\n\n        this.tooltipText = (<div>{labels.OBNewResourcePoint1}\n                <ul className=\"rd-comments-ul\">\n                    <li>{labels.OBNewResourcePoint2}</li>\n                    <li>{labels.OBNewResourcePoint3}</li>\n                    <li>{point4[0]}<br/>{point4[1]}</li>\n                </ul>\n            </div>);\n\n        this.state = {\n            saving: false,\n            user: null,\n            resourceName: null,\n            territory: null,\n            ganttLabel: null,\n            territories: [],\n            licenses: {\n                fsl: true,\n                mobile: false\n            },\n        };\n\n        this.inputs = {}\n    }\n\n    render() {\n\n        let savingOrButtonElemet = this.state.saving ? (<div className=\"rd-add-saving-new-res\"><img src={lsdIcons.spinner} /> {labels.OnboardingSaving}</div>) : (<button className=\"guided-setup-button guided-setup-button_neutral\" onClick={this.addNewResource.bind(this)}>{labels.NewWorkTypeButton}</button>);\n\n\n        return (\n            <div id=\"rd-add-new-resource\">\n                <h1>\n                    {labels.NewREsources} <Tooltip text={this.tooltipText} tipPosition=\"right\" />\n                </h1>\n\n                <div className=\"rd-new-resource-cell\">\n                    { this.generateUserOptions() }\n                </div>\n\n                <div className=\"rd-new-resource-cell\">\n                    <input type=\"text\" value={this.state.resourceName} placeholder={labels.ObResourceName} ref={i => this.inputs['resourceName'] = i } onChange={this.valueChanged.bind(this, 'resourceName')} />\n                </div>\n\n                <div className=\"rd-new-resource-cell\">\n                    <input type=\"text\" value={this.state.ganttLabel} placeholder={labels.ObGanttLabel} ref={i => this.inputs['ganttLabel'] = i }onChange={this.valueChanged.bind(this, 'ganttLabel')} />\n                </div>\n\n                <div className=\"rd-new-resource-cell\">\n                    { this.generateTerritoriesOptions() }\n                </div>\n\n                <div className=\"rd-new-resource-cell rd-new-resource-cell-small\">\n                    <LicensesToggles fsl={this.state.licenses.fsl} mobile={this.state.licenses.mobile} onChange={this.licenseChanged.bind(this)} />\n                </div>\n\n                <div className=\"rd-new-resource-cell rd-new-resource-cell-small\">\n                    {savingOrButtonElemet}\n                </div>\n\n\n\n\n            </div>\n        );\n\n\n    }\n\n\n    generateUserOptions() {\n\n        let options = [<option value=''>{labels.ObSelectUser}</option>];\n\n        this.props.users.forEach(user => {\n\n            if ( user.IsActive && (!this.props.resources[user.Id])) {\n                options.push(<option value={user.Id}>{user.Name}</option>);\n            }\n        });\n\n        return (\n            <select onChange={this.userChanged.bind(this)} value={this.state.user} ref={i => this.inputs['user'] = i }>\n                {options}\n            </select>\n        );\n\n    }\n\n\n    generateTerritoriesOptions() {\n\n        let options = [<option value=''>{labels.ObSelectTerritory}</option>];\n\n        if (this.props.territories.length === 0) {\n            return (<select onChange={this.valueChanged.bind(this, 'territory')} value={this.state.territory}>{options}</select>);\n        }\n\n        this.props.territories\n            .filter(territory => territory.IsActive)\n            .forEach(territory => options.push(<option value={territory.Id}>{territory.Name}</option>));\n\n        return (\n            <select onChange={this.valueChanged.bind(this, 'territory')} value={this.state.territory} ref={i => this.inputs['territory'] = i }>\n                {options}\n            </select>\n        );\n    }\n\n\n    userChanged(e) {\n\n        if (!this.state.resourceName && e.target.value !== \"\") {\n            this.setState({\n                user: e.target.value,\n                resourceName: this.props.users.find(user => user.Id === e.target.value).Name\n            });\n        } else {\n            this.setState({ user: e.target.value });\n        }\n\n    }\n\n\n    licenseChanged(type, value, cb) {\n\n        let licenses = Object.assign({}, this.state.licenses);\n\n        licenses[type] = value;\n\n        this.setState({licenses});\n\n        cb();\n\n    }\n\n\n    valueChanged(key, e) {\n        let change = {};\n        change[key] = e.target.value;\n        this.setState(change);\n    }\n\n    addNewResource() {\n\n        if (this.state.saving) {\n            return;\n        }\n\n        if (!this.state.resourceName) {\n            alert(labels.MustEnterResourceName);\n            return;\n        }\n\n        if (!this.state.user) {\n            alert(labels.MustEnterUser);\n            return;\n        }\n\n        if (!this.state.territory) {\n            alert(labels.MustSelectServiceTerritory);\n            return;\n        }\n\n        if (!this.state.licenses.fsl && !this.state.licenses.mobile) {\n            window.alert(labels.ResourceMustHaveLicenses);\n            return;\n        }\n\n\n        let resource = {\n            resourceName: this.state.resourceName,\n            user: this.state.user,\n            territory: this.state.territory,\n            ganttLabel: this.state.ganttLabel,\n        };\n\n        this.setState({saving: true});\n\n        this.props.onAdded(resource, this.state.licenses, (gotErrors = false) => {\n\n            if (!gotErrors) {\n\n                this.setState({\n                    saving: false,\n                    user: null,\n                    resourceName: null,\n                    territory: null,\n                    ganttLabel: null,\n                    licenses: {\n                        fsl: true,\n                        mobile: false\n                    }\n                });\n\n                for (let k in this.inputs) {\n                    this.inputs[k].value = '';\n                }\n\n            } else {\n                this.setState({saving: false});\n            }\n\n        });\n\n\n    }\n\n}","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\nimport Lightbox from \"../../../Lightbox/Lightbox\";\nimport callRemoteAction from '../../../../utils/callRemoteAction';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\n\nexport default class ResourcesBulkActions extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: '',\n            saving: false,\n            showEditLightbox: false,\n            skills: [],\n            action: 'add',\n            form: {\n                skills: {}\n            }\n        };\n\n        callRemoteAction('getSkills').then(skills => {\n            this.setState({skills});\n        });\n\n        this.tooltipTexts = {\n            add: labels.SkillsAddedTooltip,\n            overide: labels.SkillsAddedNotRemoved,\n            remove: labels.SkillsRemovedTooltip,\n        }\n    }\n\n\n    render() {\n        if (this.props.selectedIds.length > 0) {\n\n            let saving = null;\n\n            if (this.state.saving) {\n                saving = (<div className=\"rba-saving\">\n                    <img src={lsdIcons.spinner} />\n                    {labels.Save_Skills}\n                </div>)\n            }\n\n\n\n            return (\n                <span>\n                    <span id=\"rba-bulk\" className=\"guided-setup-button guided-setup-button_brand\" onClick={this.__toggleLightbox.bind(this)}>\n                        {labels.UpdateXResources.replace('$0', this.props.selectedIds.length)}\n                    </span>\n\n                    <Lightbox show={this.state.showEditLightbox} height=\"425\" width=\"850\" handleVisibility={this.__toggleLightbox.bind(this)}>\n\n                        <div className=\"rba-skills-container\">\n                            <h1>\n                                <select value={this.state.action} onChange={this.__actionChanged.bind(this)}>\n                                    <option value=\"add\">{labels.AddSkillsOb}</option>\n                                    <option value=\"remove\">{labels.RemoveSkillsOb}</option>\n                                    <option value=\"overide\">{labels.OverideSkillsOb}</option>\n                                </select>\n\n                                {labels.AddResourceSkillss}\n                                <Tooltip text={this.tooltipTexts[this.state.action]} />\n                            </h1>\n\n                            <input type=\"search\" placeholder={labels.Search_Skills} value={this.state.filter} onChange={ e => this.setState({filter: e.target.value}) } />\n\n                            <div className=\"rba-skills\">\n                                {this.__generateSkills()}\n                            </div>\n                        </div>\n\n                        {saving}\n\n                        <div id=\"rba-button\" className=\"guided-setup-button guided-setup-button_brand\" onClick={this.__updateResources.bind(this)}>\n                            {labels.UpdateResources}\n                        </div>\n\n\n                    </Lightbox>\n\n                </span>\n            )\n        } else {\n            return null;\n        }\n    }\n\n\n    __actionChanged(e) {\n        this.setState({action: e.target.value});\n    }\n\n    __toggleLightbox() {\n\n        let form = {\n            skills: {}\n        };\n\n        if (!this.state.showEditLightbox && this.props.selectedIds.length === 1) {\n\n\n            callRemoteAction('getResourceData', this.props.selectedIds[0]).then(result => {\n\n                let form = Object.assign({}, this.state.form);\n                form.skills = {};\n\n                result.skills.forEach( s => {\n                    form.skills[s.SkillId] = true;\n                });\n\n                this.setState({action: 'overide', form});\n\n            });\n\n        }\n\n        this.setState({filter: '', action: 'add', saving: false, form, showEditLightbox: !this.state.showEditLightbox});\n\n\n    }\n\n\n    __generateSkills() {\n\n        return this.state.skills\n            .filter( skill => !this.state.filter === '' || skill.MasterLabel.toUpperCase().indexOf(this.state.filter.toUpperCase()) > -1)\n            .map( skill => {\n            return (\n                <div className=\"rba-skill-container\">\n                    <input type=\"checkbox\" id={'sk_' + skill.Id} checked={this.state.form.skills[skill.Id]} onClick={this.__skillChanged.bind(this, skill.Id)} />\n                    <label className=\"rba-skill-name\" htmlFor={'sk_' + skill.Id}>{skill.MasterLabel}</label>\n                </div>\n            );\n        })\n\n    }\n\n\n    __skillChanged(id, e) {\n\n        let form = Object.assign({}, this.state.form);\n        form.skills[id] = e.target.checked;\n\n        this.setState({form});\n    }\n\n\n    __updateResources() {\n\n        if (this.state.saving) {\n            return;\n        }\n\n\n        if (this.state.action != 'add' && !window.confirm(labels.DestructiveActionConfirm)) {\n            return;\n        }\n\n\n\n        let skills = [];\n\n        for (let id in this.state.form.skills) {\n            if (this.state.form.skills[id]) {\n                skills.push(id);\n            }\n        }\n\n        this.setState({saving: true});\n\n        callRemoteAction('updateSkills', this.props.selectedIds, skills, this.state.action).then(result => {\n            this.setState({showEditLightbox:false, saving: false});\n        }).catch(ex => {\n            this.setState({showEditLightbox:false, saving: false});\n            console.error(ex);\n            window.alert(ex.message);\n        })\n\n\n    }\n\n\n\n}","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport labels from '../../../utils/customLabels';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport ResourcesTable from \"./ResourcesTable/ResourcesTable\";\nimport ObjectNames from \"../../../utils/ObjectNames\";\nimport SearchResources from \"./SearchResources/SearchResources\";\nimport lsdIcons from '../../../utils/lsdIcons';\nimport LicensesCounter from \"./LicensesCounter/LicensesCounter\";\nimport debounce from 'lodash/debounce';\nimport AddNewResource from \"./AddNewResource/AddNewResource\";\nimport './styles.css';\nimport ResourcesBulkActions from \"./ResourcesBulkActions/ResourcesBulkActions\";\n\nclass ResourcesDefenition extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            searchText: '',\n            selectedResourcesIds: [],\n            resources: {},\n            users: [],\n            licenseTypes: {},\n            assignedLicenses: {},\n            permissionSets: {},\n            territories: [],\n            territoryMembers: {},\n            selectedResourcesIds: [],\n            licensesCounters: {\n                FieldServiceMobilePsl: {total: 0, used: 0},\n                FieldServiceSchedulingPsl: {total: 0, used: 0}\n            }\n        };\n\n        this.icon = {\n            url: lsdIcons.resources,\n            style: {\n                background: '#ef6e64'\n            }\n        };\n\n        let fslClasses = 'slds-icon open-icon';\n\n        //this.moreText = (<div><ul>{labels.ResourceMore1}</ul><ul>{labels.ResourceMore2}</ul><ul>{labels.ResourceMore3}</ul></div>)\n        let secondParagraph = labels.ResourcesDefenitionExplanation2.split('$0');\n        this.secondParagraph = (<div>{secondParagraph[0]} <svg aria-hidden=\"true\" className={fslClasses}> <use href={lsdIcons.open} /> </svg> {secondParagraph[1]}</div>);\n\n\n        this.saveResource = debounce(this.saveResource, 2000);\n\n\n        this.getResourcesAndUsers();\n\n\n        callRemoteAction('getServiceTerritories').then(territories => {\n\n            let sortedTerritories =  territories.sort( (a,b) => a.Name <= b.Name ? 1 : -1);\n            this.setState({\n                territories : sortedTerritories\n            });\n\n\n        }).catch(ex => {\n            console.error(ex);\n        });\n\n\n\n    }\n\n    render() {\n\n        return (\n            <div id=\"rd-container\">\n                <PageHeader\n                    title={labels.ResourcesDefenition}\n                    text={labels.ResourcesDefenitionExplanation}\n                    icon={this.icon}\n                    secondParagraph={this.secondParagraph} />\n\n                <AddNewResource\n                    resources={this.state.resources}\n                    users={this.state.users}\n                    licenseTypes={this.state.licenseTypes}\n                    assignedLicenses={this.state.assignedLicenses}\n                    onAdded={this.__onResourceCreated.bind(this)}\n                    territories={this.state.territories} />\n\n                <SearchResources onChange={this.__searchTermChanged.bind(this)}/>\n\n                <ResourcesBulkActions selectedIds={this.state.selectedResourcesIds}/>\n\n                <LicensesCounter counters={this.state.licensesCounters} />\n\n                <ResourcesTable\n                    search={this.state.searchText}\n                    resources={this.state.resources}\n                    users={this.state.users}\n                    licenseTypes={this.state.licenseTypes}\n                    assignedLicenses={this.state.assignedLicenses}\n                    territories={this.state.territories}\n                    territoryMembers={this.state.territoryMembers}\n                    saveResource={this.saveResource.bind(this)}\n                    licenseChanged={this.licenseChanged.bind(this)}\n                    onRowSelected={this.selectedRowsUpdated.bind(this)} />\n\n            </div>\n        );\n\n    }\n\n\n    selectedRowsUpdated(selectedResourcesIds) {\n        this.setState({selectedResourcesIds});\n    }\n\n    __onResourceCreated(resource, licenses, cb) {\n\n        let permissionSetsIds = [];\n\n        if (licenses.fsl) {\n            permissionSetsIds.push(...this.state.permissionSets.fsl);\n        }\n\n        if (licenses.mobile) {\n            permissionSetsIds.push(...this.state.permissionSets.mobile);\n        }\n\n\n        if (licenses.mobile) {\n\n            if (this.state.licensesCounters.FieldServiceMobilePsl.used === this.state.licensesCounters.FieldServiceMobilePsl.total) {\n                alert(labels.OutOfMobileLicenses);\n                cb(true);\n                return;\n            }\n\n        } else if (licenses.fsl) {\n\n            if (this.state.licensesCounters.FieldServiceSchedulingPsl.used === this.state.licensesCounters.FieldServiceSchedulingPsl.total) {\n                alert(labels.OutOfFslLicenses);\n                cb(true);\n                return;\n            }\n\n        }\n\n\n\n        callRemoteAction('createPermissionSets', resource.user, permissionSetsIds).then(permissionsResult => {\n\n            if (permissionsResult.permissions) {\n\n                callRemoteAction('createNewResource', resource).then(result => {\n\n                    let resources = Object.assign({}, this.state.resources),\n                        territoryMembers = Object.assign({}, this.state.territoryMembers),\n                        assignedLicenses = Object.assign({}, this.state.assignedLicenses),\n                        licensesCounters = {};\n\n\n                    // assigned license\n                    result.assignedLicenses.forEach(al => {\n                        assignedLicenses[al.AssigneeId] = assignedLicenses[al.AssigneeId] || {};\n                        assignedLicenses[al.AssigneeId][al.PermissionSetLicenseId] = al.Id;\n                    });\n\n\n                    // parse resource\n                    resources[resource.user] = ResourcesDefenition.parseResource(result.resource);\n\n                    // parse stm\n                    territoryMembers[result.stm.ServiceResourceId] = { name: result.stm.ServiceTerritory.Name || '', id: result.stm.ServiceTerritory.Id || null };\n\n                    // set license counters\n                    result.licenseCounter.forEach(c => licensesCounters[c.DeveloperName] = { total: c.TotalLicenses , used: c.UsedLicenses});\n\n\n\n\n                    this.setState({resources, territoryMembers, assignedLicenses, licensesCounters});\n\n                    cb();\n\n                }).catch(ex => {\n                    console.error((ex))\n                    alert(ex.message);\n                    cb(true);\n                });\n\n            } else {\n                cb(true);\n            }\n\n        }).catch(ex => {\n            console.error((ex));\n            alert(ex.message);\n            cb(true);\n        })\n\n    }\n\n\n\n    __searchTermChanged(text) {\n        this.setState({searchText: text});\n    }\n\n\n    getResourcesAndUsers() {\n\n        callRemoteAction('getResourcesAndUsers').then(result => {\n\n            let resources = {},\n                licenseTypes = {},\n                assignedLicenses = {},\n                territoryMembers = {},\n                licensesCounters = {},\n                permissionSets = {\n                    mobile: [],\n                    fsl: []\n                };\n\n\n            // set license counters\n            result.licenseCounter.forEach(c => licensesCounters[c.DeveloperName] = { total: c.TotalLicenses , used: c.UsedLicenses});\n\n            this.setState({assignedLicenses, licensesCounters});\n\n\n            result.territoryMembers.forEach(stm => territoryMembers[stm.ServiceResourceId] = { name: stm.ServiceTerritory.Name || '', id: stm.ServiceTerritory.Id || null } );\n\n            // licenses - should have 2 - FieldServiceMobilePsl && FieldServiceSchedulingPsl\n            result.licenseTypes.forEach(type => {\n                licenseTypes[type.DeveloperName] = type.Id;\n            });\n\n            // { userId , {licenseId, assignmentId} }\n            result.assignedLicenses.forEach(al => {\n                assignedLicenses[al.AssigneeId] = assignedLicenses[al.AssigneeId] || {};\n                assignedLicenses[al.AssigneeId][al.PermissionSetLicenseId] = al.Id;\n            });\n\n\n            // permission sets\n            result.permissionSets.forEach(ps => {\n                if (ps.Name === 'FSL_Mobile_License') {\n                    permissionSets.mobile.push(ps.Id)\n                } else {\n                    permissionSets.fsl.push(ps.Id)\n                }\n            });\n\n            result.resources.forEach(r => {\n                resources[r.RelatedRecordId] = ResourcesDefenition.parseResource(r);\n            });\n\n            this.setState({\n                resources,\n                users: result.users,\n                licenseTypes,\n                territoryMembers,\n                assignedLicenses,\n                permissionSets,\n                licensesCounters\n            })\n        });\n\n    }\n\n\n    static parseResource(sObject) {\n\n        let resource = Object.assign({} , sObject);\n\n        resource.GanttLabel = sObject[ObjectNames.ServiceResource.GanttLabel] || '';\n        resource.Name = sObject.Name || '';\n        delete resource[ObjectNames.ServiceResource.GanttLabel];\n\n        return resource;\n    }\n\n\n    saveResource(value, field, resourceId) {\n\n        let updateField = field;\n\n        switch (field) {\n            case 'resourceName': updateField = 'Name'; break;\n            case 'GanttLabel': updateField = ObjectNames.ServiceResource.GanttLabel; break;\n        }\n\n        let resource = { Id: resourceId };\n        resource[updateField] = value;\n\n        callRemoteAction('updateResource', resourceId, JSON.stringify(resource)).then(updatedResource => {\n\n            let newResources = Object.assign({}, this.state.resources),\n                parsedResource = ResourcesDefenition.parseResource(updatedResource);\n\n            newResources[parsedResource.RelatedRecordId] = parsedResource;\n\n            this.setState({resources: newResources});\n        })\n    }\n\n\n    changeResourceActive(userId, value) {\n        return callRemoteAction('changeResourceActive', userId, value)\n    }\n\n    changeResourceIncludeInOptimization(userId, value) {\n        return callRemoteAction('changeOptimizationCapablity', userId, value)\n    }\n\n\n\n    async licenseChanged(userId, type, isAdded, cb) {\n\n        let isFirstPermission = false,\n            licensesIds = {\n            fsl: this.state.licenseTypes['FieldServiceSchedulingPsl'],\n            mobile: this.state.licenseTypes['FieldServiceMobilePsl']\n        };\n\n\n        // adding first permission set\n        if (isAdded && (this.state.assignedLicenses[userId] && Object.keys(this.state.assignedLicenses[userId]).length === 0) || (this.state.assignedLicenses[userId] === undefined)) {\n            isFirstPermission = true;\n        }\n\n        // removing the only permission set we have\n        else if ((this.state.assignedLicenses[userId] && Object.keys(this.state.assignedLicenses[userId]).length === 1)  && (!isAdded))  {\n\n            let resource = await this.changeResourceActive(userId, false);\n            let resources = Object.assign({}, this.state.resources);\n            resources[userId].IsActive = false;\n            this.setState({resources});\n        }\n\n        // remove fsl license\n        if (!isAdded) {\n\n            if (type !== 'mobile') {\n                let resource = await this.changeResourceIncludeInOptimization(userId, false);\n            }\n\n            callRemoteAction('removePermissionSets', userId, type === 'mobile').then(counters => {\n\n                let assignedLicenses = Object.assign({}, this.state.assignedLicenses);\n                delete assignedLicenses[userId][licensesIds[type]];\n\n                let licensesCounters = {};\n                counters.forEach(c => licensesCounters[c.DeveloperName] = { total: c.TotalLicenses , used: c.UsedLicenses});\n\n                this.setState({assignedLicenses, licensesCounters});\n                cb();\n\n            });\n        }\n\n        else if (isAdded) {\n\n\n            if (type === 'mobile') {\n\n                if (this.state.licensesCounters.FieldServiceMobilePsl.used === this.state.licensesCounters.FieldServiceMobilePsl.total) {\n                    alert(labels.OutOfMobileLicenses);\n                    cb();\n                    return;\n                }\n\n            } else {\n\n                if (this.state.licensesCounters.FieldServiceSchedulingPsl.used === this.state.licensesCounters.FieldServiceSchedulingPsl.total) {\n                    alert(labels.OutOfFslLicenses);\n                    cb();\n                    return;\n                }\n\n            }\n\n\n            callRemoteAction('addPermissionSets', userId, this.state.permissionSets[type]).then(async result => {\n\n                let assignedLicenses = Object.assign({}, this.state.assignedLicenses);\n\n                let counters = result.licenseCounter,\n                    licensesCounters = {};\n\n\n                // { userId , {licenseId, assignmentId} }\n                result.permissions.forEach(al => {\n                    assignedLicenses[al.AssigneeId] = assignedLicenses[al.AssigneeId] || {};\n                    assignedLicenses[al.AssigneeId][al.PermissionSetLicenseId] = al.Id;\n                });\n\n                counters.forEach(c => licensesCounters[c.DeveloperName] = { total: c.TotalLicenses , used: c.UsedLicenses});\n\n                // first permission added, set IsActive = true\n                if (isFirstPermission) {\n                    let resourceIsFirstPermission = await this.changeResourceActive(userId, true);\n\n                    let resources = Object.assign({}, this.state.resources);\n                    resources[userId].IsActive = true;\n                    this.setState({resources});\n\n                }\n\n\n                if (type !== 'mobile') {\n                    let resource = await this.changeResourceIncludeInOptimization(userId, true);\n                }\n\n\n\n                this.setState({assignedLicenses, licensesCounters});\n\n                cb();\n\n\n            }).catch(ex => {\n                window.alert(ex.message);\n                cb();\n            });\n\n\n        }\n\n    }\n\n}\n\nexport default ResourcesDefenition;","import React, { Component } from 'react';\nimport './styles.css';\nimport labels from '../../../../utils/customLabels';\nimport lsdIcons from '../../../../utils/lsdIcons';\n\n\nclass PoliciesList extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n\n\n        let list =  [];\n        this.props.policies.forEach(policy => {\n\n            let cssClass = this.props.selectedId === policy.Id ? \"policy-li policy-selected\": \"policy-li\";\n\n            list.push(\n                <div className={cssClass} onClick={this.__policySelected.bind(this, policy.Id)} >\n                    <h1 className=\"truncate\">\n                        {policy.Name}\n                    </h1>\n                    <svg onClick={this.__clonePolicy.bind(this, policy.Id)}\n                             aria-hidden=\"true\"\n                             className=\"slds-icon icon-on-header\" >\n                                <use href={lsdIcons.clone}></use>\n                    </svg>\n                </div>\n            );\n\n        });\n\n        return (\n            <div id=\"PoliciesList\">\n                {list}\n            </div>\n        );\n\n    }\n\n    __policySelected(id) {\n        this.props.onSelected && this.props.onSelected(id);\n    }\n\n    __clonePolicy(id, event) {\n        event.stopPropagation();\n\n        if (window.confirm(labels.ConfirmPolicyClone)) {\n            this.props.onClone && this.props.onClone(id);\n        }\n    }\n\n}\n\n\nexport default PoliciesList;","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css'\nimport { openSObjectLink } from '../../../../utils/Utils';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\n\n\nclass PolicyForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameBeforeSave: (props.selected && props.selected.Name) || null,\n            policy: props.selected || null,\n            isUseEdge: window.inday_useEdge\n        };\n\n        this.inputs = {};\n\n        this.commitModeTooltipText = (<div>{labels.guidedsetup_commit_mode_tooltip_a}\n                <ul className=\"rd-comments-ul\">\n                    <li>{labels.guidedsetup_commit_mode_tooltip_b}</li>\n                    <li>{labels.guidedsetup_commit_mode_tooltip_c}</li>\n                </ul>\n                {labels.guidedsetup_commit_mode_tooltip_d}\n            </div>);\n\n        let indayAlert = this.state.isUseEdge ? '' : labels.guidedsetup_inday_tooltip_disabled;\n        this.indayTooltipText = (<div>\n                <span className=\"inday-disabled\">{indayAlert}</span>\n                \n                {labels.guidedsetup_inday_tooltip}\n            </div>);\n    }\n\n\n    render() {\n\n        return (\n\n            <div>\n\n                <h1 className=\"g_obh_form_title\">\n                    {this.state.nameBeforeSave}\n                    <span className=\"policy-link-layout\" onClick={this.__openSObjectLink.bind(this, this.state.policy.Id)}>{labels.Open_Scheduling_Policy_Record}</span>\n                </h1>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.PolicyName}\n                        <Tooltip text={labels.SchedulingPolicy_form_name_tooltip} />\n                    </div>\n                    <div className=\"form-input\">\n                        <input\n                            maxlength=\"100\"\n                            type=\"text\"\n                            value={this.state.policy.Name}\n                            onBlur={this.__nameOnBlur.bind(this)}\n                            onChange={this.__fieldChanged.bind(this, 'Name', false)} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.PolicyDescription}</div>\n                    <div className=\"form-input\">\n                        <textarea\n                            value={this.state.policy.Description}\n                            onChange={this.__fieldChanged.bind(this, 'Description', false)} />\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.In_Day}\n                        <Tooltip text={this.indayTooltipText} />\n                    </div>\n                    <div className=\"form-input checkbox_toggle\">\n                        <input type=\"checkbox\" disabled={!this.state.isUseEdge} checked={this.state.policy.Daily_Optimization__c}\n                               onChange={this.__fieldChanged.bind(this, 'Daily_Optimization__c', true)}/>\n                    </div>\n                </div>\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.Commit_mode}\n                        <Tooltip text={this.commitModeTooltipText} />\n                    </div>\n                    <div className=\"form-input form-select\">\n                        <select value={this.state.policy.Commit_Mode__c}\n                                onChange={this.__fieldChanged.bind(this, 'Commit_Mode__c', false)} >\n                            <option value=\"AlwaysCommit\">Always Commit</option>\n                            <option value=\"Rollback\">Rollback</option>\n                        </select>\n                    </div>\n                </div>\n\n\n                <div className=\"form-row-container\">\n                    <div className=\"form-label\">{labels.FixOverlaps}\n                        <Tooltip text={labels.guidedsetup_fixoverlaps_tooltip} />\n                    </div>\n                    <div className=\"form-input checkbox_toggle\">\n                        <input type=\"checkbox\" checked={this.state.policy.Fix_Overlaps__c}\n                               onChange={this.__fieldChanged.bind(this, 'Fix_Overlaps__c', true)}/>\n                    </div>\n                </div>\n\n            </div>\n\n        );\n\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n\n        if ((this.state.policy.Description === nextProps.selected.Description && this.state.policy.Name === nextProps.selected.Name)\n            || (this.state.policy.Id !== nextProps.selected.Id)) {\n                this.setState( {\n                    nameBeforeSave: nextProps.selected.Name,\n                    policy: nextProps.selected\n                });\n        }\n    }\n\n    __nameOnBlur() {\n        let policy = Object.assign({}, this.state.policy);\n        //policy.Name = this.state.nameBeforeSave;\n        this.setState({policy});\n    }\n\n    __fieldChanged(field, isCheckbox = false, event) {\n\n        let policy = Object.assign({}, this.state.policy);\n        policy[field] = isCheckbox ? event.target.checked : event.target.value;\n        this.setState({policy});\n\n        this.props.formSavedCallback(policy.Id, policy.Name, policy.Description, policy.Daily_Optimization__c, policy.Commit_Mode__c, policy.Fix_Overlaps__c);\n\n    }\n\n    __openSObjectLink(id, ev) {\n        ev.preventDefault();\n        openSObjectLink(id);\n    }\n\n\n\n}\n\nexport default PolicyForm;","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\n\nexport default class RulesExplanationLightbox extends Component {\n\n    render() {\n        return (\n            <div className=\"lightbox-rules-explain\">\n                <h1>{labels.RulesTypes}</h1>\n                <ul>\n                    {this.formatRule(labels.RuleExp1)}\n                    {this.formatRule(labels.RuleExp2)}\n                    {this.formatRule(labels.RuleExp3)}\n                    {this.formatRule(labels.RuleExp4)}\n                    {this.formatRule(labels.RuleExp5)}\n                    {this.formatRule(labels.RuleExp7)}\n                    {this.formatRule(labels.RuleExp8)}\n                    {this.formatRule(labels.RuleExp9)}\n                    {this.formatRule(labels.RuleExp10)}\n                    {this.formatRule(labels.RuleExp11)}\n                    {this.formatRule(labels.RuleExp12)}\n                    {this.formatRule(labels.RuleExp13)}\n                </ul>\n            </div>\n        )\n    }\n\n\n    formatRule(rule) {\n        return (<li><b>{rule.substr(0,rule.indexOf ('-')-1)}</b> {rule.substr(rule.indexOf ('-')-1)}</li>);\n    }\n}","import React, { Component } from 'react';\nimport './styles.css';\nimport Lightbox from \"../../../Lightbox/Lightbox\";\nimport RulesExplanationLightbox from \"./RulesExplanationLightbox\";\nimport ObjectNames from '../../../../utils/ObjectNames';\nimport {mandatoryRules} from '../../../../utils/miscSalesforceObjects';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport Tooltip from \"../../../Tooltip/Tooltip\";\nimport labels from '../../../../utils/customLabels';\n\n\nexport default class RulesSelector extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.inputs = {};\n\n        let selectedRules = this.__filterSelectedRules(props.policyId, props.rules, props.rulesJunction, true),\n            unselectedRules = this.__filterSelectedRules(props.policyId, props.rules, props.rulesJunction, false);\n\n        this.state = {\n            showRulesExplanationLightbox: false,\n            saving: false,\n            selectedRules,\n            unselectedRules\n        };\n\n        this.tooltipText = (<div>\n                <div>{labels.RulesPreselectedTooltip}</div><br/>\n                <div>{labels.RulesPreselectedTooltip2}</div><br/>\n                <div>{labels.RulesPreselectedTooltip3}</div>\n            </div>);\n\n    }\n\n\n\n    render() {\n\n        let availableActions = null;\n\n        if (!this.state.saving) {\n            availableActions = (\n                <div className=\"rules-buttons-container\">\n                    <div className=\"rules-move-button\" onClick={this.__addRules.bind(this)}>&gt;</div>\n                    <div className=\"rules-move-button\" onClick={this.__removeRules.bind(this)}>&lt;</div>\n                </div>\n            )\n        } else {\n            availableActions = (<div className=\"rules-buttons-container\"><img src={lsdIcons.spinner} /></div>);\n        }\n\n        return (\n\n            <div>\n\n                <h2 className=\"rules-h2\">{labels.RulesSelection}</h2>\n                <p className=\"rules-p\">\n                    {labels.RulesExplainOb} <br/> {labels.RulesExplainObCont} <b className=\"label-link\" onClick={this.__toggleRulesExplanationLightbox.bind(this)}>{labels.RulesExplainMore}</b> <br/>{labels.RulesExplainObCont2}\n                </p>\n\n\n                <Lightbox show={this.state.showRulesExplanationLightbox} height=\"420\" width=\"650\" handleVisibility={this.__toggleRulesExplanationLightbox.bind(this)}>\n                    <RulesExplanationLightbox />\n                </Lightbox>\n\n                <div id=\"RulesSelectionContainer\">\n                    <div className=\"rules-select-container\">\n\n                        <div className=\"rules-select-header\">{labels.AvailableRules}</div>\n\n                        <select multiple\n                                className=\"rules-selector-select\"\n                                ref={ input => { this.inputs.unselectedRulesSelect = input }}>\n                            {this.__generateRulesOptions(this.state.unselectedRules)}\n                        </select>\n                    </div>\n\n                    {availableActions}\n\n                    <div className=\"rules-select-container\">\n\n                        <div className=\"rules-select-header\">\n                            {labels.SelectedRules}\n\n                            <Tooltip text={this.tooltipText} tipPosition='up' />\n\n                        </div>\n\n                        <select multiple\n                                className=\"rules-selector-select\"\n                                ref={ input => { this.inputs.selectedRulesSelect = input }}>\n                            {this.__generateRulesOptions(this.state.selectedRules, true)}\n                        </select>\n\n                        {!this.__doesHaveAvailabilityRule() ? (<div className=\"ob-noars\">{labels.NoAvabRule}</div>) : null}\n\n\n                    </div>\n                </div>\n\n            </div>\n\n        )\n\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n\n\n        if (this.props !== nextProps.policyId && nextProps.policyId && nextProps.rules && nextProps.rulesJunction) {\n\n            let policyId = nextProps.policyId,\n                rules = nextProps.rules,\n                rulesJunction = nextProps.rulesJunction;\n\n            let selectedRules = this.__filterSelectedRules(policyId, rules, rulesJunction, true),\n                unselectedRules = this.__filterSelectedRules(policyId, rules, rulesJunction, false);\n\n            this.setState({selectedRules, unselectedRules});\n        }\n\n    }\n\n\n    __addRules() {\n\n        if (this.inputs.unselectedRulesSelect.selectedOptions.length > 0 && !this.state.saving) {\n\n            let selectedRules = [],\n                select = this.inputs.unselectedRulesSelect.selectedOptions;\n\n            for (let i=0; i<select.length; i++) {\n\n                let junction = { Id: null };\n                junction[ObjectNames.SchedulingPolicyWorkRule.SchedulingPolicy] = this.props.policyId;\n                junction[ObjectNames.SchedulingPolicyWorkRule.WorkRule] = select[i].value;\n\n                selectedRules.push(junction);\n            }\n\n            this.setState({saving: true});\n\n            this.props.onAdded(selectedRules, 'add', () => {\n                let elements = this.inputs.unselectedRulesSelect.options;\n\n                for(let i = 0; i < elements.length; i++){\n                    elements[i].selected = false;\n                }\n\n                this.setState({saving: false});\n            });\n        }\n    }\n\n\n    __removeRules() {\n\n        if (this.inputs.selectedRulesSelect.selectedOptions.length > 0 && !this.state.saving) {\n\n            let selectedRules = [],\n                select = this.inputs.selectedRulesSelect.selectedOptions;\n\n            for (let i=0; i<select.length; i++) {\n                selectedRules.push(select[i].value);\n            }\n\n            this.setState({saving: true});\n\n            this.props.onRemoved(selectedRules, 'remove', () => {\n\n                let elements = this.inputs.selectedRulesSelect.options;\n\n                for(let i = 0; i < elements.length; i++){\n                    elements[i].selected = false;\n                }\n\n                this.setState({saving: false});\n            });\n        }\n\n    }\n\n\n\n    // show only relevant rules (applied to the policy and not in the policy)\n    __filterSelectedRules(policyId, rules, junctions, bringSelected) {\n\n            return rules.filter(rule => {\n                if (bringSelected) {\n                    return !!junctions.find( j => j.SchedulingPolicy === policyId && j.WorkRule === rule.Id);\n                } else {\n                    return !junctions.find( j => j.SchedulingPolicy === policyId && j.WorkRule === rule.Id);\n                }\n\n        })\n\n    }\n\n\n    // generate the option tags for the rules select element\n    __generateRulesOptions(rules, isSelected = false) {\n        return rules.sort( (r1,r2) => r1.Name <= r2.Name ? -1:1 ).map(rule => {\n\n            if (isSelected && (rule.Id === mandatoryRules.earlyStart || rule.Id === mandatoryRules.dueDate)) {\n                return (\n                    <option value={rule.Id} disabled title={rule.RecordType.Name.substr(16,rule.RecordType.Name.length)}>{rule.Name}</option>\n                )\n            }\n\n            return (\n                <option value={rule.Id} title={rule.RecordType.Name.substr(16,rule.RecordType.Name.length)}>{rule.Name}</option>\n            )\n        });\n    }\n\n\n    // open/close the lightbox\n    __toggleRulesExplanationLightbox() {\n        this.setState({showRulesExplanationLightbox : !this.state.showRulesExplanationLightbox});\n    }\n\n\n    // availability rule not available\n    __doesHaveAvailabilityRule() {\n\n        let got = false;\n\n        this.state.selectedRules.forEach(rule => {\n            if (rule.RecordType.DeveloperName === 'Gap_Rule_Service') {\n                got = true;\n            }\n        });\n\n        return got;\n\n    }\n\n}","import React, { Component } from 'react';\nimport ObjectNames from '../../../../utils/ObjectNames';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\n\nconst NORMALIZED_MAX_VALUE_FOR_OBJECTIVE = 100;\n\nexport default class ObjectivesEditor extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.sliders = {};\n        this.sliderElements = this.__createSlidersElements(props.objectives);\n\n        this.__setAvailableGoals(props.objectives, props.goalsJunction, props.policyId);\n\n        this.numberOfActiveObjective = 0;\n\n    }\n\n\n    render() {\n        return (\n\n            <div id=\"ObjectiveEditorContainer\">\n\n                <h2 className=\"objectives-h2\">{labels.OBObjectives}</h2>\n                <p className=\"objectives-p\">\n                    {labels.ObjectiveEditorTextIntro}\n                </p>\n\n                <div className=\"objective-sliders-container\">\n                    {this.sliderElements}\n                </div>\n\n\n                <div id=\"pie-chart-container\">\n                    <div id=\"objectives-pie\"></div>\n                </div>\n\n            </div>\n        );\n    }\n\n\n\n    componentWillReceiveProps(nextProps) {\n\n        this.__setAvailableGoals(nextProps.objectives, nextProps.goalsJunction, nextProps.policyId);\n\n        // update slider values\n        nextProps.objectives.forEach(obj => {\n            this.sliders[obj.Id].setValue(this.objectiveWeights[obj.Id]);\n        });\n\n        // update pie\n        this.__updatePie(nextProps.objectives);\n\n    }\n\n\n    componentDidMount() {\n\n        this.props.objectives.forEach(obj => {\n\n            this.sliders[obj.Id] = new window.dhtmlXSlider({\n                parent: \"obj_\" + obj.Id,\n                size:   340,\n                step:   1,\n                min:    0,\n                max:    100,\n                value:  this.objectiveWeights[obj.Id]\n            });\n\n            this.sliders[obj.Id].linkTo('sld_value_' + obj.Id);\n\n            this.sliders[obj.Id].attachEvent(\"onSlideEnd\", (newValue) => {\n                let normalizedValue = ObjectivesEditor.normalize(newValue, this.maxWeightNotNormalized, NORMALIZED_MAX_VALUE_FOR_OBJECTIVE);\n                this.__handleValueChanged(normalizedValue, obj.Id);\n            });\n        });\n\n\n        // init pie chart\n        this.__createPie(this.props.objectives);\n\n    }\n\n\n    __createSlidersElements(objectives) {\n\n        return objectives.map(objective => {\n\n            return (\n                <div className=\"slider-container\">\n                    <div>\n                        {objective.Name}\n                        <span className=\"slider-value\" id={'sld_value_' + objective.Id}></span>\n                    </div>\n                    <div id={'obj_' + objective.Id}></div>\n                    <span className=\"slider-val\">0</span>\n                    <span className=\"slider-val slider-val-max\">{NORMALIZED_MAX_VALUE_FOR_OBJECTIVE}</span>\n                </div>\n            );\n\n\n        });\n\n    }\n\n\n    __setAvailableGoals(objectives, goalsJunctions, policyId) {\n\n        this.objectiveWeights = {};\n\n        objectives.forEach(obj => {\n\n            this.objectiveWeights[obj.Id] = 0;\n\n            goalsJunctions.forEach(junction => {\n\n               if (policyId === junction.SchedulingPolicy && obj.Id === junction.ServiceGoal) {\n                   this.objectiveWeights[obj.Id] = junction.Weight;\n               }\n\n            });\n        });\n\n        this.numberOfActiveObjective = Object.keys(this.objectiveWeights).length;\n\n        this.__normalizeWeights();\n    }\n\n    __normalizeWeights() {\n\n        this.maxWeightNotNormalized = 0;\n\n        // find max weight\n        for (let key in this.objectiveWeights) {\n            if (this.objectiveWeights[key] > this.maxWeightNotNormalized) {\n                this.maxWeightNotNormalized = this.objectiveWeights[key];\n            }\n        }\n\n        // if we have no objectives set\n        if (this.maxWeightNotNormalized === 0) {\n            this.maxWeightNotNormalized = NORMALIZED_MAX_VALUE_FOR_OBJECTIVE;\n        }\n\n        for (let key in this.objectiveWeights) {\n            this.objectiveWeights[key] = ObjectivesEditor.normalize(this.objectiveWeights[key] , NORMALIZED_MAX_VALUE_FOR_OBJECTIVE, this.maxWeightNotNormalized);\n        }\n\n    }\n\n\n    __handleValueChanged(newValue, objectiveId) {\n\n        let objectiveJunction = null;\n\n\n        // find the junction\n        this.props.goalsJunction.forEach(junction => {\n            if (this.props.policyId === junction.SchedulingPolicy && objectiveId === junction.ServiceGoal && !objectiveJunction) {\n                objectiveJunction = junction;\n            }\n        });\n\n\n        // removing junction\n        if (newValue === 0) {\n\n            this.props.onSave('delete', objectiveJunction.Id);\n\n        } else {\n\n            let objectiveJunctionToSave = {\n                Id: (objectiveJunction && objectiveJunction.Id) || null\n            };\n\n            objectiveJunctionToSave[ObjectNames.SchedulingPolicyGoal.SchedulingPolicy] = this.props.policyId;\n            objectiveJunctionToSave[ObjectNames.SchedulingPolicyGoal.Service_Goal] = objectiveId;\n            objectiveJunctionToSave[ObjectNames.SchedulingPolicyGoal.Weight] = newValue;\n\n            this.props.onSave('upsert', objectiveJunctionToSave);\n\n        }\n    }\n\n\n    static normalize(value, maxNew, maxOld) {\n\n        if (maxOld <= NORMALIZED_MAX_VALUE_FOR_OBJECTIVE) {\n            return value;\n        }\n\n        return (maxNew / maxOld) * (value - maxOld) + maxNew;\n    }\n\n\n    __createPie(objectives) {\n\n        this.__preparePieData(objectives);\n\n\n        this.objectivesPie = new window.dhtmlXChart({\n            view: \"pie\",\n            container: \"objectives-pie\",\n            value: \"#weight#\",\n            color: \"#color#\",\n            pieInnerText: \"#weight#\",\n            labelLines: true,\n            shadow: 0,\n            //label: \"#label#\"\n            //label: obj => `<div class=\"oe-graph-label\" title=\"${obj.label}\">${obj.label}</div>`\n            label: obj => `<div class=\"oe-graph-label\" title=\"${obj.label}\">${obj.label}</div>`\n        });\n\n        this.objectivesPie.parse(this.pieData,\"json\");\n    }\n\n    __preparePieData(objectives) {\n\n        let colors = {},\n            colorsHex = ['#fe8f61', '#db6d7a', '#88c551', '#34bbe7', '#ffc35f', '#e46fbe', '#fa975c', '#b7c3cd', '#20ca9f', '#5a9cdc', '#f6675b', '#e25c80'],\n            currentColor = 0;\n\n\n        let sumOfWeights = 0;\n        for (let key in this.objectiveWeights) {\n            sumOfWeights += this.objectiveWeights[key];\n        }\n\n        this.pieData = [];\n\n        objectives.forEach(obj => {\n\n            colors[obj.Id] = colorsHex[currentColor++];\n\n            if (currentColor === colorsHex.length) {\n                currentColor = 0;\n            }\n\n            if (this.objectiveWeights[obj.Id] === 0) {\n                return;\n            }\n\n            this.pieData.push({\n                id: obj.Id,\n                weight: ((this.objectiveWeights[obj.Id] / sumOfWeights) * 100).toFixed(2) + '%',\n                label: obj.Name,\n                color: colors[obj.Id]\n            });\n        });\n\n\n    }\n\n\n    __updatePie(objectives) {\n        this.objectivesPie.clearAll();\n        this.__preparePieData(objectives);\n        this.objectivesPie.parse(this.pieData, 'json');\n    }\n\n\n}","import React, { Component } from 'react';\nimport './styles.css';\nimport labels from '../../../../utils/customLabels';\n\n\nexport default class AddPolicy extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.saving = false;\n\n    }\n\n\n    render() {\n\n        return (\n            <div id=\"AddNewPolicy\" className=\"form-input\">\n                <input type=\"text\"\n                       maxlength=\"100\"\n                       placeholder={labels.PolicyNamePlaceHolder}\n                       ref={i => this.policyNameInput = i}\n                       onKeyDown={this.__handleKeyboardAdd.bind(this)} />\n\n                <button className=\"truncate ob-button guided-setup-button guided-setup-button_neutral\" \n                        title={labels.NewTerritoryButton}\n                        onClick={this.__addNewPolicy.bind(this)}>{labels.NewTerritoryButton}</button>\n            </div>\n        );\n\n    }\n\n\n    __addNewPolicy() {\n\n        // can not save while still saving\n        if (this.saving) {\n            return;\n        }\n\n\n        let name = this.policyNameInput.value;\n\n        if (!name) {\n            alert(labels.PolicyNameBlank);\n            return;\n        }\n\n        if (!name.replace(/\\s/g, '').length) {\n            alert(labels.PolicyNameBlank);\n            return;\n        }\n\n        this.saving = true;\n        this.policyNameInput.value = '';\n\n        this.props.onNewPolicy(name, () => {\n            this.saving = false;\n        })\n\n    }\n\n    __handleKeyboardAdd(e) {\n\n        // if Enter is pressed\n        if (e.which === 13) {\n            this.__addNewPolicy();\n        }\n    }\n\n}","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport labels from '../../../utils/customLabels';\nimport PoliciesList from './PoliciesList/PoliciesList';\nimport policies from '../../../data/Policies';\nimport PolicyForm from './PolicyForm/PolicyForm';\nimport RulesSelector from \"./RulesSelector/RulesSelector\";\nimport ObjectivesEditor from \"./ObjectivesEditor/ObjectivesEditor\";\nimport lsdIcons from '../../../utils/lsdIcons';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport debounce from 'lodash/debounce';\nimport './styles.css';\nimport AddPolicy from \"./AddPolicy/AddPolicy\";\n\n\n\nexport default class SchedulingPolicies extends Component {\n\n    constructor() {\n        super();\n\n        this.icon = {\n            url: lsdIcons.policy,\n            style: {\n                background: '#d15c96'\n            }\n        };\n\n        this.__generatePageHeader(); // will be saved to: this.pageHeader\n\n        this.state = {\n            selected: null,\n            sobjects: {},\n        };\n\n        policies.get().then(this.__setSobjectsOnState.bind(this));\n\n        this.__handleFormSaved = debounce(this.__handleFormSaved, 2000);\n    }\n\n    render() {\n\n        // not yet loaded\n        if (Object.keys(this.state.sobjects).length === 0) {\n\n            return (\n                <div>{this.pageHeader}</div>\n            );\n\n        // loaded data but no policy is selected\n        } else if ((Object.keys(this.state.sobjects).length > 0) && (this.state.selected === null)) {\n\n            return (\n                <div>\n                    {this.pageHeader}\n\n                    <div id=\"PoliciesManagementList\">\n                        <AddPolicy onNewPolicy={ this.__handleNewPolicyAdded.bind(this) } />\n                        { this.__generagePoliciesList() }\n                    </div>\n\n                    <div id=\"PolicyForm\">\n                        <div className=\"no-policy-selected\">{labels.SelectPolicyFromTheLeft}</div>\n                    </div>\n\n                </div>\n            );\n\n        }\n\n        // policy is selected\n        return (\n            <div>\n\n                {this.pageHeader}\n\n                <div id=\"PoliciesManagementList\">\n                    <AddPolicy onNewPolicy={ this.__handleNewPolicyAdded.bind(this) } />\n                    { this.__generagePoliciesList() }\n                </div>\n\n\n                <div id=\"PolicyForm\">\n\n                    <PolicyForm\n                        selected={this.state.selected}\n                        formSavedCallback={this.__handleFormSaved.bind(this)} />\n\n\n                    <RulesSelector\n                        policyId={this.state.selected.Id}\n                        rules={this.state.sobjects.rules}\n                        onAdded={this.__handlePolicyRulesChanged.bind(this)}\n                        onRemoved={this.__handlePolicyRulesChanged.bind(this)}\n                        rulesJunction={this.state.sobjects.rulesJunction} />\n\n\n                    <ObjectivesEditor\n                        policyId={this.state.selected.Id}\n                        objectives={this.state.sobjects.goals}\n                        goalsJunction={this.state.sobjects.goalsJunction}\n                        onSave={this.__handleObjectiveChange.bind(this)} />\n\n                </div>\n\n            </div>\n        );\n\n    }\n\n\n    __reselectPolicyAfterFetching() {\n\n        if (!this.state.selected) {\n            return\n        }\n\n\n        let policies = this.state.sobjects.policies,\n            selectedId = this.state.selected.Id\n\n        for (let i=0; i<policies.length; i++) {\n            if (policies[i].Id === selectedId) {\n                this.setState({selected: policies[i]});\n                break;\n            }\n        }\n\n    }\n\n\n    __handlePolicySelected(selectedId) {\n\n        if (this.state.selected && selectedId === this.state.selected.Id) {\n            return;\n        }\n\n        let policies = this.state.sobjects.policies;\n\n        for (let i=0; i<policies.length; i++) {\n            if (policies[i].Id === selectedId) {\n                this.setState({selected: policies[i]});\n                break;\n            }\n        }\n\n    }\n\n    __handleNewPolicyAdded(name, callback) {\n\n        callRemoteAction('addPolicy', name).then(newPolicies => {\n\n            policies.parseAllPoliciesObjects(newPolicies);\n            this.__setSobjectsOnState( policies.getNow() );\n            this.__reselectPolicyAfterFetching();\n            callback();\n\n        });\n    }\n\n\n    __clonePolicy(id) {\n\n        callRemoteAction('clonePolicy', id).then(newPolicies => {\n            policies.parseAllPoliciesObjects(newPolicies);\n            this.__setSobjectsOnState( policies.getNow() );\n            this.__reselectPolicyAfterFetching();\n        });\n\n    }\n\n\n    __handleFormSaved(id, name, desc, isInday, commitMode, isFixOverlaps) {\n\n\n\n        callRemoteAction('upsertPolicy', id, name, desc, isInday, commitMode, isFixOverlaps).then(policy => {\n\n            let p = policies.parsePolicy(policy);\n            policies.upsertPolicy(p);\n            this.setState({ sobjects: policies.getNow(), selected: p });\n\n        });\n\n    }\n\n\n    __handlePolicyRulesChanged(objects, deleteOrAdd, callback) {\n\n        let remoteActionToCall = deleteOrAdd === 'add' ? 'addNewWorkRulePolicyJunction' : 'removeRulesFromPolicy';\n\n        if (deleteOrAdd === 'remove') {\n\n            let newObjects = [];\n\n            objects.forEach(id => {\n                let junctionsIds = this.state.sobjects.rulesJunction.filter(junction => junction.SchedulingPolicy === this.state.selected.Id && junction.WorkRule === id);\n                newObjects.push(...junctionsIds);\n            });\n\n            objects = newObjects.map(o => o.Id);\n\n        }\n\n        callRemoteAction(remoteActionToCall, objects).then(newJunctions => {\n\n            let junctionMap = newJunctions.map(policies.parseRulePolicyJunction);\n\n            let sobjects = Object.assign(\n                {},\n                this.state.sobjects,\n                { rulesJunction: junctionMap}\n            );\n\n            policies.updatePolicies('rulesJunction', junctionMap);\n\n            this.setState({sobjects});\n            callback();\n\n        });\n\n    }\n\n\n    __handleObjectiveChange(actionType, obj) {\n\n        if (actionType === 'delete') {\n\n            // here, obj is id to delete\n            callRemoteAction('removeObjectiveFromPolicy', obj).then(didDelete => {\n\n                if (didDelete) {\n                    policies.deletePolicyObjectiveJuction(obj);\n                    this.setState( { sobjects: policies.getNow() });\n                }\n\n            });\n\n        }\n\n        if (actionType === 'upsert') {\n\n            callRemoteAction('upsertObjectiveToPolicy', obj).then(newJunction => {\n                policies.upsertPolicyObjectiveJunction(newJunction[0]);\n                this.setState( { sobjects: policies.getNow() });\n            });\n\n        }\n\n    }\n\n\n    __generatePageHeader() {\n\n        this.pageHeader = (\n            <PageHeader\n                icon={this.icon}\n                title={labels.SchedulingPolicies}\n                text={labels.SchedulingPolicyOBInto}\n                more={SchedulingPolicies.generateIntroText()} />\n        );\n    }\n\n\n    __generagePoliciesList() {\n        return (\n            <PoliciesList\n                selectedId={this.state.selected && this.state.selected.Id}\n                policies={this.state.sobjects.policies}\n                onClone={this.__clonePolicy.bind(this)}\n                onSelected={this.__handlePolicySelected.bind(this)} />\n        );\n    }\n\n\n    __setSobjectsOnState(data) {\n        this.setState({\n            sobjects: {\n                goals: data.goals,\n                goalsJunction: data.goalsJunction,\n                policies: data.policies,\n                rulesJunction: data.rulesJunction,\n                rules: data.rules\n            }\n        });\n    }\n\n\n    static generateIntroText() {\n\n        return (\n            <span>\n                <br/>\n                {labels.SchedulingPolicyOBInto2}\n                <ul>\n                    <li>{labels.SchedulingPolicyOBPoint1}</li>\n                    <li>{labels.SchedulingPolicyOBPoint2}</li>\n                </ul>\n                {labels.SchedulingPolicyOBEnding}\n            </span>\n        );\n\n    }\n\n}","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport './styles.css';\n\nexport default class AgentDispatcherLicenses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { saving: false };\n    }\n\n\n    render() {\n\n        return(\n            <div>\n                {this.generateDispatcherLicense()}\n                {this.generateAgentLicense()}\n            </div>\n        );\n\n    }\n\n\n    generateDispatcherLicense() {\n\n        if (this.state.saving) {\n            return <img src={lsdIcons.spinner} className=\"lt-saving-icon lt-saving-fsl\" />;\n        }\n\n        let dispatcherLicense = this.doesHaveLicense('FieldServiceDispatcherPsl'),\n            fslClasses = `slds-icon ad-licenseIcon ${dispatcherLicense ? 'dispatcherLicense' : ''}`;\n\n        return (\n            <span title={dispatcherLicense ? labels.RemoveDisLicnse : labels.AddDisLicnse}>\n                <svg aria-hidden=\"true\"\n                     onClick={this.licenseChanged.bind(this,'dispatcher', !dispatcherLicense)}\n                     className={fslClasses}>\n                        <use href={lsdIcons.dispatcherLicense} />\n                </svg>\n            </span>\n        )\n    }\n\n\n    generateAgentLicense() {\n\n        // we draw loading sign on generateDispatcherLicense()\n        if (this.state.saving) {\n            return null;\n        }\n\n        let agentLicense = this.props.hasAgentPermissions,\n            agentClasses = `slds-icon ad-licenseIcon ${agentLicense ? 'agentLicense' : ''}`;\n\n        return (\n            <span title={agentLicense ? labels.RemoveAgentLicnse : labels.AddAgentLicnse}>\n                <svg aria-hidden=\"true\"\n                     onClick={this.licenseChanged.bind(this,'agent', !agentLicense)}\n                     className={agentClasses}>\n                        <use href={lsdIcons.agentLicense} />\n                </svg>\n            </span>\n        )\n    }\n\n\n    licenseChanged(type, value) {\n\n        if (!this.props.hasAgentPermissions || !this.doesHaveLicense('FieldServiceDispatcherPsl')) {\n\n            if (type === 'dispatcher' && this.props.hasAgentPermissions) {\n                alert(labels.LicenseConflictDispatcher);\n                return;\n            }\n\n\n            if (type === 'agent' && this.doesHaveLicense('FieldServiceDispatcherPsl')) {\n                alert(labels.LicenseConflictAgent);\n                return;\n            }\n\n        }\n\n\n        this.setState({saving: true});\n\n        this.props.handleChange(type, value, () => {\n            this.setState({ saving: false });\n        });\n\n    }\n\n\n    doesHaveLicense(name) {\n\n        if (!this.props.licenses) {\n             return false;\n        }\n\n\n        for (let i=0; i<this.props.licenses.length; i++) {\n            if (this.props.licenses[i].PermissionSetLicenseId === this.props.licensesIds[name]) {\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n}\n","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\nimport lsdIcons from '../../../../utils/lsdIcons';\nimport AgentDispatcherLicenses from \"../AgentDispatcherLicenses/AgentDispatcherLicenses\";\nimport { openSObjectLink } from '../../../../utils/Utils';\n\n\n\nexport default class UserTerritoriesTable extends Component {\n\n\n    constructor() {\n        super();\n\n        this.state = { asc: -1 }\n\n    }\n\n\n    render() {\n\n        let arrow = this.state.asc === -1 ?\n            (<svg aria-hidden=\"true\" className=\"slds-icon cut-arrow\"><use href={lsdIcons.arrowdown} /></svg>)\n            :\n            <svg aria-hidden=\"true\" className=\"slds-icon cut-arrow\"><use href={lsdIcons.arrowup} /></svg>;\n\n\n\n        return (\n            <div id=\"utt-table-container\">\n\n                <div className=\"utt-table-head\">\n                    <div className=\"utt-table-head-cell\" onClick={e => this.setState({asc: this.state.asc * -1})}>{labels.UTuser} {arrow}</div>\n                    <div className=\"utt-table-head-cell utt-territories-cell\">{labels.UTterr}</div>\n                    <div className=\"utt-table-head-cell utt-territories-cell-license\">{labels.UTLicense}</div>\n                </div>\n\n                {this.__generateAllRows()}\n\n\n            </div>\n        );\n\n    }\n\n\n\n    __generateAllRows() {\n\n        let userIds = Object.keys(this.props.userTerritories)\n            .filter(k => this.__filterRow(this.props.userTerritories[k]))\n            .sort( (a,b) => this.props.userTerritories[a][0].territoryName.toUpperCase() > this.props.userTerritories[b][0].territoryName.toUpperCase() ? this.state.asc * -1 : this.state.asc);\n\n        let dispatcherPslId = this.props.licensesIds.FieldServiceDispatcherPsl;\n\n        for (let al in this.props.assignedLicenses) {\n\n            let licenses = this.props.assignedLicenses[al];\n\n           if  ((licenses[0].PermissionSetLicenseId === dispatcherPslId) || (licenses[1] && licenses[1].PermissionSetLicenseId === dispatcherPslId)) {\n\n               if (userIds.findIndex( v => v === al) === -1) {\n                   userIds.push(al);\n               }\n           }\n        }\n\n\n\n        return userIds.map(k => {\n\n            let user = this.props.users.find( u => u.Id === k),\n\n                dummy = [{\n                    Id: null,\n                    territoryId: \"\",\n                    territoryName: \"\",\n                    userId: k,\n                    active: user.IsActive,\n                    userName: user.Name\n                }];\n\n            return this.__generateRow(this.props.userTerritories[k] || dummy, user.IsActive)\n        });\n\n\n        return Object.keys(this.props.userTerritories)\n            .filter(k => this.__filterRow(this.props.userTerritories[k]))\n            .sort( (a,b) => this.props.userTerritories[a][0].territoryName.toUpperCase() > this.props.userTerritories[b][0].territoryName.toUpperCase() ? this.state.asc * -1 : this.state.asc)\n            .map(k => this.__generateRow(this.props.userTerritories[k]));\n\n\n    }\n\n\n    __generateRow(ut, isActive = true) {\n\n        let territoriesNames = ut.map( u => u.territoryName ).join(', ');\n\n        let notActiveHtml = !isActive ? <div className=\"notActiveUser\"></div> : null;\n\n        return (\n            <div className=\"utt-table-row\">\n\n                <div className=\"utt-table-cell\">\n                    {ut[0].userName}\n                    <a title={labels.Open_User_Record} onClick={this.__openSObjectLink.bind(this, ut[0].userId)}>\n                        <svg aria-hidden=\"true\" className=\"slds-icon\"><use href={lsdIcons.open} /></svg>\n                    </a>\n                </div>\n                <div className=\"utt-table-cell utt-territories-cell\" title={territoriesNames}>\n                    <div className=\"utt-territory-names-table\">{territoriesNames}</div>\n                    <span onClick={this.__editClicked.bind(this, ut[0].userId)}>{labels.UTEdit}</span>\n                </div>\n                <div className=\"utt-table-cell utt-territories-cell-license\">\n                    <AgentDispatcherLicenses hasAgentPermissions={this.props.agentPermissions[ut[0].userId]} licenses={this.props.assignedLicenses[ut[0].userId]} licensesIds={this.props.licensesIds} handleChange={this.__licenseChanged.bind(this, ut[0].userId)} />\n                </div>\n            </div>\n        )\n\n    }\n\n    __licenseChanged(userId, licenseType, newValue, cb) {\n\n        let action = newValue ? 'add' : 'remove',\n            isDispatcher = licenseType === 'dispatcher';\n\n        this.props.handleLicenseChanged(userId, action, isDispatcher, cb);\n\n    }\n\n\n    __filterRow(ut) {\n        return ut[0].userName.toUpperCase().indexOf(this.props.filter.toUpperCase()) > -1;\n    }\n\n\n    __editClicked(userId) {\n        this.props.editClicked(userId);\n    }\n\n\n\n    __openSObjectLink(id, ev) {\n        ev.preventDefault();\n        openSObjectLink(id);\n    }\n\n\n}","import React, { Component } from 'react';\nimport PageHeader from '../../PageHeader/PageHeader';\nimport labels from '../../../utils/customLabels';\nimport UserTerritoriesTable from \"./UserTerritoriesTable/UserTerritoriesTable\";\nimport lsdIcons from '../../../utils/lsdIcons';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport ObjectNames from \"../../../utils/ObjectNames\";\nimport './styles.css'\nimport Lightbox from \"../../Lightbox/Lightbox\";\n\n\n\nclass SharingUsersTerritories extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            isNew: false,\n            userTerritories: {},\n            saving: false,\n            lightboxUser: null,\n            filter: '',\n            filterTerritories: '',\n            showAddLightbox: false,\n            territories: [],\n            selectedTerritories: {},\n            assignedLicenses: {},\n            agentPermissions: {},\n            licensesIds: {},\n            counters: {\n                FieldServiceDispatcherPsl: {\n                    total: 0,\n                    used: 0\n                }\n            }\n        };\n\n        this.icon = {\n            url: lsdIcons.socialshare,\n            style: {\n                background: '#21a972'\n            }\n        };\n\n        this.maintext = (<div>{labels.SharingUsersTerritoriesExplanation}<ul><li>{labels.SharringMore1}</li><li>{labels.SharringMore2}</li></ul></div>);\n        this.moreText = (<div>{labels.SharringMore3}</div>);\n\n\n        this.getSUTdata();\n    }\n\n    render() {\n\n        return (\n            <div id=\"sharing-users-territORIs\">\n                <PageHeader title={labels.SharingUsersTerritories} text={this.maintext} icon={this.icon} more={this.moreText} />\n\n\n                <div className=\"sut-search\">\n                    <input type=\"search\" placeholder={labels.SearchUsersOb} value={this.state.filter} onChange={e => this.setState({filter: e.target.value})} />\n\n                    <span className=\"sut-add guided-setup-button guided-setup-button_neutral\" onClick={this.__addNewButton.bind(this)}>{labels.UTAddNew}</span>\n\n                    <div className=\"sut-licenses\" title={labels.RemainingDispatcherLicenses}>\n                        <svg aria-hidden=\"true\" className='slds-icon dispatcher-counter'>\n                            <use href={lsdIcons.dispatcherLicense} />\n                        </svg>\n                        {labels.UTDispatchers} {this.state.counters.FieldServiceDispatcherPsl.used}\\{this.state.counters.FieldServiceDispatcherPsl.total}\n                    </div>\n                </div>\n\n\n                <Lightbox show={this.state.showAddLightbox} maxHeight=\"450\" width=\"680\" handleVisibility={this.__toggleAddNew.bind(this)}>\n                    {this.__renderLightboxContent()}\n                </Lightbox>\n\n\n                <UserTerritoriesTable\n                    userTerritories={this.state.userTerritories}\n                    filter={this.state.filter}\n                    editClicked={this.__toggleAddNew.bind(this)}\n                    assignedLicenses={this.state.assignedLicenses}\n                    licensesIds={this.state.licensesIds}\n                    agentPermissions={this.state.agentPermissions}\n                    users={this.state.users}\n                    handleLicenseChanged={this.handleLicenseChanged.bind(this)}\n                    />\n\n\n            </div>\n        );\n\n    }\n\n\n    __renderLightboxContent() {\n\n        let saving = null;\n\n        if (this.state.saving) {\n            saving = (<div className=\"sut-saving\">\n                <img src={lsdIcons.spinner} />\n                {labels.SavingUserTerritories}\n            </div>)\n        }\n\n\n\n        if (this.state.showAddLightbox) {\n            return (\n                <div className=\"sut-territories-container\">\n\n                    <div>\n                        {this.__generateLightboxTitle()}\n                        <input\n                            type=\"search\"\n                            placeholder={labels.SearchTerrriris}\n                            onChange={e => this.setState({filterTerritories: e.target.value})} />\n\n                        {this.__generateLightboxIntro()}\n                    </div>\n\n                    <div id=\"sut-ter-checkbox\">{this.__generateTerritoriesCheckbox(this.state.lightboxUser)}</div>\n\n                    {saving}\n                    <div id=\"cut-button\" className=\"guided-setup-button guided-setup-button_brand\" onClick={this.__createUserTerritories.bind(this)}>{labels.CreateUserTerritories}</div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n\n    }\n\n\n    __generateLightboxTitle() {\n\n        if (this.state.isNew) {\n\n            let usersWithNoUt = this.state.users\n                .filter(u => !this.state.userTerritories[u.Id] || this.state.userTerritories[u.Id].length === 0)\n                .sort( (a,b) => a.Name.toUpperCase() > b.Name.toUpperCase() ? 1 : -1)\n                .map(u => (<option value={u.Id}>{u.Name}</option>));\n\n            usersWithNoUt.unshift(<option value={null}>{labels.CUTSelectUser}</option>)\n\n            return (<h1>\n                {labels.AssignTerritoriesFor}\n                <select id=\"sut-select\"\n                        value={this.state.lightboxUser}\n                        onChange={e => this.setState({lightboxUser: e.target.value})}>\n                            {usersWithNoUt}\n                    </select>\n            </h1>);\n\n        } else {\n            return (<h1>{labels.AssignTerritoriesFor} {this.state.userTerritories[this.state.lightboxUser][0].userName}</h1>);\n        }\n\n    }\n\n    __generateLightboxIntro() {\n        return (\n            <h2>\n                {labels.Assign_Territories_Dispatcher_intro1}<br/>\n                <a href=\"https://help.salesforce.com/articleView?id=fs_sharing.htm\" target=\"_blank\">{labels.Assign_Territories_Dispatcher_intro2}</a>\n            </h2>\n        );\n    }\n\n\n    __createUserTerritories() {\n\n        if (!this.state.lightboxUser) {\n            alert(labels.NoUSelected);\n            return;\n        }\n\n\n        if (this.state.isNew) {\n            let somethingSelected = false;\n            for (let key in this.state.selectedTerritories) {\n                if (this.state.selectedTerritories[key]) {\n                    somethingSelected = true;\n                    break;\n                }\n            }\n\n            if (!somethingSelected) {\n                alert(labels.Nocurrentterr47);\n                return;\n            }\n        }\n\n\n\n        let territoriesIds = [];\n\n        for (let tId in this.state.selectedTerritories) {\n            if (this.state.selectedTerritories[tId]) {\n                territoriesIds.push(tId);\n            }\n        }\n\n        this.setState({saving: true});\n\n        callRemoteAction('updateUserTerritories', this.state.lightboxUser, territoriesIds).then(newUts => {\n\n            let userId = this.state.lightboxUser,\n                userTerritories = Object.assign({}, this.state.userTerritories),\n                userTerritoriesArr = [];\n\n            newUts.forEach(ut => {\n                userTerritoriesArr.push(this.parseUserTerritory(ut));\n            });\n\n            if (userTerritoriesArr.length > 0) {\n                userTerritories[userId] = userTerritoriesArr;\n            } else {\n                delete userTerritories[userId];\n            }\n\n\n            this.setState({userTerritories, saving: false, lightboxUser:null, showAddLightbox: false});\n\n        }).catch(ex => {\n            console.error(ex);\n            this.setState({ saving: false});\n        })\n\n\n    }\n\n\n\n    __addNewButton() {\n        this.__toggleAddNew();\n    }\n\n    __toggleAddNew(userId) {\n\n        let selectedTerritories = {};\n\n        if (userId && this.state.userTerritories[userId]) {\n            this.state.userTerritories[userId].forEach(ut => selectedTerritories[ut.territoryId] = true);\n        }\n\n\n        this.setState(\n            {\n                isNew: !userId,\n                filterTerritories: '',\n                showAddLightbox: !this.state.showAddLightbox,\n                selectedTerritories,\n                lightboxUser: userId\n            }\n        );\n    }\n\n\n    __generateTerritoriesCheckbox() {\n\n        return this.state.territories\n            .filter(t => t.Name.toUpperCase().indexOf(this.state.filterTerritories.toUpperCase()) > -1)\n            .sort( (a,b) => a.Name.toUpperCase() > b.Name.toUpperCase() ? 1 : -1)\n            .map(t => {\n\n\n                return (\n                    <span className=\"sut-ter-lab-cont\">\n                        <input\n                            id={'territory_' + t.Id}\n                            type=\"checkbox\"\n                            checked={this.state.selectedTerritories[t.Id]}\n                            onClick={this.checkTerritoryInLightbox.bind(this, t.Id)} />\n\n                        <label htmlFor={'territory_' + t.Id}>{t.Name}</label>\n                    </span>\n                );\n\n\n        });\n\n    }\n\n\n    checkTerritoryInLightbox(tid,e) {\n\n        let selectedTerritories = Object.assign({}, this.state.selectedTerritories);\n\n        selectedTerritories[tid] = e.target.checked;\n\n        this.setState({selectedTerritories});\n\n    }\n\n\n    checkIfTerritorySelected(userId, tId) {\n\n        if (!this.state.userTerritories[userId]) {\n            return false;\n        }\n\n        let ut = this.state.userTerritories[userId];\n\n        for (let i=0; i<ut.length; i++) {\n            if (ut[i].territoryId === tId) {\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    getSUTdata() {\n\n        callRemoteAction('getSUTdata').then(result => {\n\n            let counters = {},\n                assignedLicenses = {},\n                licensesIds = {},\n                agentPermissions = {},\n                userTerritories = {};\n\n\n            // LICENSES (FieldServiceDispatcherPsl\n            result.licensesIds.forEach(l => {\n                licensesIds[l.DeveloperName] = l.Id;\n            });\n\n\n            // ASSIGNED PERMISSION FOR AGENT PERMISSION BLAT\n            result.assignedPermissionSet.forEach(aps => {\n                agentPermissions[aps.AssigneeId] = true;\n            });\n\n            // ASSIGNED LICENSES\n            result.assignedLicenses.forEach(al => {\n                assignedLicenses[al.AssigneeId] = assignedLicenses[al.AssigneeId] || [];\n                assignedLicenses[al.AssigneeId].push(al);\n            });\n\n\n            // LICENSES\n            result.licensesCounter.forEach(r => {\n                counters[r.DeveloperName] = {\n                    total: r.TotalLicenses,\n                    used: r.UsedLicenses\n                }\n            });\n\n\n            // USER TERRITORIES\n            result.userTerritories.forEach(ut => {\n\n                let parsedUt = this.parseUserTerritory(ut);\n\n                userTerritories[parsedUt.userId] = userTerritories[parsedUt.userId] || [];\n                userTerritories[parsedUt.userId].push(parsedUt);\n            });\n\n\n            this.setState({\n                assignedLicenses,\n                licensesIds,\n                userTerritories,\n                counters,\n                agentPermissions,\n                users: result.users,\n                territories: result.territories\n            });\n        })\n\n    }\n\n\n    parseUserTerritory(ut) {\n\n        return {\n            Id: ut.Id,\n            territoryId: ut[ObjectNames.UserTerritories.ServiceTerritory],\n            territoryName: ut[ObjectNames.UserTerritories.TerritoryName],\n            userId: ut[ObjectNames.UserTerritories.User.replace('__c','__r')].Id,\n            userName: ut[ObjectNames.UserTerritories.User.replace('__c','__r')].Name,\n        }\n    }\n\n\n    handleLicenseChanged(userId, action, isDispatcher, cb) {\n\n        callRemoteAction('removeAgentDispatcherPermissionSets', userId, action, isDispatcher).then(result => {\n\n            if (action === 'add' || (action === 'remove' && !isDispatcher) ) {\n\n                this.__handleReplyWhenLicenseChanged(userId, cb, result);\n\n            } else if (isDispatcher && action === 'remove') {\n\n                callRemoteAction('removeDispatcherLicense', userId).then(result => {\n                    this.__handleReplyWhenLicenseChanged(userId, cb, result);\n                })\n\n            }\n\n\n        }).catch(ex => {\n            window.alert(ex.message);\n            cb();\n        });\n\n    }\n\n\n    __handleReplyWhenLicenseChanged(userId, cb, result) {\n\n        let counters = {},\n            assignedLicenses = Object.assign({}, this.state.assignedLicenses),\n            agentPermissions = Object.assign({}, this.state.agentPermissions);\n\n\n        // ASSIGNED LICENSES\n        assignedLicenses[userId] = [];\n        result.assignedLicenses.forEach(al => {\n            assignedLicenses[al.AssigneeId].push(al);\n        });\n\n\n        result.licensesCounter.forEach(r => {\n            counters[r.DeveloperName] = {\n                total: r.TotalLicenses,\n                used: r.UsedLicenses\n            }\n        });\n\n\n        if (result.assignedPermissionSet.length === 0) {\n            agentPermissions[userId] = false;\n        } else {\n            result.assignedPermissionSet.forEach(aps => {\n                agentPermissions[aps.AssigneeId] = true;\n            });\n        }\n\n\n        let deleteIds = [];\n        for (let al in assignedLicenses) {\n            if (assignedLicenses[al].length === 0) {\n                deleteIds.push(al)\n            }\n        }\n\n        deleteIds.forEach(id => delete assignedLicenses[id]);\n\n\n        cb();\n\n        this.setState({\n            assignedLicenses,\n            agentPermissions,\n            counters\n        });\n    }\n\n\n}\n\nexport default SharingUsersTerritories;","import React, { Component } from 'react';\nimport labels from '../../../../utils/customLabels';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\n\n\nexport default class ObjectCounter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.count = 0;\n        this.initCountAnimation(props.count);\n    }\n\n    render() {\n\n        let counterTemplate = (\n            <div className=\"object-counter-container\">\n                <svg aria-hidden=\"true\" style={this.props.icon.style} className=\"slds-icon\"><use href={this.props.icon.url}></use></svg>\n                <div className=\"number-counter\" ref={ i => this.counterElement = i}></div>\n                <div className=\"counter-object-name\">{this.props.name}</div>\n            </div>\n        );\n\n        if (this.props.link) {\n            return (<Link to={this.props.link}>{counterTemplate}</Link>);\n        }\n\n        return counterTemplate;\n    }\n\n\n\n    initCountAnimation(count) {\n\n        let increaseBy = count < 100 ? 1 : 5,\n            intervalSpeed = count < 100 ? 10 : 2;\n\n        this.intervalId = setInterval(() => {\n            if (this.count < count) {\n\n                if (!this.counterElement) {\n                    clearInterval(this.intervalId);\n                    return;\n                }\n\n                this.counterElement.innerText = this.count += increaseBy;\n\n                if (this.count > count) {\n                    this.count = count;\n                    this.counterElement.innerText = this.count;\n                }\n\n            } else {\n\n                if (count === 0 && this.counterElement) {\n                    this.counterElement.innerText = 0;\n                } else {\n                    clearInterval(this.intervalId);\n                }\n\n            }\n        }, intervalSpeed);\n\n    }\n\n}","import React, { Component } from 'react';\nimport ObjectCounter from './ObjectCounter/ObjectCounter';\nimport lsdIcons from '../../../utils/lsdIcons';\nimport labels from '../../../utils/customLabels';\nimport callRemoteAction from '../../../utils/callRemoteAction';\nimport './styless.css';\n\n\nexport default class Home extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            counters: null\n        };\n\n        callRemoteAction('getObjectsCount').then(counters => {\n            this.setState({counters})\n        }).catch(ex => {\n            console.error(ex);\n        });\n\n        this.icons = {\n            policies:       { url: lsdIcons.policy, style: { fill: '#d15c96' } },\n            territories:    { url: lsdIcons.territory, style: { fill: '#7e8be4' } },\n            workTypes:      { url: lsdIcons.work_type, style: { fill: '#5876a3' } },\n            objectives:     { url: lsdIcons.objectives, style: { fill: '#56aadf' } },\n            operatingHours: { url: lsdIcons.operatingHours, style: { fill: '#6b9de2' } },\n            resources:      { url: lsdIcons.resources, style: { fill: '#ef6e64' } },\n            rules:          { url: lsdIcons.rules, style: { fill: '#45c073' } },\n        }\n\n\n        this.links = {\n            policies:       \"/SchedulingPolicies\",\n            territories:    \"/DefineTerritories\",\n            workTypes:      \"/WorkTypesAndSkills\",\n            objectives:     \"/SchedulingPolicies\",\n            operatingHours: null,\n            resources:      \"/ResourcesDefenition\",\n            rules:          \"/SchedulingPolicies\",\n        };\n\n\n    }\n\n    render() {\n\n        let partCWithLink = labels.GuidedSetup_Welcome_walkthrough_partC.split('$0'); \n\n        return (\n            <div>\n                <div className=\"welcome-conaynet\">\n                    <h1>{labels.WelcomeOb}</h1>\n\n                    <div>{labels.GuidedSetup_Welcome_walkthrough_partA}</div><br/>\n                    <div>{labels.GuidedSetup_Welcome_walkthrough_partB}</div><br/>\n                    <div>\n                        <span>{partCWithLink[0]}</span>\n                        <a className=\"setup-link\" href=\"https://help.salesforce.com/articleView?id=fs_set_up.htm\" target=\"_blank\">{labels.GuidedSetup_Setup_link}</a>\n                        <span>{partCWithLink[1]}</span>\n                    </div>\n\n                 </div>\n\n                <div className=\"counters-container\">\n                    {this.__generateCounters()}\n                </div>\n            </div>\n        );\n\n    }\n\n\n    __generateCounters() {\n\n        if (!this.state.counters) {\n            return null;\n        }\n\n        let counters = [];\n\n        for (let key in this.state.counters) {\n            counters.push((<ObjectCounter name={labels.objectNames[key]} count={this.state.counters[key]} icon={this.icons[key]} link={this.links[key]} />));\n        }\n\n        return counters;\n\n    }\n\n}","import React, { Component } from 'react';\nimport './styles.css';\n\nexport default class Toast extends Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n\n        return (<div id=\"ob-toast\" ref={ i =>{window.toastElement = i; Toast.toastElement = i} }>{this.props.text}</div>);\n\n\n        // if (this.props.show) {\n        //     return (<div id=\"ob-toast\">{this.props.text}</div>);\n        // } else {\n        //     return null;\n        // }\n\n    }\n\n}\n\n\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport DefineTerritories from './DefineTerritories/DefineTerritories';\nimport WorkTypesAndSkills from './WorkTypesAndSkills/WorkTypesAndSkills';\nimport AppointmentBooking from './AppointmentBooking/AppointmentBooking';\nimport ResourcesDefenition from './ResourcesDefenition/ResourcesDefenition';\nimport SchedulingPolicies from './SchedulingPolicies/SchedulingPolicies';\nimport SharingUsersTerritories from './SharingUsersTerritories/SharingUsersTerritories';\nimport Home from './Home/Home';\nimport Toast from '../Toast/Toast';\nimport callRemoteAction from '../../utils/callRemoteAction';\nimport labels from '../../utils/customLabels';\n\nimport './styles.css';\n\nclass WorkCanvas extends Component {\n\n    constructor() {\n        super();\n\n        this.state = { saving: false };\n\n        callRemoteAction.setComponenetSavingStatus = (saving) => {\n            Toast.toastElement.style.display = saving ? 'inline-block' : 'none';\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"workCanvasContainer\">\n                <Toast text={labels.OnboardingSaving} />\n                <Route path='/' exact component={Home} />\n                <Route path='/DefineTerritories' component={DefineTerritories} />\n                <Route path='/WorkTypesAndSkills' component={WorkTypesAndSkills} />\n                <Route path='/AppointmentBooking' component={AppointmentBooking} />\n                <Route path='/ResourcesDefenition' component={ResourcesDefenition} />\n                <Route path='/SchedulingPolicies' component={SchedulingPolicies} />\n                <Route path='/SharingUsersTerritories' component={SharingUsersTerritories} />\n            </div>\n        );\n    }\n}\n\nexport default WorkCanvas;\n","import React, { Component } from 'react';\nimport LeftPanel from './components/LeftPanel/LeftPanel';\nimport WorkCanvas from './components/WorkCanvas/WorkCanvas';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            <LeftPanel />\n            <WorkCanvas />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n//import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('OnboardingRoot'));\n//registerServiceWorker();\n"],"sourceRoot":""}