{"version":3,"sources":["Components/Details/Details.js","Components/DateSelection/DateSelection.js","Misc/ConditionDefenitions.js","Components/AdditionalCriteria/Condition/SelectPicklist/SelectPicklist.js","Components/AdditionalCriteria/Condition/Condition.js","Components/AdditionalCriteria/AdditionalCriteria.js","Components/SaveArea/SaveArea.js","Components/DisplayFields/DisplayFields.js","App.js","registerServiceWorker.js","index.js"],"names":["Details","props","state","window","FilterEditor","fieldNames","Name","object","Description__c","charactersLeft","length","className","labels","type","maxlength","placeholder","NamePlaceholder","value","this","onChange","__fieldChanged","bind","Description","DescriptionPlaceholder","CharactersLeft","replace","nextProps","newState","setState","field","event","newValueObject","target","update","Component","DateSelection","minDays","Days_after_horizon__c","maxDays","Days_before_horizon__c","onlyGanttAppointments","List_only_appointments_on_the_gantt__c","name","id","checked","onlyGanttChanged","for","ShowSAFromLast","min","max","valueChanged","onKeyPress","disableManualInput","DaysAndNext","daysPastIt","ShowOnlySaOnGantt","e","preventDefault","updatedObject","updatedValuesForObj","updatedState","FieldTypes","Operators","label","equals","availability","not_equal_to","less_than","greater_than","less_or_equal","greater_or_equal","contains","does_not_contain","start_with","SelectPicklist","values","picklist","forEach","indexOf","showPicklist","valuesCheckboxes","val","push","checkboxClicked","onClick","stopPropagation","hide","updateValue","Condition","valueHtmlElement","dhtmlxCalendar","property","condition","operator","valueDateDisplay","picklistValueDisplay","isValid","isEmpty","errorMessage","Array","isArray","join","fieldType","fields","Date","toLocaleString","toLocaleDateString","dhtmlXCalendarObject","index","hideTime","attachDhtmlxEvents","prevProps","prevState","errorElement","class","propertyChanged","generateFieldOptions","operatorChanged","generateOperatorOptions","generateValueInput","title","readOnly","updatePicklistValues","disabled","ref","optionsSelect","fieldsNameLabel","substr","sort","f1","f2","localeCompare","nameLabel","availableFields","attachEvent","date","displayString","getTime","newCondition","updateCondition","setDate","unload","addConditionToFilterObject","arguments","newValue","existingValueIndex","splice","checkIfValid","callback","propertyType","noErrorsInSwitch","parseDate","toString","InvalidDateFormat","test","InvalidNumber","isNaN","parseFloat","AdditionalCriteria","MAX_CRITERIAS","numberOfConditions","operators","logic","Field","Operator","Value","addRow","AddRow","removeRow","RemoveRow","LogicFilter","updateLogicFilter","LogicFilterExample","needToUpdate","Logic__c","Object","keys","maxIndex","i","conditions","Number","parseInt","numberOfOps","newOperators","pop","SaveArea","public","Public__c","publichForAll","saveAs","customPermissions","Create_custom_Gantt_filters","Publish_custom_Gantt_filters","publicChanged","AvailableForAllUsers","Id","SaveAs","save","Save","prompt","EnterFilterName","alert","MustHaveName","DisplayFields","selectedFieldsArray","availableFieldsArray","seletedSelectElement","availableSelectElement","availableOptions","selectedOptions","FullAPIName","Label","propsFields","sortedAvailableFieldsArray","selectHtml","multiple","n","__swapLists","__changeOrderUp","__changeOrderDown","DisplayFieldsFE","ExplainFE","selectedFieldsJson","Displayed_Fields__c","showFields","JSON","parse","toSelectedFields","selectedValues","selectedNodes","filter","assign","updateSelectedFields","j","indexToSwap","savedValue","selectedIndex","k","includes","selected","App","ganttFilterObject","Criterias__c","ganttFilter","allFields","getData","saving","updateObject","Visualforce","remoting","Manager","invokeAction","remoteActions","data","ev","status","ex","console","warn","CustomFilterInvalidCriteria","key","FSL__RULE_VIOLATIONS__FSL","buffer","escape","timeout","objValues","conditionOrIndex","newConditions","remove","stringify","logicFilter","split","eval","log","checkIfAllConditionsInLogic","checkIfLogicPadded","logicStr","words","word","pos","haveConditions","digitArray","match","indexesFound","currentDigit","undefined","newName","invalidCriterias","validateLogicFilter","invalidLogic","filterId","saveData","Days_after_horizon","Days_before_horizon","Criterias","List_only_appointments_on_the_gantt","Logic","Public","Displayed_Fields","fId","parent","filterEditorPage","SomethingWentWrong","__closeFilterLightbox","location","href","toLocaleLowerCase","reload","url","encodeURI","Boolean","hostname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d3559f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\n\nclass Details extends Component {\n\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n        this.state[window.FilterEditor.fieldNames.Name] = props.object[window.FilterEditor.fieldNames.Name];\n        this.state[window.FilterEditor.fieldNames.Description__c] = props.object[window.FilterEditor.fieldNames.Description__c];\n\n        if (this.state[window.FilterEditor.fieldNames.Description__c]) {\n            this.state.charactersLeft = 255 - this.state[window.FilterEditor.fieldNames.Description__c].length;\n        } else {\n            this.state.charactersLeft = 255;\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"fe-details-container section-container\">\n\n                <h1 className=\"section-title\">{window.FilterEditor.labels.Details}</h1>\n\n                <div className=\"fe-general-input-container\">\n                    <label className=\"fe-general-input-label\">{window.FilterEditor.labels.Name}</label>\n                    <input\n                        type=\"text\"\n                        maxlength=\"100\"\n                        className=\"fe-general-input-text\"\n                        placeholder={window.FilterEditor.labels.NamePlaceholder}\n                        value={this.state[window.FilterEditor.fieldNames.Name]}\n                        onChange={this.__fieldChanged.bind(this, window.FilterEditor.fieldNames.Name)}\n                    />\n                </div>\n\n                <div className=\"fe-general-input-container\">\n                    <label className=\"fe-general-input-label\">{window.FilterEditor.labels.Description}</label>\n                    <textarea\n                        className=\"fe-general-input-textarea\"\n                        maxlength=\"255\"\n                        placeholder={window.FilterEditor.labels.DescriptionPlaceholder}\n                        value={this.state[window.FilterEditor.fieldNames.Description__c]}\n                        onChange={this.__fieldChanged.bind(this, window.FilterEditor.fieldNames.Description__c)}\n                    />\n\n                    <div>{ window.FilterEditor.labels.CharactersLeft.replace('$0',this.state.charactersLeft)}</div>\n\n                </div>\n\n            </div>\n        );\n    }\n\n\n\n    componentWillReceiveProps(nextProps) {\n\n        if (!nextProps.object) {\n            return;\n        }\n\n        let newState = {};\n\n        newState[window.FilterEditor.fieldNames.Name] = nextProps.object[window.FilterEditor.fieldNames.Name];\n        newState[window.FilterEditor.fieldNames.Description__c] = nextProps.object[window.FilterEditor.fieldNames.Description__c];\n\n\n        if (this.state[window.FilterEditor.fieldNames.Description__c]) {\n            newState.charactersLeft = 255 - newState[window.FilterEditor.fieldNames.Description__c].length;\n        } else {\n            newState.charactersLeft = 255;\n        }\n\n        this.setState(newState);\n\n    }\n\n\n    __fieldChanged(field, event) {\n\n        let newValueObject = {};\n        newValueObject[field] = event.target.value;\n        this.props.update(newValueObject);\n\n    }\n\n}\n\nexport default Details;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass DateSelection extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            minDays: props.object[window.FilterEditor.fieldNames.Days_after_horizon__c] || 7,\n            maxDays: props.object[window.FilterEditor.fieldNames.Days_before_horizon__c] || 7,\n            onlyGanttAppointments: props.object[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] || false,\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"fe-date-selection section-container\">\n\n                <h1 className=\"section-title\">{window.FilterEditor.labels.DateSelection}</h1>\n\n                <span>\n\n                    <div>\n                        <input type=\"radio\" value=\"dates\" name=\"ganttapps\" id=\"fe-check-days\" checked={!this.state.onlyGanttAppointments} onChange={this.onlyGanttChanged.bind(this)} />\n\n                        <label for=\"fe-check-days\">\n                            {window.FilterEditor.labels.ShowSAFromLast}\n                            <input className=\"fe-general-input-text fe-date-input\" type=\"number\" min=\"0\" max=\"31\" value={this.state.minDays} onChange={this.valueChanged.bind(this, \"minDays\")} onKeyPress={this.disableManualInput} />\n                            {window.FilterEditor.labels.DaysAndNext}\n                            <input className=\"fe-general-input-text fe-date-input\" type=\"number\" min=\"0\" max=\"31\" value={this.state.maxDays} onChange={this.valueChanged.bind(this, \"maxDays\")} onKeyPress={this.disableManualInput} />\n                            {window.FilterEditor.labels.daysPastIt}\n                        </label>\n                    </div>\n\n                    <div>\n                        <input type=\"radio\" value=\"gantt\" name=\"ganttapps\" id=\"fe-check-gantt\" checked={this.state.onlyGanttAppointments} onChange={this.onlyGanttChanged.bind(this)} />\n                        <label for=\"fe-check-gantt\">{window.FilterEditor.labels.ShowOnlySaOnGantt}</label>\n                    </div>\n\n                </span>\n\n            </div>\n        );\n    }\n\n\n    disableManualInput(e) {\n        e.preventDefault();\n    }\n\n\n    onlyGanttChanged(e) {\n\n        let updatedObject = {};\n        updatedObject[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] = e.target.value === 'gantt';\n\n        this.props.update(updatedObject);\n\n    }\n\n\n    valueChanged(field, e) {\n\n        let updatedValuesForObj = {},\n            updatedState = {};\n\n        updatedState[field] = e.target.value;\n\n        if (field === 'minDays') {\n            updatedValuesForObj[window.FilterEditor.fieldNames.Days_before_horizon__c] = e.target.value;\n        } else {\n            updatedValuesForObj[window.FilterEditor.fieldNames.Days_after_horizon__c] = e.target.value;\n        }\n\n        this.props.update(updatedValuesForObj)\n\n        this.setState(updatedState);\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let newState = {};\n\n        newState.onlyGanttAppointments = nextProps.object[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c];\n        newState.maxDays = nextProps.object[window.FilterEditor.fieldNames.Days_after_horizon__c];\n        newState.minDays = nextProps.object[window.FilterEditor.fieldNames.Days_before_horizon__c];\n\n        this.setState(newState);\n\n    }\n\n\n}\n\nexport default DateSelection;\n","let FieldTypes = {\n    BOOLEAN: 'BOOLEAN',\n    DATE: 'DATE',\n    DATETIME: 'DATETIME',\n    DOUBLE: 'DOUBLE',\n    EMAIL: 'EMAIL',\n    ID: 'ID',\n    INTEGER: 'INTEGER',\n    PICKLIST: 'PICKLIST',\n    REFERENCE: 'REFERENCE',\n    STRING: 'STRING',\n    TEXTAREA: 'TEXTAREA',\n    CURRENCY: 'CURRENCY',\n    PERCENT: 'PERCENT'\n};\n\n\nlet Operators = {\n\n    'equals': {\n        label: window.FilterEditor.labels.equals,\n        availability: [FieldTypes.BOOLEAN, FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.DOUBLE, FieldTypes.EMAIL , FieldTypes.ID , FieldTypes.INTEGER , FieldTypes.REFERENCE , FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'not equal to': {\n        label: window.FilterEditor.labels.not_equal_to,\n        availability: [FieldTypes.BOOLEAN, FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.DOUBLE, FieldTypes.EMAIL , FieldTypes.ID , FieldTypes.INTEGER , FieldTypes.REFERENCE , FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'less than': {\n        label: window.FilterEditor.labels.less_than,\n        availability: [FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.INTEGER ,  FieldTypes.DOUBLE,FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'greater than': {\n        label: window.FilterEditor.labels.greater_than,\n        availability: [FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.INTEGER ,  FieldTypes.DOUBLE,FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'less or equal':{\n        label: window.FilterEditor.labels.less_or_equal,\n        availability: [FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.INTEGER ,  FieldTypes.DOUBLE,FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'greater or equal': {\n        label: window.FilterEditor.labels.greater_or_equal,\n        availability: [FieldTypes.DATE, FieldTypes.DATETIME , FieldTypes.INTEGER ,  FieldTypes.DOUBLE,FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.CURRENCY, FieldTypes.PERCENT]\n    },\n\n    'contains': {\n        label: window.FilterEditor.labels.contains,\n        availability: [FieldTypes.PICKLIST, FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.REFERENCE]\n    },\n\n    'does not contain': {\n        label: window.FilterEditor.labels.does_not_contain,\n        availability: [FieldTypes.PICKLIST, FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.REFERENCE]\n    },\n\n    'start with': {\n        label: window.FilterEditor.labels.start_with,\n        availability: [FieldTypes.STRING, FieldTypes.TEXTAREA, FieldTypes.REFERENCE]\n    }\n\n};\n\n\nexport {Operators, FieldTypes};","import React, { Component } from 'react';\nimport './styles.css'\n\nclass SelectPicklist extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { values: {} };\n\n        props.picklist.forEach(value => {\n            this.state.values[value] = (props.value.indexOf(value) > -1);\n        });\n    }\n\n\n    render() {\n\n        if (!this.props.showPicklist) {\n            return null;\n        }\n\n        let valuesCheckboxes = [];\n\n        for (let val in this.state.values) {\n\n            valuesCheckboxes.push(\n                <div>\n                    <input type=\"checkbox\"\n                           id={'picklist_value_checkbox_' + valuesCheckboxes.length}\n                           checked={this.state.values[val]}\n                           onChange={ this.checkboxClicked.bind(this, val) } />\n                    <label for={'picklist_value_checkbox_' + valuesCheckboxes.length}>{val}</label>\n                </div>\n            );\n\n        }\n\n        return [\n\n                <div className=\"fe-blocker\" onClick={ e => { e.stopPropagation(); this.props.hide(); }} /> ,\n\n                <div className=\"fe-picklist-background\">\n                    <div className=\"fe-picklist-select\">\n                        {valuesCheckboxes}\n                    </div>\n                </div>\n            ];\n\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n\n        let newState = { values: {}};\n\n        nextProps.picklist.forEach(value => {\n            newState.values[value] = (nextProps.value.indexOf(value) > -1);\n        });\n\n        this.setState(newState);\n    }\n\n\n    checkboxClicked(val, e) {\n        e.stopPropagation();\n        this.props.updateValue(val);\n    }\n\n}\n\nexport default SelectPicklist\n","import React, { Component } from 'react';\nimport {Operators} from './../../../Misc/ConditionDefenitions'\nimport SelectPicklist from './SelectPicklist/SelectPicklist';\n\nclass Condition extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.valueHtmlElement = null;\n\n        this.dhtmlxCalendar = null;\n\n        this.state = {\n            property: props.condition && props.condition.property || null,\n            operator: props.condition && props.condition.operator || null,\n            value: props.condition && props.condition.value || null,\n            valueDateDisplay: null,\n            showPicklist: false,\n            picklistValueDisplay: null,\n            isValid: false,\n            isEmpty: true,\n            errorMessage: null\n        };\n\n        if (this.state.value) {\n\n            this.state.isEmpty = false;\n            this.state.isValid = true;\n\n            if (Array.isArray(this.state.value)) {\n                this.state.picklistValueDisplay = this.state.value.join(', ');\n            }\n\n        }\n\n        if (this.state.property) {\n            let fieldType = props.fields[this.state.property][1];\n\n            if (fieldType === 'DATETIME' && this.state.value) {\n                this.state.valueDateDisplay =  new Date(this.state.value).toLocaleString();\n            } else if (fieldType === 'DATE' && this.state.value) {\n                this.state.valueDateDisplay =  new Date(this.state.value).toLocaleDateString();\n            }\n\n            else if (fieldType === 'BOOLEAN') {\n                if (this.state.value === 'false') {\n                    this.state.value = false;\n                } else {\n                    this.state.value = true;\n                }\n            }\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        if (!this.state.property) {\n            return;\n        }\n\n        let fieldType = this.props.fields[this.state.property][1];\n\n        if (fieldType === 'DATE') {\n            this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index);\n            this.dhtmlxCalendar.hideTime();\n            this.attachDhtmlxEvents();\n        }\n\n        else if (fieldType === 'DATETIME') {\n            this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index);\n            this.attachDhtmlxEvents();\n        }\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (!this.state.property) {\n            return;\n        }\n\n        let fieldType = this.props.fields[this.state.property][1];\n\n        if (prevState.property && prevState.property) {\n\n            let oldFieldType = this.props.fields[prevState.property][1];\n\n            if (oldFieldType === fieldType) {\n                return;\n            }\n\n        }\n\n\n        if (fieldType === 'DATE') {\n            this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index);\n            this.dhtmlxCalendar.hideTime();\n            this.attachDhtmlxEvents();\n        }\n\n        else if (fieldType === 'DATETIME') {\n            this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index);\n            this.attachDhtmlxEvents();\n        }\n\n    }\n\n\n\n    render() {\n\n        let errorElement = !this.state.isValid && !this.state.isEmpty ? <div className=\"fe-condition-error\">{this.state.errorMessage}</div> : null;\n\n        return (\n            <div className=\"fe-condition\">\n\n                <span class=\"fe-condition-index\">{this.props.index}.</span>\n\n                <select className=\"fe-select fe-select-field\"\n                        onChange={this.propertyChanged.bind(this)}\n                        value={this.state.property}>\n                            {this.generateFieldOptions()}\n                </select>\n\n                <select className=\"fe-select fe-select-operator\"\n                        onChange={this.operatorChanged.bind(this)}\n                        value={this.state.operator}>\n                        disabled={!this.state.operator}>\n                            {this.generateOperatorOptions()}\n                </select>\n\n                {this.generateValueInput()}\n\n                {errorElement}\n\n            </div>\n        )\n    }\n\n\n    // ------------------------------------------\n    // GENERATE HTML\n    // ------------------------------------------\n\n    generateValueInput() {\n\n        let valueHtml = null,\n            fieldType = null;\n\n        if (this.state.property) {\n            fieldType = this.props.fields[this.state.property][1];\n        }\n\n        if (fieldType === 'BOOLEAN') {\n            valueHtml = (\n                <select className=\"fe-select fe-select-value\" onChange={this.valueChanged.bind(this)} value={this.state.value}>\n                    <option value={true}>true</option>\n                    <option value={false}>false</option>\n                </select>\n            )\n        } else if (fieldType === 'PICKLIST') {\n\n            valueHtml = [\n                <input\n                    type=\"text\"\n                    value={this.state.picklistValueDisplay}\n                    title={this.state.picklistValueDisplay}\n                    readOnly\n                    className=\"fe-general-input-text\"\n                    onClick={ () => this.setState({showPicklist: true}) }\n                />,\n\n                <SelectPicklist\n                    value={this.state.value}\n                    updateValue={this.updatePicklistValues.bind(this)}\n                    showPicklist={this.state.showPicklist}\n                    picklist={this.props.fields[this.state.property][2]}\n                    hide={ () => this.setState({showPicklist: false}) }\n                />\n            ];\n\n        } else {\n            valueHtml = (\n                <input type=\"text\"\n                       id={'value_field_' + this.props.index}\n                       onChange={this.valueChanged.bind(this)}\n                       className=\"fe-general-input-text\"\n                       disabled={!this.state.property}\n                       ref={e => this.valueHtmlElement = e}\n                       readOnly = {(this.state.property && (this.props.fields[this.state.property][1] === 'DATE' || this.props.fields[this.state.property][1] === 'DATETIME'))}\n                       value={this.state.valueDateDisplay || this.state.value} />\n            )\n        }\n\n        return valueHtml;\n\n    }\n\n\n    generateFieldOptions() {\n\n        let optionsSelect = [],\n            fields = this.props.fields;\n\n        optionsSelect.push(<option value=\"\">-- None --</option>);\n\n        const fieldsNameLabel = [];\n        for (let name in fields) {\n            let label;\n            if (fields[name][1] === 'REFERENCE' && fields[name][0].indexOf(' ID') > -1) {\n                label = fields[name][0].substr(0, fields[name][0].indexOf(' ID'));\n            }\n            else {\n                 label = fields[name][0];\n            }\n            fieldsNameLabel.push([name, label]);\n        }\n        fieldsNameLabel.sort((f1, f2)=>  { \n            return f1[1].localeCompare(f2[1]);\n        });\n        fieldsNameLabel.forEach((nameLabel)=>{\n            optionsSelect.push(<option value={nameLabel[0]}>{nameLabel[1]}</option>);\n        })\n        \n        return optionsSelect;\n    }\n\n\n    generateOperatorOptions() {\n\n        if (!this.props.fields || !this.state.property) {\n            return null;\n        }\n\n        let optionsSelect = [],\n            availableFields = [];\n\n        for (let name in Operators) {\n\n            let fieldType = this.props.fields[this.state.property][1];\n\n            if (Operators[name].availability.indexOf(fieldType) > -1) {\n                optionsSelect.push(<option value={name}>{Operators[name].label}</option>);\n                availableFields.push(name);\n            }\n        }\n\n        if (availableFields.indexOf(this.state.operator) === -1) {\n            this.setState({operator: availableFields[0]});\n        }\n\n        return optionsSelect;\n    }\n\n\n\n\n    // ------------------------------------------\n    // HANDLE CHANGES\n    // ------------------------------------------\n\n\n    attachDhtmlxEvents() {\n\n        this.dhtmlxCalendar.attachEvent(\"onChange\", (date, state) => {\n\n            let displayString = this.props.fields[this.state.property][1] === 'DATETIME' ? date.toLocaleString() : date.toLocaleDateString();\n\n\n            this.setState({value: date.getTime() , valueDateDisplay: displayString});\n\n            let newCondition = {};\n\n            newCondition[this.props.index] = {\n                property:   this.state.property,\n                operator:   this.state.operator,\n                value:      date.getTime(),\n                isValid:    true,\n                isEmpty:    false\n            };\n\n            this.props.updateCondition(newCondition);\n\n        });\n\n\n        this.dhtmlxCalendar.attachEvent(\"onShow\", () => {\n\n            if (this.state.value) {\n                this.dhtmlxCalendar.setDate(new Date(this.state.value));\n            }\n\n        });\n\n    }\n\n    propertyChanged(e) {\n\n        let newState = {property: e.target.value},\n            fieldType = e.target.value !== \"\" ? this.props.fields[e.target.value][1] : null;\n\n\n        // user changed to none, reset all fields\n        if (!fieldType) {\n            newState.operator = null;\n            newState.property = null;\n            newState.valueDateDisplay = null;\n        }\n\n        if (this.valueHtmlElement) {\n            this.valueHtmlElement.value = null;\n        }\n\n        newState.value = null;\n\n        // unload dhtmlx calendar\n        if (fieldType !== 'DATETIME' && fieldType !== 'DATE' && this.dhtmlxCalendar && this.dhtmlxCalendar.unload) {\n            this.dhtmlxCalendar.unload();\n            newState.valueDateDisplay = null;\n        }\n\n        // reset if picklist\n        if (fieldType === 'PICKLIST') {\n            newState.value = [];\n            newState.picklistValueDisplay = null;\n        }\n\n        else if (fieldType === 'DATE') {\n            //this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index, { enableTime: false });\n            //this.attachDhtmlxEvents();\n        }\n\n        else if (fieldType === 'DATETIME') {\n            //this.dhtmlxCalendar = new window.dhtmlXCalendarObject('value_field_' + this.props.index);\n            //this.attachDhtmlxEvents();\n        }\n\n        else if (fieldType === 'BOOLEAN') {\n            newState.value = true;\n        }\n\n\n        this.setState(newState, () => {\n            this.addConditionToFilterObject();\n        });\n    }\n\n\n    operatorChanged(e) {\n        this.setState({operator: e.target.value}, () => {\n            this.addConditionToFilterObject();\n        });\n    }\n\n\n    valueChanged(value, e) {\n\n        if (arguments.length === 2) {\n\n            if (value === 'true') { value = true };\n            if (value === 'false') { value = false };\n\n            this.setState({value: value}, () => {\n\n                if (value === 'true') { value = true };\n                if (value === 'false') { value = false };\n\n                this.addConditionToFilterObject();\n            });\n            return;\n        }\n\n        // value is actually e\n        this.setState({value: value.target.value}, () => {\n            this.addConditionToFilterObject();\n        });\n    }\n\n\n    updatePicklistValues(value) {\n\n        let newValue,\n            existingValueIndex = this.state.value.indexOf(value);\n\n        // check if added value\n        if (existingValueIndex === -1) {\n            newValue = [...this.state.value , value].sort();\n        }\n\n        // need to remove\n        else {\n            newValue = [...this.state.value];\n            newValue.splice(existingValueIndex, 1);\n        }\n\n\n        this.setState({value: newValue , picklistValueDisplay: newValue.join(', ')}, () => {\n            this.addConditionToFilterObject();\n        });\n    }\n\n\n\n\n    // ------------------------------------------\n    // VALIDATION AND ADD TO MASTER OBJECT\n    // ------------------------------------------\n\n    checkIfHaveNull() {\n        return (!this.state.property || !this.state.operator || !this.state.value);\n    }\n\n\n    addConditionToFilterObject() {\n\n        if (!this.state.property) {\n            this.props.updateCondition(this.props.index, true);\n            return;\n        }\n\n        let newCondition = {};\n\n        this.checkIfValid(() => {\n\n            newCondition[this.props.index] = {\n                property:   this.state.property,\n                operator:   this.state.operator,\n                value:      this.state.value,\n                isValid:    this.state.isValid\n            };\n\n            this.props.updateCondition(newCondition);\n\n        });\n\n    }\n\n\n    checkIfValid(callback) {\n\n        let updatedState = {},\n            property = this.state.property,\n            value = this.state.value;\n\n\n        // not relevant if property is not selected\n        if (!property) {\n\n            updatedState.isEmpty = true;\n            updatedState.isValid = true;\n            this.setState({isValid: updatedState.isValid , errorMessage: null, isEmpty: updatedState.isEmpty});\n            return;\n\n        } else {\n            updatedState.isEmpty = false;\n        }\n\n\n        let propertyType = this.props.fields[this.state.property][1],\n            noErrorsInSwitch = true;\n\n\n        // value can be null\n        if (!value) {\n\n            updatedState.isValid = true;\n            noErrorsInSwitch = false;\n\n\n        } else {\n\n            switch (propertyType) {\n\n                // case 'PICKLIST':\n                //\n                //     if (value.length === 0) {\n                //         updatedState.isValid = false;\n                //         updatedState.errorMessage = 'You must pick at least one value';\n                //         noErrorsInSwitch = false;\n                //     }\n                //\n                //     break;\n\n                case 'DATETIME':\n                    let parseDate = new Date(value);\n                    if (parseDate.toString() === 'Invalid Date') {\n                        updatedState.isValid = false;\n                        updatedState.errorMessage = window.FilterEditor.labels.InvalidDateFormat;\n                        noErrorsInSwitch = false;\n                    }\n\n                    break;\n\n                case 'DATE':\n                    parseDate = new Date(value);\n                    if (parseDate.toString() === 'Invalid Date') {\n                        updatedState.isValid = false;\n                        updatedState.errorMessage = window.FilterEditor.labels.InvalidDateFormat;\n                        noErrorsInSwitch = false;\n                    }\n\n                    break;\n\n                case 'INTEGER':\n                    if (!/^\\d+$/.test(value)) {\n                        updatedState.isValid = false;\n                        updatedState.errorMessage = window.FilterEditor.labels.InvalidNumber;\n                        noErrorsInSwitch = false;\n                    }\n\n                    break;\n\n                case 'DOUBLE':\n                    if(isNaN(parseFloat(value))) {\n                        updatedState.isValid = false;\n                        updatedState.errorMessage = window.FilterEditor.labels.InvalidNumber;\n                        noErrorsInSwitch = false;\n                    }\n\n                    break;\n\n            }\n\n        }\n\n        if (noErrorsInSwitch) {\n            updatedState.isValid = true;\n            updatedState.errorMessage = null;\n        }\n\n\n        this.setState( {isValid: updatedState.isValid, errorMessage: updatedState.errorMessage, isEmpty: updatedState.isEmpty} , callback);\n\n    }\n}\n\nexport default Condition;","import React, { Component } from 'react';\nimport Condition from './Condition/Condition';\nimport './styles.css';\n\nclass AdditionalCriteria extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.MAX_CRITERIAS = 10;\n\n        this.state = {\n            numberOfConditions: 0,\n            operators: [],\n            logic: null,\n        };\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"fe-critera-container section-container\">\n\n                <h1 className=\"section-title\">{window.FilterEditor.labels.AdditionalCriteria}</h1>\n\n                <div>\n                    <span className=\"fe-select-critera-title fe-title-field\">{window.FilterEditor.labels.Field}</span>\n                    <span className=\"fe-select-critera-title fe-title-operator\">{window.FilterEditor.labels.Operator}</span>\n                    <span className=\"fe-select-critera-title fe-title-value\">{window.FilterEditor.labels.Value}</span>\n                </div>\n\n                <div className=\"fe-general-input-container\">\n                    {this.state.operators}\n                </div>\n\n                <div className=\"fe-add-remove-rows\">\n                    <span onClick={this.addRow.bind(this)}>{window.FilterEditor.labels.AddRow}</span>\n                    <span onClick={this.removeRow.bind(this)}>{window.FilterEditor.labels.RemoveRow}</span>\n                </div>\n\n                <div className=\"fe-general-input-container\">\n                    <label className=\"fe-general-input-label\">{window.FilterEditor.labels.LogicFilter}</label>\n                    <input type=\"text\"\n                           value={this.state.logic}\n                           onChange={this.updateLogicFilter.bind(this)}\n                           className=\"fe-general-input-text fe-logic-input\"\n                           placeholder={window.FilterEditor.labels.LogicFilterExample} />\n                </div>\n\n            </div>\n        );\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let updatedState = {},\n            needToUpdate = false;\n\n        if (this.state.logic !== nextProps.object[window.FilterEditor.fieldNames.Logic__c]) {\n            needToUpdate = true;\n            updatedState.logic = nextProps.object[window.FilterEditor.fieldNames.Logic__c];\n        }\n\n\n        if (nextProps.fields && Object.keys(nextProps.fields).length > 0) {\n\n            let operators = [],\n                maxIndex = 0;\n\n\n\n\n            for (let i in nextProps.conditions) {\n                maxIndex = maxIndex > Number.parseInt(i) ? maxIndex : Number.parseInt(i);\n            }\n\n            let numberOfOps = maxIndex > this.state.operators.length ? maxIndex : this.state.operators.length;\n            if (numberOfOps < 5) {\n                numberOfOps = 5;\n            }\n\n\n\n            for (let i=1; i<numberOfOps+1; i++) {\n\n                if (nextProps.conditions[i]) {\n                    operators.push(\n                        <Condition index={i} fields={nextProps.fields} updateCondition={this.props.updateCondition} condition={nextProps.conditions[i]} />\n                    );\n                } else {\n                    operators.push(\n                        <Condition index={i} fields={nextProps.fields} updateCondition={this.props.updateCondition} />\n                    );\n                }\n\n            }\n\n            updatedState.operators = operators;\n            needToUpdate = true;\n        }\n\n        if (needToUpdate) {\n            this.setState(updatedState);\n        }\n    }\n\n\n    addRow() {\n        if (this.state.operators.length < this.MAX_CRITERIAS) {\n            let newOperators = [...this.state.operators , <Condition index={this.state.operators.length + 1} fields={this.props.fields} updateCondition={this.props.updateCondition} /> ];\n            this.setState({operators: newOperators});\n        }\n    }\n\n    removeRow() {\n        if (this.state.operators.length > 5) {\n            let newOperators = [...this.state.operators];\n            newOperators.pop();\n\n            // removing\n            this.props.updateCondition(newOperators.length+1, true);\n\n            this.setState({operators: newOperators});\n        }\n    }\n\n\n    updateLogicFilter(e) {\n\n        let updateCondition = {};\n        updateCondition[window.FilterEditor.fieldNames.Logic__c] = e.target.value;\n        this.props.update(updateCondition);\n    }\n\n\n}\n\nexport default AdditionalCriteria;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass SaveArea extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = { public: props.object[window.FilterEditor.fieldNames.Public__c] || false };\n\n    }\n\n\n    render() {\n\n        let publichForAll = null,\n            saveAs = null;\n\n        if (window.FilterEditor.customPermissions.Create_custom_Gantt_filters && window.FilterEditor.customPermissions.Publish_custom_Gantt_filters) {\n            publichForAll = <div className=\"fe-checkbox-save\">\n                <input type=\"checkbox\" id=\"fe-save-for\" checked={this.state.public} onChange={this.publicChanged.bind(this)} />\n                <label for=\"fe-save-for\">{window.FilterEditor.labels.AvailableForAllUsers}</label>\n            </div>\n        }\n\n\n        if (this.props.object.Id) {\n            saveAs = <div class=\"fe-save-as-button\" onClick={this.saveAs.bind(this)}>{window.FilterEditor.labels.SaveAs}</div>\n        }\n\n\n\n        return (\n            <div className=\"fe-save-area\">\n\n                {publichForAll}\n\n                <div class=\"fe-save-button\" onClick={this.props.save.bind(this, false)}>{window.FilterEditor.labels.Save}</div>\n\n                {saveAs}\n\n            </div>\n\n        );\n    }\n\n\n    publicChanged(e) {\n        let updatedObject = {};\n        updatedObject[window.FilterEditor.fieldNames.Public__c] = e.target.checked;\n        this.props.update(updatedObject);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ public: nextProps.object[window.FilterEditor.fieldNames.Public__c] || false });\n    }\n\n    saveAs() {\n\n        let name = window.prompt(window.FilterEditor.labels.EnterFilterName, this.props.object[window.FilterEditor.fieldNames.Name]);\n\n        if (name === null) {\n            return;\n        }\n\n        if (name == '') {\n            window.alert(window.FilterEditor.labels.MustHaveName);\n            return;\n        }\n\n        this.props.save(name);\n    }\n}\n\nexport default SaveArea;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass DisplayFields extends Component {\n\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            selectedFieldsArray: [],\n            availableFieldsArray: []\n        };\n\n        this.seletedSelectElement = null;\n        this.availableSelectElement = null;\n\n\n\n    }\n\n\n    render() {\n\n        let availableOptions = [],\n            selectedOptions = [];\n\n        this.state.selectedFieldsArray.forEach(FullAPIName => {\n            if (this.props.fields[FullAPIName])\n                selectedOptions.push(<option value={FullAPIName}>{this.props.fields[FullAPIName].Label.replace(' ID', '')}</option>)\n        });\n\n        const propsFields = this.props.fields;\n        let sortedAvailableFieldsArray = this.state.availableFieldsArray;\n        sortedAvailableFieldsArray.sort(\n            (f1, f2)=>\n            {\n                return propsFields[f1].Label.localeCompare(propsFields[f2].Label);\n            }\n            );\n        sortedAvailableFieldsArray.forEach(FullAPIName => {\n            if (this.props.fields[FullAPIName])\n                availableOptions.push(<option value={FullAPIName}>{this.props.fields[FullAPIName].Label.replace(' ID', '')}</option>)\n        });\n\n\n        let selectHtml = (\n            <div className=\"df-FieldsContainer\">\n\n                <select multiple className=\"df-select\" ref={ n => this.availableSelectElement = n} >\n                    {availableOptions}\n                </select>\n\n                <div className=\"df-actions-container\">\n                    <div className=\"df-action-button\" onClick={this.__swapLists.bind(this, true)}>&gt;</div>\n                    <div className=\"df-action-button\" onClick={this.__swapLists.bind(this, false)}>&lt;</div>\n                </div>\n\n                <select multiple className=\"df-select\" ref={ n => this.seletedSelectElement = n}>\n                    {selectedOptions}\n                </select>\n\n                <div className=\"df-actions-container\">\n                    <div className=\"df-action-button\" onClick={this.__changeOrderUp.bind(this)}><div className=\"rotate-up\">&lt;</div></div>\n                    <div className=\"df-action-button\" onClick={this.__changeOrderDown.bind(this)}><div className=\"rotate-down\">&lt;</div></div>\n                </div>\n\n            </div>\n        );\n\n\n        return (\n            <div className=\"fe-details-container section-container\">\n\n                <h1 className=\"section-title\">{window.FilterEditor.labels.DisplayFieldsFE}</h1>\n                <div className=\"df-explain\">{window.FilterEditor.labels.ExplainFE}</div>\n\n                {selectHtml}\n\n            </div>\n        );\n    }\n\n\n\n    componentWillReceiveProps(nextProps) {\n\n\n        let newState = {},\n            selectedFieldsJson = nextProps.object[window.FilterEditor.fieldNames.Displayed_Fields__c],\n            showFields = null,\n            selectedFieldsArray = [],\n            availableFieldsArray = [];\n\n\n        if (selectedFieldsJson) {\n            showFields = JSON.parse(nextProps.object[window.FilterEditor.fieldNames.Displayed_Fields__c]);\n        }\n\n        for (let FullAPIName in nextProps.fields) {\n\n            if (showFields) {\n                if (showFields.indexOf(FullAPIName) > -1) {\n                    selectedFieldsArray.push(FullAPIName);\n                } else {\n                    availableFieldsArray.push(FullAPIName);\n                }\n            } else {\n                availableFieldsArray.push(FullAPIName);\n            }\n\n        }\n\n\n\n        // newState.selectedFieldsArray = selectedFieldsArray;\n        newState.selectedFieldsArray = showFields ? showFields : selectedFieldsArray;\n        newState.availableFieldsArray = availableFieldsArray.sort();\n        newState.showFields = showFields;\n\n\n        this.setState(newState);\n\n    }\n\n\n\n    __swapLists(toSelectedFields) {\n\n        let selectedValues = [],\n            selectedNodes = toSelectedFields? this.availableSelectElement.selectedOptions : this.seletedSelectElement.selectedOptions,\n            selectedFieldsArray = [],\n            availableFieldsArray = [];\n\n            for(let i=0; i<selectedNodes.length; i++) {\n                selectedValues.push(selectedNodes[i].value);\n            }\n\n\n        if (toSelectedFields) {\n\n            selectedFieldsArray = [...this.state.selectedFieldsArray];\n            selectedFieldsArray.push(...selectedValues);\n            availableFieldsArray.push(...this.state.availableFieldsArray.filter(field => selectedValues.indexOf(field) === -1));\n\n        } else {\n\n            availableFieldsArray = [...this.state.availableFieldsArray];\n            availableFieldsArray.push(...selectedValues);\n            selectedFieldsArray.push(...this.state.selectedFieldsArray.filter(field => selectedValues.indexOf(field) === -1));\n\n        }\n\n\n        let newState = Object.assign({}, this.state);\n\n        newState.selectedFieldsArray = selectedFieldsArray;\n        newState.availableFieldsArray = availableFieldsArray;\n\n        this.setState(newState);\n\n        this.props.updateSelectedFields(selectedFieldsArray);\n    }\n\n\n\n    __changeOrderUp() {\n\n        let selectedFieldsArray = [...this.state.selectedFieldsArray],\n            selectedNodes = this.seletedSelectElement.selectedOptions,\n            selectedValues = [];\n\n        if (selectedNodes.length === 0) {\n            return;\n        }\n\n        for (let i=0; i<selectedNodes.length; i++) {\n            selectedValues.push(selectedNodes[i].value);\n        }\n\n\n        for (let j=0; j<selectedFieldsArray.length; j++) {\n\n            if (j === 0) {\n                continue;\n            }\n\n\n            if (selectedValues.indexOf(selectedFieldsArray[j]) > -1) {\n\n                let indexToSwap = j-1,\n                    savedValue = selectedFieldsArray[j];\n\n                selectedFieldsArray[j] = selectedFieldsArray[indexToSwap];\n                selectedFieldsArray[indexToSwap] = savedValue;\n\n            }\n        }\n\n\n        let newState = Object.assign({}, this.state);\n\n        newState.selectedFieldsArray = selectedFieldsArray;\n        this.seletedSelectElement.selectedIndex = -1;\n\n        this.setState(newState, function () {\n            for (let k=0; k<this.seletedSelectElement.length; k++) {\n                if (selectedValues.includes(this.seletedSelectElement[k].value)) {\n                    this.seletedSelectElement[k].selected = true;\n                }\n            }\n        });\n\n        this.props.updateSelectedFields(selectedFieldsArray);\n\n    }\n\n\n\n    __changeOrderDown() {\n\n        let selectedFieldsArray = [...this.state.selectedFieldsArray],\n            selectedNodes = this.seletedSelectElement.selectedOptions,\n            selectedValues = [];\n\n        if (selectedNodes.length === 0) {\n            return;\n        }\n\n        for (let i=0; i<selectedNodes.length; i++) {\n            selectedValues.push(selectedNodes[i].value);\n        }\n\n\n        for (let j=selectedFieldsArray.length-2; j >= 0; j--) {\n\n            if (selectedValues.indexOf(selectedFieldsArray[j]) > -1) {\n\n                let indexToSwap = j+1,\n                    savedValue = selectedFieldsArray[j];\n\n                selectedFieldsArray[j] = selectedFieldsArray[indexToSwap];\n                selectedFieldsArray[indexToSwap] = savedValue;\n\n            }\n        }\n\n\n        let newState = Object.assign({}, this.state);\n\n        newState.selectedFieldsArray = selectedFieldsArray;\n        this.seletedSelectElement.selectedIndex = -1;\n\n        this.setState(newState, function () {\n            for (let k=0; k<this.seletedSelectElement.length; k++) {\n                if (selectedValues.includes(this.seletedSelectElement[k].value)) {\n                    this.seletedSelectElement[k].selected = true;\n                }\n            }\n        });\n\n        this.props.updateSelectedFields(selectedFieldsArray);\n\n\n\n    }\n\n\n\n\n\n}\n\nexport default DisplayFields;\n","import React, { Component } from 'react';\n\nimport Details from './Components/Details/Details'\nimport DateSelection from './Components/DateSelection/DateSelection'\nimport AdditionalCriteria from './Components/AdditionalCriteria/AdditionalCriteria'\nimport SaveArea from './Components/SaveArea/SaveArea'\nimport DisplayFields from './Components/DisplayFields/DisplayFields'\n\nimport './index.css';\n\nclass App extends Component {\n\n    constructor() {\n\n        super();\n\n        let ganttFilterObject = { Id: window.FilterEditor.id };\n\n        ganttFilterObject[window.FilterEditor.fieldNames.Name] = null;\n        ganttFilterObject[window.FilterEditor.fieldNames.Description__c] = null;\n        ganttFilterObject[window.FilterEditor.fieldNames.Days_after_horizon__c] = 3;\n        ganttFilterObject[window.FilterEditor.fieldNames.Days_before_horizon__c] = 3;\n        ganttFilterObject[window.FilterEditor.fieldNames.Criterias__c] = false;\n        ganttFilterObject[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] = null;\n        ganttFilterObject[window.FilterEditor.fieldNames.Logic__c] = null;\n        ganttFilterObject[window.FilterEditor.fieldNames.Public__c] = false;\n        this.selectedFieldsJson = null;\n\n        this.state = {\n            ganttFilter: ganttFilterObject,\n            conditions: {},\n            fields: null,\n            allFields: {}\n        };\n\n        this.getData();\n\n        this.saving = false;\n    }\n\n\n    render() {\n        return (\n          <div>\n\n            <Details\n                object={this.state.ganttFilter}\n                update={this.updateObject.bind(this)}\n            />\n\n\n            <DateSelection\n                object={this.state.ganttFilter}\n                update={this.updateObject.bind(this)}\n            />\n\n            <AdditionalCriteria\n                object={this.state.ganttFilter}\n                fields={this.state.fields}\n                conditions={this.state.conditions}\n                update={this.updateObject.bind(this)}\n                updateCondition={this.updateCondition.bind(this)}\n            />\n\n            <DisplayFields\n                fields={this.state.allFields}\n                object={this.state.ganttFilter}\n                updateSelectedFields={this.updateSelectedFields.bind(this)}\n            />\n\n            <SaveArea\n                object={this.state.ganttFilter}\n                update={this.updateObject.bind(this)}\n                save={this.save.bind(this)}\n            />\n\n          </div>\n        );\n    }\n\n\n\n    getData() {\n\n        window.Visualforce.remoting.Manager.invokeAction(\n            window.FilterEditor.remoteActions.getData,\n            this.state.ganttFilter.Id,\n\n            (data, ev) => {\n\n                if (ev.status) {\n\n                    let newState = {};\n\n                    if (data.ganttFilter && data.ganttFilter[window.FilterEditor.fieldNames.Criterias__c]) {\n\n                        try {\n                            newState.conditions = JSON.parse(data.ganttFilter[window.FilterEditor.fieldNames.Criterias__c]);\n                        } catch(ex) {\n                            console.warn('CAN NOT PARSE CRITERIA JSON');\n                            alert(window.FilterEditor.labels.CustomFilterInvalidCriteria.replace('{0}', data.ganttFilter[window.FilterEditor.fieldNames.Name]));\n                        }\n\n                    }\n\n                    newState.ganttFilter = data.ganttFilter || this.state.ganttFilter;\n                    newState.ganttFilter[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] = newState.ganttFilter[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] || false;\n\n\n                    newState.fields = {}\n\n                    // ignore fields that are coming from a reference\n                    for (let key in data.fields) {\n                       if (key.indexOf('.') === -1) {\n                            newState.fields[key] =  data.fields[key];\n                       }\n                    }\n\n                    newState.fields.FSL__RULE_VIOLATIONS__FSL = ['Rule Violations', 'BOOLEAN'];\n\n\n\n\n\n\n                    this.selectedFieldsJson = newState.ganttFilter[window.FilterEditor.fieldNames.Displayed_Fields__c] ? newState.ganttFilter[window.FilterEditor.fieldNames.Displayed_Fields__c] : null;\n\n\n                    let allFields = {};\n\n                    for (let k in data.allFields) {\n                        data.allFields[k].forEach( field => allFields[field.FullAPIName] = field);\n                    }\n\n                    newState.allFields = allFields;\n\n                    this.setState(newState);\n\n                }\n\n            }, { buffer: true, escape: false, timeout: 120000 }\n        );\n\n    }\n\n\n    updateObject(objValues) {\n        this.setState({ ganttFilter: Object.assign(this.state.ganttFilter, objValues) });\n    }\n\n\n    updateCondition(conditionOrIndex, remove = false) {\n\n        let newConditions, newState = {};\n\n        // removing\n        if (remove) {\n\n            if (this.state.conditions[conditionOrIndex]) {\n                newConditions = Object.assign({}, this.state.conditions);\n                delete newConditions[conditionOrIndex];\n\n                newState.ganttFilter = Object.assign({}, this.state.ganttFilter);\n                newState.ganttFilter[window.FilterEditor.fieldNames.Criterias__c] = JSON.stringify(newConditions);\n                newState.conditions = newConditions;\n\n                this.setState(newState);\n            }\n\n            return;\n        }\n\n        newConditions = Object.assign({}, this.state.conditions, conditionOrIndex);\n        newState.conditions = newConditions;\n\n        newState.ganttFilter = Object.assign({}, this.state.ganttFilter);\n        newState.ganttFilter[window.FilterEditor.fieldNames.Criterias__c] = JSON.stringify(newConditions);\n\n        this.setState(newState);\n    }\n\n\n\n\n    validateLogicFilter() {\n\n\n        let logicFilter = this.state.ganttFilter[window.FilterEditor.fieldNames.Logic__c];\n\n        if (!logicFilter) {\n            return true;\n        }\n\n        logicFilter = logicFilter.split('AND').join('&&');\n        logicFilter = logicFilter.split('OR').join('||');\n        logicFilter = logicFilter.split('NOT').join('!');\n\n        for (let i=2; i<=10; i++) {\n            logicFilter = logicFilter.split(i).join('true');\n        }\n\n        logicFilter = logicFilter.split(1).join('true');\n\n        let isValid = false;\n\n        try {\n            window.eval(logicFilter);\n            isValid = true;\n        } catch(ex) {\n            console.log('bad format');\n        }\n\n\n        // if (isValid && this.checkIfAllConditionsInLogic(this.state.ganttFilter[window.FilterEditor.fieldNames.Logic__c]) && this.checkIfLogicPadded(logicFilter)) {\n        //     console.log(\"good\")\n        // } else {\n        //     console.log(\"bad\")\n        // }\n\n        return (isValid && this.checkIfAllConditionsInLogic(this.state.ganttFilter[window.FilterEditor.fieldNames.Logic__c]) && this.checkIfLogicPadded(logicFilter));\n    }\n\n    checkIfLogicPadded(logicStr) {\n        if (!logicStr) {\n            return true;\n        }\n\n        let words = ['&&', '!', '||'];\n\n        //no multiple spaces allowed\n        if (logicStr.replace(/\\s\\s+/g, ' ') != logicStr)\n            return false;\n\n        for (let i=0; i<words.length; i++) {\n            let word = words[i];\n            let pos = logicStr.indexOf(word);\n\n            while(pos > -1) {\n\n                //check for spaces\n                if (logicStr[pos -1] !== ' ' || logicStr[pos + word.length] !== ' ')\n                    return false;\n\n                pos = logicStr.indexOf(word, pos+1);\n            }\n        }\n\n        return true;\n    }\n\n\n    checkIfAllConditionsInLogic(logicStr) {\n\n        if (!logicStr) {\n            return true;\n        }\n\n        let digitArray = logicStr.match(/\\d/g),\n            found1 = false,\n            indexesFound = {},\n            haveConditions;\n\n\n        for (let key in this.state.conditions) {\n            indexesFound[key] = false; // condition index present, will be true if in logic\n            haveConditions = true;\n        }\n\n        // there are no conditions but logic is filled\n        if (!haveConditions && logicStr !== \"\") {\n            return false;\n        }\n\n\n        for (let i=0; i<digitArray.length; i++) {\n\n            let currentDigit = digitArray[i];\n\n            if  (currentDigit === '1') {\n\n                // removing 10s and checking if still got 1s\n                let logicFilterNo10 = logicStr.split(10).join('');\n\n                if (logicFilterNo10.indexOf('1') > - 1) {\n\n                    if (indexesFound[1] === undefined) {\n                        return false;\n                    }\n                    else {\n                        indexesFound[1] = true;\n                        continue;\n                    }\n                } else {\n                    continue;\n                }\n            }\n\n            if  (currentDigit === '0') {\n\n                if (indexesFound[10] === undefined) {\n                    return false;\n                }\n                else {\n                    indexesFound[10] = true;\n                    continue;\n                }\n\n            }\n\n\n            // we have index that is not present on logic\n            if (indexesFound[currentDigit] === undefined) {\n                return false;\n            }\n\n            // we have index both on logic and condition\n            else {\n                indexesFound[currentDigit] = true;\n            }\n\n        }\n\n\n        for (let i in indexesFound) {\n            if (!indexesFound[i]) {\n                return false;\n            }\n        }\n\n        return true;\n\n    }\n\n\n    updateSelectedFields(updateSelectedFields) {\n        this.selectedFieldsJson = JSON.stringify(updateSelectedFields);\n        let ganttFilter = Object.assign({}, this.state.ganttFilter);\n        ganttFilter[window.FilterEditor.fieldNames.Displayed_Fields__c] = this.selectedFieldsJson;\n        this.setState({ganttFilter});\n    }\n\n\n\n    save(newName) {\n\n        if (this.saving) {\n            return;\n        }\n\n        if (!this.state.ganttFilter[window.FilterEditor.fieldNames.Name]) {\n            window.alert(window.FilterEditor.labels.MustHaveName);\n            return;\n        }\n\n        for (let i in this.state.conditions) {\n            if (!this.state.conditions[i].isValid) {\n                window.alert(window.FilterEditor.labels.invalidCriterias);\n                return;\n            }\n        }\n\n\n        if (!this.validateLogicFilter()) {\n            console.log('BAD LOGIC')\n            window.alert(window.FilterEditor.labels.invalidLogic);\n            return;\n        }\n\n\n        // newName => saveAs\n        let filterId = newName ? null : this.state.ganttFilter.Id;\n\n\n        this.saving = true;\n\n        window.Visualforce.remoting.Manager.invokeAction(\n            window.FilterEditor.remoteActions.saveData,\n            filterId,\n            {\n                Name:                                newName || this.state.ganttFilter[window.FilterEditor.fieldNames.Name],\n                Description:                         this.state.ganttFilter[window.FilterEditor.fieldNames.Description__c],\n                Days_after_horizon:                  this.state.ganttFilter[window.FilterEditor.fieldNames.Days_after_horizon__c],\n                Days_before_horizon:                 this.state.ganttFilter[window.FilterEditor.fieldNames.Days_before_horizon__c],\n                Criterias:                           this.state.ganttFilter[window.FilterEditor.fieldNames.Criterias__c],\n                List_only_appointments_on_the_gantt: this.state.ganttFilter[window.FilterEditor.fieldNames.List_only_appointments_on_the_gantt__c] || false,\n                Logic:                               this.state.ganttFilter[window.FilterEditor.fieldNames.Logic__c],\n                Public:                              this.state.ganttFilter[window.FilterEditor.fieldNames.Public__c],\n                Displayed_Fields:                    this.selectedFieldsJson || null\n\n            },\n\n            (fId, ev) => {\n\n                if (ev.status) {\n\n\n                    if (window.parent && window.parent.filterEditorPage) {\n\n                        if (!fId) {\n                            alert(window.FilterEditor.labels.SomethingWentWrong);\n                        }\n\n\n                        window.parent.__closeFilterLightbox(fId);\n                        return;\n                    }\n\n\n                    if (!newName && window.location.href.toLocaleLowerCase().indexOf('?id') > -1) {\n                        window.location.reload();\n                    } else {\n\n                        let url = window.encodeURI(window.location.href.substr(0,window.location.href.indexOf('?')));\n                        window.location.href = window.encodeURI(url + '?id=' + fId);\n                    }\n\n                }\n\n            }, { buffer: true, escape: true, timeout: 120000 });\n\n    }\n\n\n\n\n\n\n\n\n\n\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('FilterAppRoot'));\n// registerServiceWorker();"],"sourceRoot":""}