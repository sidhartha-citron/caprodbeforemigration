"use strict";(globalThis.webpackChunkmaps_desktop=globalThis.webpackChunkmaps_desktop||[]).push([[704],{9211:(t,i,s)=>{s.d(i,{Z:()=>h});var e=s(7387),o=s(1023),r=s(5493),a=s(7082);const{moment:n}=window;class h{constructor(){const t=new window.OverlappingMarkerSpiderfier(window.MA.map,{keepSpiderfied:!0});t.addListener("click",(i=>{(i.spiderfied||0===t.markersNearMarker(i,!0).length)&&(i.savedQueryId||i.linkId||i.LinkId__c||window.waypoint_Click.call(i,{markerType:"waypoint"}))})),t.addListener("spiderfy",(t=>{t.forEach((t=>{t.spiderfied=!0}))})),t.addListener("unspiderfy",(t=>{t.forEach((t=>{t.spiderfied=!1}))})),t._isVue=!0,t.map._isVue=!0,this.spiderfier=t,this.options={},this.waypointIdToWaypoint=new Map,this.markerCache=[],this.tooltipCache={},this.isGuideRoute=!1,this.id=(0,e.ZP)()}setWaypoints(t,i=!1){return t&&t.length?(this.options.waypoints=i?t:o.Z.buildMAIOWaypoints(t),t.forEach((t=>{this.waypointIdToWaypoint.set(t.id,t)}))):this.options.waypoints=[],this}setHardBreaks(t){return t&&Array.isArray(t)&&t.length?(this.options.blockedTimes=[],t.forEach((t=>{this.options.blockedTimes.push({startTime:t.start,endTime:t.end})})),this):this}setSoftBreaks(t){return t&&Array.isArray(t)&&t.length?(this.options.softBreaks=[],t.forEach((t=>{this.options.softBreaks.push({startTime:t.start+1,endTime:t.end-1})})),this):this}setStrokeColor(t){return this.strokeColor=t,this}setWaypointColor(t){return this.waypointColor=t,this}setOptimized(t=!1){return this.options.optimized=t,this}setTimeBased(t=!1){return this.options.timebased=t,this}setTraffic(t=!1){return this.options.traffic=t,this}setDirections(t=!1){return this.options.directions=t,this}setIsGuideRoute(t=!1){return this.isGuideRoute=t,this}setTiles(t=!1){return this.options.tiles=t,this}setRouteStart(t){return t&&"number"==typeof t&&(this.options.routestart=t),this}setRouteEnd(t){return t&&"number"==typeof t&&(this.options.routeend=t),this}setDriveProfile(t){return t&&(this.options.driveProfile=t),this}setTimebasedlegacy(t=!1){return this.options.timebasedlegacy=t,this}setRouteTimeBasedOptions(t){if(!t||!t.Start||!t.End)return this;const i=n(t.Start,"hh:mm a");if(i.isValid())this.setRouteStart(i.unix());else{const t=n(r.Z.start,"hh:mm a");this.setRouteStart(t.unix())}const s=n(t.End,"hh:mm a");if(s.isValid())this.setRouteEnd(s.unix());else{const t=n(r.Z.end,"hh:mm a");this.setRouteEnd(t.unix())}return this}setFirst(t){return t&&0!==Object.keys(t).length?(this.options.first&&this.waypointIdToWaypoint.delete(this.options.first.id),this.options.first=t,this.waypointIdToWaypoint.set(t.id,t),this):this}setLast(t){return t&&0!==Object.keys(t).length?(this.options.last&&this.waypointIdToWaypoint.delete(this.options.last.id),this.options.last=t,this.waypointIdToWaypoint.set(t.id,t),this):this}setFirstWaypoint(t){if(t&&0!==Object.keys(t).length){this.options.first&&this.waypointIdToWaypoint.delete(this.options.first.id);const i=t.Options__c||"{}",s=window.getWaypointTimeOptions(i);s.start===n().unix()&&(s.start=this.options.routestart),this.options.first={lat:t.lat,lng:t.lng,id:t.id,duration:s.duration,start:s.start},this.waypointIdToWaypoint.set(t.id,t)}return this}setLastWaypoint(t){if(t&&0!==Object.keys(t).length){this.options.last&&this.waypointIdToWaypoint.delete(this.options.last.id);const i=t.Options__c||"{}",s=window.getWaypointTimeOptions(i);s.start===n().unix()&&(s.start=this.options.routeend),this.options.last={lat:t.lat,lng:t.lng,id:t.id,duration:s.duration,start:s.start},this.waypointIdToWaypoint.set(t.id,t)}return this}getRoute(){return this.route}build(t){return new Promise(((i,s)=>{if(!(!this.options.first||this.options.first.lat&&this.options.first.lng))throw new Error("Invalid Start Location");if(this.options.last&&(!this.options.last.lat||!this.options.last.lng))throw new Error("Invalid Last Location");const e=o.Z.buildDayRangesAndGetOptimizationType(this.options);if(this.options.waypoints.forEach((t=>{if(this.options.timebased||(t.start=void 0),!t.lat||!t.lng)throw new Error("Invalid Waypoint");"minimize_total_distance"===e.optimizationType&&(t.duration=1)})),this.options.optimization_type=e.optimizationType,this.options.dayranges=e.dayRanges,window.VueStore.getters["scheduling/addToScheduleExecuted"]&&this.options.waypoints.length){const{options:{waypoints:t,dayranges:i}}=this,s=i[0].first.start,e=t.filter((t=>void 0===t.start)),r=t.filter((t=>void 0!==t.start));if(r.length){const{shift:t,adjustedWaypoints:i}=o.Z.waypointReorderingForAddToSchedule(this.options.dayranges[0],this.options.waypoints,e,s,r);this.options.waypoints=i,this.options.dayranges[0]=t}}if(!this.options.waypoints.length&&(this.options.first||this.options.last)){if(this.options.first&&this.options.first.lat){const t=JSON.parse(JSON.stringify(this.options.first));t.duration=1,t.start++,t.id=t.id.substring(0,10),this.options.waypoints.push(t)}if(this.options.last&&this.options.last.lat){const t=JSON.parse(JSON.stringify(this.options.last));t.duration=1,t.start--,t.id=t.id.substring(0,10),this.options.waypoints.push(t)}}window.VueStore.commit("scheduling/setAddToScheduleExecuted",!1),o.Z.getRouteData(this.options).then((e=>{this.route=e,this.processQueueError(t).then((()=>{this.mixinMetadataWithRouteWaypoints(),this.updateWaypointIndices(),this.tooltipCache=null,this.getTooltipData().then((t=>{this.removeMarkers(),this.route.hasWaypointError&&!this.isGuideRoute||this.plotRoute(t),i()})).catch(s)})).catch((t=>{s(t)}))})).catch((t=>{s(t)}))}))}plotRoute(t){Array.isArray(t)&&t.length>0?t.forEach((t=>{t.forEach(((t,i)=>{t?this.addMarkerToMap(t,i):this.addWaypointToMarker(i)}))})):void 0!==this.route.routes?this.route.routes.forEach((t=>{this.addWaypointsAsMarkers(t.waypoints)})):this.addWaypointsAsMarkers(this.route.waypoints),o.Z.addTileOverlayWithBoundingBox(this.route.url,this.id,this.strokeColor,this.route.boundingbox),o.Z.fitBoundsByBoundingBox(this.route.boundingbox)}getRouteType(){return this.options.timebasedlegacy?a.D.TIME_BASED_ROUTE:this.options.timebased?a.D.SCHEDULE:a.D.ROUTE}processQueueError(t){return new Promise(((i,s)=>{if(this.isGuideRoute)i();else if(this.route){if(void 0!==this.route.queue)this.route.queue.forEach((t=>{const i=a.Z.getWaypointErrorMessage(82014,a.D.TIME_BASED_ROUTE);t.errormessage=i,t.erroramount=500,delete t.arrivaltime,delete t.departuretime,this.route.waypoints.push(t)}));else if(void 0!==this.route.routes){const i=[],e={details:[],status:"FAILED"};this.route.routes.forEach((t=>{t.waypoints.forEach((t=>{if(!e.maioCode)if(!1===t.success){const i=a.Z.getWaypointErrorMessage(82014,a.D.TIME_BASED_ROUTE);t.errormessage=i,t.erroramount=t.erroramount<200?500:t.erroramount,delete t.arrivaltime,delete t.departuretime,e.maioCode=82014,e.details.push(t)}else i.push(t.id)}))})),e.maioCode?s(e):"routing"===t&&this.options.waypoints.forEach((t=>{if(-1===i.indexOf(t.id)){const i=a.Z.getWaypointErrorMessage(82018,a.D.TIME_BASED_ROUTE);t.errormessage=i,t.erroramount=500,delete t.arrivaltime,delete t.departuretime,0===this.route.routes.length&&(this.route.routes[0]={waypoints:[]}),t.start=0===this.route.routes[0].waypoints.length?Math.round((new Date).getTime()/1e3):this.route.routes[0].waypoints[0].start,this.route.routes[0].waypoints.push(t)}}))}}else i();i()}))}mixinMetadataWithRouteWaypoints(){o.Z.moreThanOneRoute(this.route,(t=>{t&&t.waypoints&&this.waypointIdToWaypoint&&t.waypoints.forEach(((i,s)=>{t.waypoints[s]={...this.waypointIdToWaypoint.get(i.id),...i,distance:i.distance||0,color:`#${this.waypointColor||"1589ee"}`},i.errormessage&&i.erroramount&&i.erroramount>120&&(this.route.hasWaypointError=!0)}))})),this.options.timebased&&this.updateSummaryTotals()}updateSummaryTotals(){o.Z.moreThanOneRoute(this.route,(t=>{let i=0;t.waypoints.forEach((t=>{i+=t.duration||0})),i*=60,t.summary.traffictime&&(t.summary.traffictime+=i),t.summary.nontraffictime&&(t.summary.nontraffictime+=i),t.summary.totaltraveltime&&(t.summary.totaltraveltime+=i)}))}getWaypointById(t){let i=null;return void 0!==this.route.routes?this.route.routes.forEach((s=>{Array.isArray(s.waypoints)&&([i]=s.waypoints.filter((i=>i.id===t)))})):Array.isArray(this.route.waypoints)&&([i]=this.route.waypoints.filter((i=>i.id===t))),i}getTooltipData(){return new Promise(((t,i)=>{this.tooltipCache?t(this.tooltipCache):o.Z.moreThanOneRoute(this.route,(s=>{o.Z.getWaypointsTooltipData(s.waypoints,this.isGuideRoute).then((i=>{this.tooltipCache=i,t(i)})).catch(i)}))}))}mixinTooltipMetadataWithWaypoint(t,i){t.record&&o.Z.moreThanOneRoute(this.route,(s=>{s.waypoints.forEach((s=>{s.id===i.id&&(s.tooltipMetadata=t)}))}))}updateWaypointIndices(){o.Z.moreThanOneRoute(this.route,(t=>{const i=this.options.first&&this.options.first.id===t.waypoints[0].id,s=this.options.last&&this.options.first&&this.options.last.lat===this.options.first.lat&&this.options.last.lng===this.options.first.lng,e=t.waypoints.length;let o=1;t.waypoints.forEach((t=>{this.options.first&&t.id===this.options.first.id?(t.isFirst=!0,t.index=0,s&&(t.isFirstLast=!0)):this.options.last&&t.id===this.options.last.id?(t.isLast=!0,t.index=e,i&&s&&(t.isFirstLast=!0)):(t.index=o,o++)}))}))}addMarkerToMap(t,i){this.mixinTooltipMetadataWithWaypoint(t,i);const s=o.Z.buildWaypointMarker(t,i);s&&(s._isVue=!0,this.spiderfier.addMarker(s),window.VueStore.commit("plotted/addWaypointMarker",{marker:s,layerId:this.id}),window.google.maps.event.addListener(s,"rightclick",window.marker_Context))}addWaypointToMarker(t){const i=o.Z.getIcon(t);if(!i)return;const s=new window.google.maps.Marker({map:window.MA.map,position:new window.google.maps.LatLng(t.lat,t.lng),uid:t.id||t.Id,type:"waypoint",icon:i,optimized:!window.MA.Util.isIE(),layerType:"waypoint-marker",dataName:(0,e.m9)(t.Name),dataAddress:(0,e.m9)(t.Address__c),zIndex:99999999,markerLocation:{lat:t.lat,lng:t.lng},dataNotes:(0,e.m9)(t.Notes__c||"")});s._isVue=!0,this.spiderfier.addMarker(s),window.VueStore.commit("plotted/addWaypointMarker",{marker:s,layerId:this.id}),window.google.maps.event.addListener(s,"rightclick",window.marker_Context)}addWaypointsAsMarkers(t){t.forEach((t=>{this.addWaypointToMarker(t)}))}getWaypointMarker(t){let i,s=null;"string"==typeof t&&t.trim()?i=t.trim():"object"==typeof t&&(i=t.id);const e=this.getMarkers();if(Array.isArray(e)&&e.length>0){const t=e.filter((t=>t.uid===i));Array.isArray(t)&&t.length>0&&([s]=t)}return s}getMarkers(){return this.spiderfier.getMarkers()}restoreRouteOnMap(){this.markerCache.forEach((t=>{t.setMap(window.MA.map),t._isVue=!0,this.spiderfier.addMarker(t),window.VueStore.commit("plotted/addWaypointMarker",{marker:t,layerId:this.id})})),this.markerCache=[],o.Z.addTileOverlayWithBoundingBox(this.route.url,this.id,this.strokeColor,this.route.boundingbox)}hideRouteOnMap(){this.markerCache=this.spiderfier.getMarkers(),this.removeMarkers(),o.Z.removeTileOverlay(this.id)}clearRouteOnMap(){this.markerCache=[],this.removeMarkers(),o.Z.removeTileOverlay(this.id)}removeMarkers(){this.spiderfier.getMarkers().forEach((t=>{t.setMap(null)})),this.spiderfier.clearMarkers(),window.VueStore.commit("plotted/clearWaypointMarkers",this.id)}isWaypointLengthInRange(t){const{waypoints:i,first:s,last:e}=this.options;let o=i.length;return s&&o++,e&&o++,a.Z.isWaypointLengthGreaterThanMin(o,t)&&a.Z.isWaypointLengthLessThanMax(this.waypointIdToWaypoint.size,t)}}},1433:(t,i,s)=>{s.d(i,{Z:()=>a});var e=s(5493),o=s(6342);const r={props:{route:{type:Object,required:!0},pendingChanges:{type:Boolean,default:!1},pendingPrint:{type:Boolean,default:!1},hidePrintIcons:{type:Boolean,default:!1},hideTrafficData:{type:Boolean,default:null}},computed:{showRouteSummary(){return this.route.summary&&0!==Object.keys(this.route.summary).length&&!this.pendingChanges},hasError(){return this.route.hasWaypointError},waypointCount(){let t=void 0!==this.route.routes&&this.route.routes.length?this.route.routes[0].waypoints.length:this.route.waypoints.length;return this.route.first&&0!==Object.keys(this.route.first).length&&t++,this.route.last&&0!==Object.keys(this.route.last).length&&t++,t},miles(){return(621371e-9*this.route.summary.distance).toFixed(1)},kilometers(){return(this.route.summary.distance/1e3).toFixed(1)},totalDistance(){return"mi"===e.Z.units?(0,o.N4)(this.$Labels.MA_Num_Mi,[this.miles]):"km"===e.Z.units?(0,o.N4)(this.$Labels.MA_Num_Km,[this.kilometers]):""},timeCSS:()=>e.Z.isTrafficEnabled?"traffic-warning-color":"",isTrafficEnabled(){return null!=this.hideTrafficData?!this.hideTrafficData:e.Z.isTrafficEnabled},totalTrafficTime(){return(0,o.N4)(this.$Labels.routes_Num_Mins_With_Traffic,[`${this.hours} ${this.timeMinutes}`])},nonTrafficTime(){return(0,o.N4)(this.$Labels.MA_Num_Mins,[`${this.hours} ${this.timeMinutes}`])},hours(){return this.timeHours&&this.timeHours>0?(0,o.N4)(this.$Labels.MA_Num_Hrs,[this.timeHours]):""},timeMinutes(){return parseInt(this.remainderSeconds/60,10)},timeHours(){return parseInt(this.route.summary.totaltraveltime/3600,10)},remainderSeconds(){return this.route.summary.totaltraveltime-3600*this.timeHours},showEmailRouteOption(){return!this.$store.state.defaultSettings.allowRoutesEmailed||this.$store.state.defaultSettings.allowRoutesEmailed.value}},created(){this.$bus.$on("request-print-data",this.sendPrintData),this.$bus.$on("ready-to-print",this.readyToPrint)},destroyed(){this.$bus.$off("request-print-data",this.sendPrintData),this.$bus.$off("ready-to-print",this.readyToPrint)},methods:{print(){this.pendingChanges?(this.$emit("update:pendingPrint",!0),this.$emit("generate")):this.readyToPrint()},readyToPrint(){const t=`${window.MA.resources.PrintEmailRoute}?units=${e.Z.units}&email=${this.showEmailRouteOption}`,i=window.open(t,"","height=800,width=800,location=0,scrollbars=1");i&&i.focus(),this.$emit("update:pendingPrint",!1)},sendPrintData(){this.$bus.$emit("add-to-print",this.route)}}},a=(0,s(1900).Z)(r,(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"slds-grid slds-p-left_medium slds-p-right_x-small slds-p-vertical_x-small",attrs:{id:"routeSummary"}},[t.hasError?s("div",{key:"error-view"},[t._v("\n        "+t._s(t.waypointCount)+"\n        "),s("span",{staticClass:"text-lowercase"},[t._v(t._s(t._f("decode")(t.$Labels.MA_STOPS)))])]):t.showRouteSummary?s("div",{key:"full-summary",staticClass:"slds-col slds-text-body_small slds-grid slds-grid_vertical-align-center"},[s("div",{staticClass:"slds-p-right_x-small"},[t.isTrafficEnabled?s("div",{class:t.timeCSS},[t._v("\n                "+t._s(t.totalTrafficTime)+"\n            ")]):s("div",{staticClass:"total-duration-no-traffic"},[t._v("\n                "+t._s(t.nonTrafficTime)+"\n            ")])]),t._v(" "),s("div",{staticClass:"slds-p-right_x-small"},[t._v("\n            •\n        ")]),t._v(" "),s("div",{staticClass:"slds-p-right_x-small"},[t._v("\n            "+t._s(t.totalDistance)+"\n        ")]),t._v(" "),s("div",{staticClass:"slds-p-right_x-small"},[t._v("\n            •\n        ")]),t._v(" "),s("div",[t._v("\n            "+t._s(t.waypointCount)+" "),s("span",{staticClass:"text-lowercase"},[t._v(t._s(t._f("decode")(t.$Labels.MA_STOPS)))])])]):t._e(),t._v(" "),t._t("button"),t._v(" "),!t.hidePrintIcons&&t.showEmailRouteOption?s("div",{staticClass:"slds-p-right_xx-small"},[s("button",{staticClass:"slds-button slds-button_icon slds-button_icon-container",attrs:{"data-pendo":"route-summary_email"},on:{click:t.print}},[s("span",{staticClass:"slds-button__icon ma-icon ma-icon-email"})])]):t._e(),t._v(" "),t.hidePrintIcons?t._e():s("div",[s("button",{staticClass:"slds-button slds-button_icon slds-button_icon-container",attrs:{"data-pendo":"route-summary_print"},on:{click:t.print}},[s("span",{staticClass:"slds-button__icon ma-icon ma-icon-print"})])])],2)}),[],!1,null,"0111e900",null).exports},8939:(t,i,s)=>{s.d(i,{Z:()=>a});var e=s(5493),o=s(6342);const r={props:{distance:{type:Number,default:0},totalTravelTime:{type:Number,default:0},travelMode:{type:String,default:"driving"},units:{type:String,default:void 0},timeGap:{type:Number,default:0}},computed:{travelIcon(){return"driving"===this.travelMode.toLowerCase()?"ma-icon-custom31":"walking"===this.travelMode.toLowerCase()?"ma-icon-walk":"bicycling"===this.travelMode.toLowerCase()?"ma-icon-bicycle":"ma-icon-new-custom98"},timeDistance(){let t=this.units;this.units||(t=e.Z.units);const i=this.timeHours&&this.timeHours>0;if("mi"===t){const t=i?[this.timeHours,this.timeMinutes,this.miles]:[this.timeMinutes,this.miles];return(0,o.N4)(i?this.$Labels.routes_show_travel_distance_with_hours_miles:this.$Labels.routes_show_travel_distance_with_no_hours_miles,t)}if("km"===t){const t=i?[this.timeHours,this.timeMinutes,this.kilometers]:[this.timeMinutes,this.kilometers];return(0,o.N4)(i?this.$Labels.routes_show_travel_distance_with_hours_km:this.$Labels.routes_show_travel_distance_with_no_hours_km,t)}const s=i?[this.timeHours,this.timeMinutes]:[this.timeMinutes];return(0,o.N4)(i?this.$Labels.routes_show_travel_time_with_hours:this.$Labels.routes_show_travel_time_no_hours,s)},miles(){return(621371e-9*this.distance).toFixed(1)},kilometers(){return(this.distance/1e3).toFixed(1)},hours(){return this.timeHours&&this.timeHours>0?`${this.timeHours} hours `:""},timeMinutes(){return parseInt(this.remainderSeconds/60,10)},timeHours(){return parseInt(this.totalTravelTime/3600,10)},remainderSeconds(){return this.totalTravelTime-3600*this.timeHours}}},a=(0,s(1900).Z)(r,(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"route-time-wrapper slds-grid slds-grid_vertical"},[s("div",{staticClass:"slds-grid"},[s("div",{staticClass:"slds-icon slds-icon-text-default ma-icon",class:t.travelIcon}),t._v(" "),s("div",{staticClass:"ma-time-distance"},[t._v(t._s(t.timeDistance))])]),t._v(" "),t.timeGap>3600?s("div",{staticClass:"ma-one-hour-gap slds-col slds-size_1-of-1 slds-m-top_small slds-p-around_x-small"},[s("div",{staticClass:"slds-inline_icon_text slds-grid slds-inline_icon_text--warning"},[s("span",{staticClass:"slds-icon slds-icon--small slds-m-right--small slds-col slds-no-flex ma-icon ma-icon-warning"}),t._v(" "),s("div",{staticClass:"slds-col slds-align-middle"},[s("p",[t._v(t._s(t.$Labels.MA_ROUTE_HAS_AT_LEAST_ONE_HOUR_GAP))])])])]):t._e()])}),[],!1,null,"f097f352",null).exports}}]);