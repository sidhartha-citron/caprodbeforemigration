<apex:page sidebar="false" title="MapAnything Live Rules" controller="malive.MALiveRulesController" extensions="malive.MALiveRemoteFunctions" docType="html-5.0">

    <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MapAnythingLiveSummary,'styles/css/ma-page-summaries-dashboard.css')}" /><!--css specific to this page-->
    <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MapAnythingLiveSummary,'styles/css/ma-page-daily-summaries.css')}" />

	<style type="text/css" media="screen">
       .no-rules,
       .live-rule-logic-data {
	        padding: 1rem;
        }
        .live-content {
            padding: 1rem;
            width: 100%;
            background :#fff;
        }

        .live-rule-info-data {
            padding: 1rem;
        }

        .slds-builder-header_container {
            position: relative !important;
        }

        .tooltip-field-help-icon {
            display: inline-block;
        }

        .slds-scope .slds-card {
            border: 1px solid rgb(221, 219, 218) !important;
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.10) !important;
        }

        #new-rule-modal {
            overflow: scroll;
        }

	    #newLiveRulePopover {
            position: absolute;
           /* top: calc(100% + 12px); */
            top: 80px;
            right: 40px;
            width: 320px;
            opacity: 0;
            -webkit-transition: opacity 2s ease-in;
            -moz-transition: opacity 2s ease-in;
            -o-transition: opacity 2s ease-in;
            -ms-transition: opacity 2s ease-in;
            transition: opacity 2s ease-in;
        }

        #newLiveRulePopover.load {
            opacity: 1;
        }
	</style>

    <c:SpinnerFacet />
    <apex:composition template="malive__MALivePageTemplate">
        <apex:define name="title">
        	<div id="rulesTitle">
	            MapAnything Live
        	</div>
        </apex:define>

        <apex:define name="subtitle">
	        Rules
        </apex:define>

        <apex:define name="headerButtons">
           <div class="slds-page-header__col-actions">
                <div class="slds-page-header__controls">
                    <div class="slds-page-header__control">
	                    <ul class="slds-button-group-list">
	                        <li>
	                            <button onclick="RuleModal.open();" type="button" class="slds-button slds-button_neutral" id="newrulebtn">New</button>
	                        </li>
	                    </ul>
                    </div>
                </div>
            </div>
        </apex:define>

        <apex:define name="body">

			<!-- main content block -->
			<div class="slds-col slds-grid">

				<!-- <div class="slds-card slds-grid slds-grid_vertical slds-container_large" style="width: 100%;"> -->
				<div id="rulesTableContent" class="slds-col slds-grid" style="width: 100%; display: none">
		            <table class="slds-table slds-table_resizable-cols slds-table_cell-buffer slds-table_fixed-layout slds-table_bordered slds-table_striped ma-data-table" role="grid" id="rules-table"></table>
				</div>

				<div id="rulesTableEmptyState" class="slds-grid slds-grid_vertical slds-grid_align-center slds-grid_vertical-align-center slds-col slds-scrollable">
                    <section class="slds-popover slds-popover_walkthrough slds-popover_feature slds-nubbin--top-right slds-popover_medium" role="dialog" aria-label="Dialog Title" aria-describedby="live-rule-dialog" id="newLiveRulePopover">
                            <button class="slds-button slds-button_icon slds-button_icon-small slds-float_right slds-popover__close slds-button_icon-inverse" id="newLiveRulePopoverClose" title="Close dialog">
                                <svg class="slds-button__icon" aria-hidden="true">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#close" />
                                </svg>
                                <span class="slds-assistive-text">Close dialog</span>
                            </button>
                            <div class="slds-popover__body" id="live-rule-dialog">
                                <div class="slds-media">
                                    <div class="slds-media__body">
                                        <p class="slds-text-heading_small">Get started by creating your first MapAnything Live Rule.</p>
                                    </div>
                                </div>
                            </div>
                    </section>
                    <div class="no-rules slds-grid">
                        <article class="slds-col slds-align-middle"><!-- live-layer-empty-state MAIN DIV-->
                            <div class="slds-illustration slds-illustration_small">
                                <svg class="slds-illustration__svg" viewBox="0 0 454 272" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                    <g fill="none" fill-rule="evenodd" transform="translate(-65 -74)">
                                    <g transform="translate(77 180)">
                                        <polyline vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" points="21 74 111.5 0 177.5 54"></polyline>
                                        <polyline vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" points="160 37 181.5 19 249 74"></polyline>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M5.83623454,54.8238008 C6.47896445,52.7119739 7.52041887,52.7099477 8.16376546,54.8238008 L14,74 L0,74 L5.83623454,54.8238008 Z"></path>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M14.9699006 61.8628727C15.5388088 59.729467 16.4627585 59.7353443 17.0300994 61.8628727L20 73 12 73 14.9699006 61.8628727zM239.734375 56.5589921C240.43336 54.4620359 241.506942 54.4857215 242.128332 56.5984458L246 69.7621171 237 64.7621171 239.734375 56.5589921z"></path>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M247.921591,53.8514618 C248.51718,51.7243582 249.484912,51.7318303 250.077772,53.8491859 L254.357732,69.1347569 L242,75 L247.921591,53.8514618 Z" transform="matrix(-1 0 0 1 496.358 0)"></path>
                                    </g>
                                    <g transform="matrix(-1 0 0 1 496 216)">
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M5.9215907,18.8514618 C6.51717971,16.7243582 7.48113835,16.7183512 8.0784093,18.8514618 L14,40 L0,40 L5.9215907,18.8514618 Z" transform="matrix(-1 0 0 1 14 0)"></path>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M123.136984,25.2363093 C123.613615,23.448945 124.38595,23.4473111 124.863437,25.237887 L126.693756,32.1015868 L120,37 L123.136984,25.2363093 Z" transform="matrix(-1 0 0 1 246.694 0)"></path>
                                        <polyline vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" points="13 37 59.5 0 92.5 27"></polyline>
                                        <polyline vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" points="83 17 92.5 9 127 38"></polyline>
                                    </g>
                                    <g class="slds-illustration__stroke-primary" stroke-linecap="round" stroke-width="3" transform="translate(67 253)">
                                        <path vector-effect="non-scaling-stroke" d="M0 1.5L450 1.5M284 2L419 61M282 2L65 91M443 1.5L449 1.5"></path>
                                    </g>
                                    <g transform="translate(73 163)">
                                        <polygon vector-effect="non-scaling-stroke" fill="#FFF" points="20.906 .73 24.63 2.34 27.093 9.155 11.046 19.877 .131 19.877" transform="translate(80 22)"></polygon>
                                        <g class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-width="3">
                                        <path vector-effect="non-scaling-stroke" d="M44,17.5 L63,17.5 C62.2789714,12.0723971 64.081543,7.53186978 68.4077148,3.87841797 C73.3754883,-0.195556641 79.2734375,0.717773438 82.440918,2.12353516 C85.6083984,3.52929687 87.9606934,5.46069336 89.5913086,9.10524041 C90.2822266,10.6397351 90.7517904,11.9379883 91,13"></path>
                                        <path vector-effect="non-scaling-stroke" d="M83 20.5C84.0558268 16.8461914 86.2227376 14.4572754 89.5007324 13.333252 94.4177246 11.6472168 99.0800781 13.8925781 100.942383 16.1518555 102.804687 18.4111328 103.39502 20.2260742 103.746582 22.1201172 103.980957 23.3828125 104.06543 24.8427734 104 26.5 108.141764 26.3313802 110.918945 27.1647135 112.331543 29 114.040039 31.1936035 114.215332 33.817627 113.593018 35.75 112.970703 37.682373 110.894531 40.5 107 40.5L28 40.5M18 27.5L83.0004985 27.5M0 27.5L8 27.5"></path>
                                        </g>
                                    </g>
                                    <g class="slds-illustration__stroke-secondary" stroke-linecap="round" stroke-width="3" transform="translate(292 139)">
                                        <path vector-effect="non-scaling-stroke" d="M44,17.5 L63,17.5 C62.2789714,12.0723971 64.081543,7.53186978 68.4077148,3.87841797 C73.3754883,-0.195556641 79.2734375,0.717773438 82.440918,2.12353516 C85.6083984,3.52929687 87.9606934,5.46069336 89.5913086,9.10524041 C90.2822266,10.6397351 90.7517904,11.9379883 91,13"></path>
                                        <path vector-effect="non-scaling-stroke" d="M83 20.5C84.0558268 16.8461914 86.2227376 14.4572754 89.5007324 13.333252 94.4177246 11.6472168 99.0800781 13.8925781 100.942383 16.1518555 102.804687 18.4111328 103.39502 20.2260742 103.746582 22.1201172 103.980957 23.3828125 104.06543 24.8427734 104 26.5 108.141764 26.3313802 110.918945 27.1647135 112.331543 29 114.040039 31.1936035 114.215332 33.817627 113.593018 35.75 112.970703 37.682373 110.894531 40.5 107 40.5L28 40.5M18 27.5L83.0004985 27.5M0 27.5L8 27.5"></path>
                                    </g>
                                    <g transform="translate(204.5 228.5)">
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M18.9209988,1.95433401 L33.259296,51.443436 C33.5666778,52.5043744 32.9557995,53.613617 31.8948612,53.9209988 C31.7139843,53.9734036 31.5266126,54 31.3382972,54 L2.6617028,54 C1.5571333,54 0.661702805,53.1045695 0.661702805,52 C0.661702805,51.8116846 0.688299176,51.6243129 0.74070397,51.443436 L15.0790012,1.95433401 C15.386383,0.893395645 16.4956256,0.282517358 17.556564,0.589899164 C18.2152102,0.780726338 18.7301717,1.29568777 18.9209988,1.95433401 Z"></path>
                                        <g class="slds-illustration__stroke-primary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3">
                                        <polygon points="17 .324 34 54 0 54"></polygon>
                                        <path vector-effect="non-scaling-stroke" d="M17,6.32394366 C17,42.1378022 17,60.4711356 17,61.3239437 C17,60.4711356 17,42.1378022 17,6.32394366 Z"></path>
                                        <path vector-effect="non-scaling-stroke" d="M17,29.3239437 C22.3333333,35.7851611 25,39.1184944 25,39.3239437 C25,39.1184944 22.3333333,35.7851611 17,29.3239437 Z" transform="matrix(-1 0 0 1 42 0)"></path>
                                        </g>
                                    </g>
                                    <g transform="translate(439.5 227.5)">
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M18.9209988,1.95433401 L33.259296,51.443436 C33.5666778,52.5043744 32.9557995,53.613617 31.8948612,53.9209988 C31.7139843,53.9734036 31.5266126,54 31.3382972,54 L2.6617028,54 C1.5571333,54 0.661702805,53.1045695 0.661702805,52 C0.661702805,51.8116846 0.688299176,51.6243129 0.74070397,51.443436 L15.0790012,1.95433401 C15.386383,0.893395645 16.4956256,0.282517358 17.556564,0.589899164 C18.2152102,0.780726338 18.7301717,1.29568777 18.9209988,1.95433401 Z"></path>
                                        <g class="slds-illustration__stroke-primary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3">
                                        <polygon vector-effect="non-scaling-stroke" points="17 -4.676 34 54 0 54"></polygon>
                                        <path vector-effect="non-scaling-stroke" d="M17,1.32394366 C17,40.3936076 17,60.3936076 17,61.3239437 C17,60.3936076 17,40.3936076 17,1.32394366 Z"></path>
                                        <path vector-effect="non-scaling-stroke" d="M17,29.3239437 C22.3333333,35.7851611 25,39.1184944 25,39.3239437 C25,39.1184944 22.3333333,35.7851611 17,29.3239437 Z" transform="matrix(-1 0 0 1 42 0)"></path>
                                        </g>
                                    </g>
                                    <g transform="translate(141.852 213.5)">
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__fill-secondary" d="M25.6478873,0 L50.8997802,86.4391718 C51.2095171,87.4994249 50.6011034,88.6100213 49.5408502,88.9197582 C49.3586621,88.9729817 49.1698252,89 48.980022,89 L2.31575269,89 C1.21118319,89 0.315752686,88.1045695 0.315752686,87 C0.315752686,86.8101968 0.342770948,86.6213599 0.395994453,86.4391718 L25.6478873,0 Z"
                                        transform="translate(1)"></path>
                                        <g class="slds-illustration__stroke-primary" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" transform="translate(0 2)">
                                        <polygon vector-effect="non-scaling-stroke" points="26.648 0 52.648 87 .648 87"></polygon>
                                        <path vector-effect="non-scaling-stroke" d="M26.6478873 6C26.6478873 64.4972948 26.6478873 94.4972948 26.6478873 96 26.6478873 94.4972948 26.6478873 64.4972948 26.6478873 6zM15.6478873 42C22.9812207 49.078692 26.6478873 52.7453587 26.6478873 53 26.6478873 52.7453587 22.9812207 49.078692 15.6478873 42zM27.6478873 68C36.9812207 57.078692 41.6478873 51.7453587 41.6478873 52 41.6478873 51.7453587 36.9812207 57.078692 27.6478873 68z"></path>
                                        </g>
                                    </g>
                                    <g transform="translate(168 57)">
                                        <circle vector-effect="non-scaling-stroke" cx="64" cy="64" r="23" class="slds-illustration__fill-secondary"></circle>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-dasharray="135 1 1 18" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M64,109 C88.8528137,109 109,88.8528137 109,64 C109,39.1471863 88.8528137,19 64,19 C39.1471863,19 19,39.1471863 19,64 C19,88.8528137 39.1471863,109 64,109 Z"
                                        transform="rotate(-130 64 64)"></path>
                                        <path vector-effect="non-scaling-stroke" class="slds-illustration__stroke-secondary" stroke-dasharray="107 10" stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M64,97 C82.2253967,97 97,82.2253967 97,64 C97,45.7746033 82.2253967,31 64,31 C45.7746033,31 31,45.7746033 31,64 C31,82.2253967 45.7746033,97 64,97 Z"
                                        transform="rotate(150 64 64)"></path>
                                        <g class="slds-illustration__stroke-primary" stroke-width="3" transform="translate(41 41)">
                                        <circle vector-effect="non-scaling-stroke" cx="23" cy="23" r="23"></circle>
                                        </g>
                                    </g>
                                    </g>
                                </svg>
                                <div class="slds-text-longform">
                                    <h3 class="slds-text-heading_large">No Rules Yet</h3>
                                    <p class="slds-text-body_regular">Created Rules will appear here.</p>
                                    <!-- remove button later -->
                                    <!-- <button onclick="location.href='rules.html'" type="button"class="slds-button slds-button_brand">View Rules Template</button> -->
                                </div>
                            </div>
                        </article>
                    </div> <!-- end live-layer-empty-state-->
				</div>

			</div>

	        <apex:outputPanel layout="none" rendered="{!pendoEnabled}">
	            <script>
	                (function(apiKey){
	                    (function(p,e,n,d,o){var v,w,x,y,z;o=p[d]=p[d]||{};o._q=[];
	                    v=['initialize','identify','updateOptions','pageLoad'];for(w=0,x=v.length;w<x;++w)(function(m){
	                    o[m]=o[m]||function(){o._q[m===v[0]?'unshift':'push']([m].concat([].slice.call(arguments,0)));};})(v[w]);
	                    y=e.createElement(n);y.async=!0;y.src='https://cdn.pendo.io/agent/static/'+apiKey+'/pendo.js';
	                    z=e.getElementsByTagName(n)[0];z.parentNode.insertBefore(y,z);})(window,document,'script','pendo');

	                    // Call this whenever information about your visitors becomes available
	                    // Please use Strings, Numbers, or Bools for value types.
	                    pendo.initialize({
	                        visitor: {
	                            id: '{!JSENCODE($User.Id)}',
	                            email: '{!JSENCODE($User.Email)}',
	                            firstName: '{!JSENCODE($User.FirstName)}',
	                            lastName: '{!JSENCODE($User.LastName)}'
	                        },
	                        account: {
	                            id: '{!JSENCODE($Organization.Id)}',
	                            name: '{!JSENCODE($Organization.Name)}'
	                        }
	                    });
	                })('3678d139-e89d-4a02-78a2-9822552912f0');
	            </script>
	        </apex:outputPanel>

			<script>

				let rulesList, dataTable, ruleFieldData, validationMess = "";

				// rules edit modal
                var RuleModal = {
                    ruleId : "",
                    inputFields : ['rule_id','liveRuleName','liveRuleDescription','ruleaction','assetaction'],
                    ckboxFields : ['rulePersistsInput', 'liveRuleActiveInput'],
                    open : function(ruleId, action) {
                        if (ruleId) {
                            let clone = false;
                            RuleModal.ruleId = ruleId;
                            console.log('ruleId: ', ruleId);
                            switch (typeof action) {
                                case 'boolean':
                                    clone = action;
                                    break;
                                case 'string':
                                    break;
                            }
                            Utility.invokeRemoting({
                                path : '{!$RemoteAction.MALiveRemoteFunctions.getRuleFromAWS}',
                                params : ruleId,
                                callback : function(result, event) {
                                    Utility.handleCallback(result, event, null, null,
                                        function(success, result, event) {
                                            if (success) {
                                                $(".slds-backdrop").addClass("slds-backdrop_open");
                                                $("#rulemodal").addClass("slds-fade-in-open");
                                                RuleModal.populateFields(result.data.rule, clone).updateRuleTitle();
                                            }
                                            else {
                                                messageText = result.message;
                                                checkForMessages();
                                            }
                                        }
                                    );
                                }
                            });
                            // populateFields(getRule(ruleId), clone);
                        }
                        else {
	                        $("#liveRuleActiveInput").prop("checked", true);
							$("#rulePersistsInput").prop("checked", true);
							RuleModal.updateRuleTitle();
                        	$(".slds-backdrop").addClass("slds-backdrop_open");
	                        $("#rulemodal").addClass("slds-fade-in-open");
                        }
                        return this;
                    },
                    close : function() {
                        $(".slds-backdrop").removeClass("slds-backdrop_open");
                        $("#rulemodal").removeClass("slds-fade-in-open");
                        RuleModal.ruleId = "";
                        RuleModal.clearAllFields().removeHasError(['liveRuleName']);
                        return this;
                    },
                    save : function() {
                        showSpinner();
                        if(RuleModal.fieldsValidated()) {
                            if (ruleFieldData) {
	                            Utility.invokeRemoting({
	                            	path : '{!$RemoteAction.MALiveRemoteFunctions.upsertRuleToAWS}',
	                            	params : ruleFieldData,
	                            	callback : function(result, event) {
	                                    Utility.handleCallback(result, event, refreshTableData, null,
	                                    	function(success, result, event) {
	                                    		if (success) {
													RuleModal.close();
													messageText = result.message;
													checkForMessages();
												}
												else {
													alertType = 'error';
													RuleModal.message(messageText, alertType);
												}
											}
										);
	                                }
	                            });
                            }
                            else {
                                messageText = 'An error has occurred during save. No data was found to save.';
                                alertType = 'error';
                                RuleModal.message(messageText, alertType);
                            }
                        }
                        else {
                            messageText = validationMess;
                            alertType = 'error';
                            RuleModal.message(messageText, alertType);
                        }
                        hideSpinner();
                        return this;
                    },
					delete : function(ruleId) {
		                let res = confirm('Are you sure you want to delete this Rule?')
		                if (res) {
		                	if (ruleId) {
			                	console.log('ruleId passed in: ', ruleId);
								RuleModal.ruleId = ruleId;
		                	}
		                	if(RuleModal.ruleId) {
			                	console.log('RuleModal.ruleId: ', RuleModal.ruleId);
			                	Utility.invokeRemoting({
	                            	path : '{!$RemoteAction.MALiveRemoteFunctions.DeleteRule}',
	                            	params : RuleModal.ruleId,
	                            	callback : function(result, event) {
	                                    Utility.handleCallback(result, event, refreshTableData, null, checkForMessages);
	                                }
	                            });
			                }
		                	else {
                                messageText = 'An error has occurred while trying to delete the rule. No rule id found.';
                                alertType = 'error';
	                            checkForMessages();
			                }
			            }
		            },
                    removeHasError : function(arrayToSet) {
                        $.each( arrayToSet, function( index, value ) {
                            $("#" + value).closest('div').removeClass('slds-has-error');
                        });
                        return this;
                    },
					populateFields : function(rule, clone) {
	                    console.log("rule: ", rule);
	                    let name = "";
	                    if (clone) {
	                        name += "Copy of ";
	                        $('#actionDropDown').prop('disabled', true);
	                    }
	                    else if (!isValueEmptyProto(rule.ruleId)) {
	                        $("#rule_id").val(rule.ruleId);
	                    }
	                    name += rule.label;
	                    $("#liveRuleName").val(htmlDecode(name));
	                    $("#ruleaction").val(isValueEmptyProto(rule.actions) ? "sfinsert" : rule.actions[0]);
	                    $("#assetaction").val(isValueEmptyProto(rule.ruleType) ? "enters" : rule.ruleType);
	                    $("#liveRuleActiveInput").prop("checked", isValueEmptyProto(rule.isActive) ? true : rule.isActive);
                        $("#rulePersistsInput").prop("checked", (isValueEmptyProto(rule.persistent) || rule.persistent == 'ALWAYS') ? true : false);
	                    $("#liveRuleDescription").val(isValueEmptyProto(htmlDecode(rule.description)) ? "" : htmlDecode(rule.description));
						if( rule.metaData ) {
							if( rule.metaData.livelayer ) {
								checkForLayer(rule.metaData.livelayer.id, 'live');
			                }
							if( rule.metaData.shapelayer ) {
								checkForLayer(rule.metaData.shapelayer.id, 'shape');
			                }
		                }
		                $(".slds-backdrop").addClass("slds-backdrop_open");
                        $("#rulemodal").addClass("slds-fade-in-open");
	                    return this;
	                },
					fieldsValidated : function(index) {
		                validationMess = "";
	                    ruleFieldData = {};
	                    let valid = true,
	                    ruleId = $("#rule_id").val();
	                    if (ruleId) {
							ruleFieldData.ruleId = ruleId;
	                    }

	                    ruleFieldData.rulename = htmlEncode($("#liveRuleName").val()),
	                    ruleFieldData.ruledesc = htmlEncode($("#liveRuleDescription").val()),
	                    ruleFieldData.ruleaction = $("#ruleaction").val(),
	                    ruleFieldData.assetaction = $("#assetaction").val(),
	                    ruleFieldData.livelayerval = $("#livelayer_field").val(),
	                    ruleFieldData.shapelayerval = $("#shapelayer_field").val(),
	                    ruleFieldData.rulepersists = $("#rulePersistsInput").prop("checked"),
	                    ruleFieldData.ruleactive = $("#liveRuleActiveInput").prop("checked"),
						ruleFieldData.livelayerid = $('#livelayer_field').attr('aria-activedescendant'),
						ruleFieldData.shapelayerid = $('#shapelayer_field').attr('aria-activedescendant');

						if(isValueEmptyProto(ruleFieldData.rulename)) {
	                        toggleHasError('liveRuleName', true);
	                        validationMess = "You have not created a name for this Rule. Please add a name in the Information section.";
	                        valid = false;
	                    }
	                    else if(isValueEmptyProto(ruleFieldData.livelayerid)) {
	                        $('#livelayer_field').parent("div").addClass('slds-has-error');
	                        validationMess = "You must choose a Live Layer";
	                        valid = false;
	                    }
	                    else if(isValueEmptyProto(ruleFieldData.shapelayerid)) {
	                        $('#shapelayer_field').parent("div").addClass('slds-has-error');
	                        validationMess = "You must choose a Shape Layer";
	                        valid = false;
	                    }
	                    else if(isValueEmptyProto(ruleFieldData.assetaction)) {
	                        $('#assetaction').parent("div").addClass('slds-has-error');
	                        validationMess = "You must choose a Condition";
	                        valid = false;
	                    }
	                    else if(isValueEmptyProto(ruleFieldData.ruleaction)) {
	                        $('#ruleaction').parent("div").addClass('slds-has-error');
	                        validationMess = "You must choose an Action";
	                        valid = false;
	                    }


						return valid;
		            },
                    clearAllFields : function() {
                        let markerArray = [];
                        $.each( this.inputFields, function( index, value ) {
                            $( "#" + value ).val( "" );
                        });
                        $.each( this.ckboxFields, function( index, value ) {
                            $( "#" + value ).prop( "checked", true ); // default to checked
                        });
                        $("select.rules-select").val(["enters","SFInsert"]); // default vals
                        // clear layer search boxes
                        markerArray.push( {sectionId: 'livelayer', layertype: 'live', rectype: ''} );
                        markerArray.push( {sectionId: 'shapelayer', layertype: 'shape', rectype: ''} );
                        clearLayers( markerArray );
                        return this;
                    },
					updateRuleTitle : function() {
		                if ( $('#liveRuleName').val() ) {
		                    let ruletitle = $('#liveRuleName').val();
		                    $('#ruleheader').text(ruletitle);
		                } else {
		                    $('#ruleheader').text('');
		                    $('#liveRuleName').focus();
		                }
		            },
                    message : function( msg, type ) {
                        $( "#ruleheader" ).notify( msg, {arrowShow: false, className : type, position : 'bottom center'} );
                        return this;
                    }
				}
				
				function checkForLayer(recordId, type) {
					var liveFunc = '{!$RemoteAction.MALiveRemoteFunctions.getLiveLayer}';
					var shapeFunc = '{!$RemoteAction.MALiveRemoteFunctions.getShapeLayer}';
					var remoteAction = type == 'live' ? liveFunc : shapeFunc;
					
					Utility.invokeRemoting({
						path: remoteAction,
						params: recordId,
						callback: function (result, event) {
							Utility.handleCallback(result, event, null, null,
								function (success, result, event) {
									if (success) {
										if(result.data) {
											console.log('result: ', result);
											console.log('event: ', event);
											var secId = '', type = '';
											var data = JSON.parse(result.data);
											if(data.attributes.type.toLowerCase() == 'sma__masavedqry__c') {
												secId = 'livelayer';
												type = 'live';
											}
											else if(data.attributes.type.toLowerCase() == 'sma__materritory__c') {
												secId = 'shapelayer';
												type = 'shape';
											}
											SetLayer(secId, {'name': data.Name, 'id': data.Id, 'type': type});
										}
										else {
											messageText = result.message;
											checkForMessages();
										}
									}
									else {
										alertType = 'warning';
										RuleModal.message(messageText, alertType);
									}
								}
							);
						}
					});
                }

                function refreshTableData(refresh) {
                	console.log('refresh', refresh);
                	if (refresh) {dataTable.RefreshData();}
                }

                function toggleHasError(fieldName, add) {
                    $('#' + fieldName).parent("div").toggleClass('slds-has-error', add);
                }

                function noenter(ev, index)  {
                    if (window.event && window.event.keyCode == 13 || ev.which == 13) {
                        saveAlertSettings();
                        return false;
                    }
                    else {
                        return true;
                    }
                }

                function SetLayer(sectionId, layerData) {
                    console.log('SetLayer function: ', layerData)
                    if (layerData) {
                        itemSelected(sectionId, layerData.id, layerData);
                    }
                }

                function clearLayers(layerDataArray) {
                    $.each(layerDataArray, function(index, val) {
                        if (val.hasOwnProperty("sectionId")) {
                            clearSelected( val.sectionId );
                        }
                    });
                }

                function getRule( ruleId ) {
                    let rule;
                    $.each( rulesList, function( index, val ) {
                        if ( val.ruleId == ruleId ) {
                            rule = val;
                        }
                    });
                    return rule;
                }

                function addMessage(el, msg, type) {
                    $(el).notify( msg, {arrowShow: false, className : type, position : 'bottom center'} );
                }

                function createRulesTable() {
                    dataTable = new MADataTable({
                        tableSelector :'#rules-table',
                        allowResizing: true,
                        remoteFunction: {
                            path: '{!$RemoteAction.MALiveRemoteFunctions.GetRules}',
                            arrayProperty: 'data.rules'
                        },
                        columns: [
                            {label: "Rule Name", sortable: true, property: "label", formatAs: function(obj) {
                                console.log('Name column: ' + obj.label);
                                return '<a href="javascript:void(0);" onclick="RuleModal.open(\'' + obj.ruleId + '\');">'
                                        + '<span class="slds-truncate" title="' + (obj.label) + '">' + (obj.label) + '</span></a>';
                            }},
                            {label: "Status", sortable: true, property: "isActive", formatAs: function(obj){
                                console.log('Status column: ' + obj.isActive);

                                return obj.isActive ? "Active" : "Inactive";
                            }},
                            {label: "Applies To", sortable: true, property: "metaData.livelayer.name"},
                            {label: "Created On", sortable: true, property: "createdDate", formatAs: "datetime", sortAs: "number"},
                            {label: "Created By", sortable: true, property: "metaData.createdby"},
                            {label: "Actions", sortable: false, trunc: false, formatAs: function(obj){
                                return '<div class="slds-dropdown-trigger slds-dropdown-trigger_click">'
                                      + '<button class="slds-button slds-button_icon slds-button_icon-border-filled slds-button_icon-x-small actionDropDown" aria-haspopup="true" title="Show More">'
                                        + '<svg class="slds-button__icon" aria-hidden="true">'
                                          + '<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Resource.MALive,"/assets/icons/utility-sprite/svg/symbols.svg#down")}" />'
                                        + '</svg>'
                                        + '<span class="slds-assistive-text">Show More</span>'
                                      + '</button>'
                                      + '<div class="slds-dropdown slds-dropdown_left slds-dropdown_actions">'
                                        + '<ul class="slds-dropdown__list" role="menu">'
                                          + '<li class="slds-dropdown__item" role="presentation">'
                                            + '<a href="javascript:void(0);" onclick="RuleModal.open(\'' + (obj.ruleId) + '\');" role="menuitem" tabindex="0">'
                                              + '<span class="slds-truncate" title="Edit This Rule">Edit</span>'
                                            + '</a>'
                                          + '</li>'
                                          + '<li class="slds-dropdown__item" role="presentation">'
                                            + '<a href="javascript:void(0);" onclick="RuleModal.open(\'' + (obj.ruleId) + '\', true);" role="menuitem" tabindex="1">'
                                              + '<span class="slds-truncate" title="Clone This Rule">Clone</span>'
                                            + '</a>'
                                          + '</li>'
                                          + '<li class="slds-dropdown__item" role="presentation">'
                                            + '<a href="javascript:void(0);" onclick="RuleModal.delete(\'' + (obj.ruleId) + '\');" role="menuitem" tabindex="2">'
                                              + '<span class="slds-truncate" title="Delete This Rule">Delete</span>'
                                            + '</a>'
                                          + '</li>'
                                        + '</ul>'
                                      + '</div>'
                                    + '</div>';
                            }},
                        ],
                        defaultSortIndex: 1,
                        events: {
                            loading: function() { logNotification('loading','loading','loading'); },
                            loadingComplete: function(result) {
                            	var dataToLookThru = result;
                                var propArray = 'data.rules'.split('.');
                            	for(var str of propArray) {
	                            	dataToLookThru = dataToLookThru[str];
	                            }
                                // rulesList = result.data.rules;
                                rulesList = dataToLookThru;
                                hideSpinner();
                            },
                            loadingError: function(result, event) {
                                hasMessages = true;
                                if (event.type === 'exception') {
                                    messageText = 'Failed to retrieve rules. - ' + event.message;
                                    alertType = 'error';
                                }
                                else {
                                    messageText = event.message + ' ' + result.message;
                                    alertType = 'error';
                                }
                                hideSpinner();
                                checkForMessages();
                            },
                            tableCreated: function() {
                            	if( rulesList ) {
	                            	$( "#rulesTableContent" ).toggle(true);
									$( "#rulesTableEmptyState" ).toggle(false);
								}
								initializePageEvents();
                            }
                        }
                    }); //end dataTable function
                }

                function initializePageEvents() {
					$( "#liveRuleName" ).on('keyup', function (event) {
                        RuleModal.removeHasError([$(this).prop('id')]).updateRuleTitle();
                    });

                    $( '#newLiveRulePopover' ).addClass('load');

		            $( '#newrulebtn' ).on('mouseover', function(e) {
		                e.stopPropagation();
		                $( "#newLiveRulePopover" ).toggle(false);
		            });

		            $( '#newLiveRulePopoverClose' ).on('click', function(e) {
		                e.stopPropagation();
		                $( "#newLiveRulePopover" ).toggle(false);
		            });

                    $( '.actionDropDown' ).on( 'click', function() {
			            let wasopen = $( this ).closest( '.slds-dropdown-trigger' ).hasClass( "slds-is-open" ),
			            dropdown = $( this ).closest( '.slds-dropdown-trigger' );
			            // close all dropdowns that are open
			            $( '.actionDropDown' ).closest( '.slds-dropdown-trigger' ).removeClass( "slds-is-open" );
			            if( !wasopen ) {
			                dropdown.addClass( "slds-is-open" );
			            }
			        });

                    $(document).on('click', function(event) {
                        if (!$(event.target).closest('.actionDropDown').length) {
                            $('.actionDropDown').closest('.slds-dropdown-trigger').removeClass("slds-is-open");
                        }
                    });
                }

				$(() => {
					showSpinner();
					createRulesTable();
				});

			</script>

	    </apex:define>
	</apex:composition>

	<div class="ma-modals">

        <script src="{!URLFOR($Resource.MapAnythingLiveSummary,'js/ma.datatable.js')}"></script>
		<!-- rule modal -->
		<div class="rule-modal" style="height: 660px;">
			<section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="new-rule-modal" id="rulemodal" class="slds-modal slds-modal_medium">
				<div class="slds-modal__container">

					<header class="slds-modal__header">
						<button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="RuleModal.close(); hideSpinner();" title="Close">
							<svg aria-hidden="true" class="slds-button__icon slds-button__icon_large">
								<use xlink:href="/apexpages/slds/latest/assets/icons/utility-sprite/svg/symbols.svg#close" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
							</svg>
							<span class="slds-assistive-text">Close</span>
						</button>
						<div class="slds-grid">
			                <div class="slds-col slds-has-flexi-truncate">
			                    <div class="slds-media">
			                        <div class="slds-media__body">
			                            <h1 class="slds-page-header__title slds-m-right_small slds-align-middle slds-truncate" id="ruleheader">New Rule</h1>
			                        </div>
			                    </div>
			                </div>

			            </div>
					</header>


					<div class="slds-modal__content slds-p-around_medium" id="new-rule-modal">
						<div class="slds-grid" id="rule-wrapper">
                            <div class="slds-col">

                                <div class="live-content">

                                    <div class="live-rule-content slds-section slds-is-open"><!-- Information block -->
                                        <input id="rule_id" class="slds-input" type="text" style="display:none"/>
                                        <h3 class="slds-section__title slds-theme_shade">
                                            <span class="slds-truncate slds-p-horizontal_small" title="Information">Information</span>
                                        </h3>
                                        <div aria-hidden="false" class="slds-container_medium live-rule-info-data">

                                            <div class="slds-grid slds-gutters"><!-- name and persists section -->
                                                <div class="slds-col slds-size_1-of-2">
                                                    <div class="slds-form-element">
                                                        <label class="slds-form-element__label slds-grid" for="liveRuleName">
	                                                        <abbr class="slds-required">*</abbr>
	                                                        <div>MapAnything Live Rule Name</div>
	                                                    </label>
                                                        <div class="slds-form-element__control">
                                                            <input id="liveRuleName" class="slds-input" type="text"/>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="slds-col slds-size_1-of-2">
			                                        <div class="slds-p-left_small">
														<div class="slds-form-element">
															<label class="slds-checkbox__label slds-grid" for="rulePersistsInput">
																<div>Rule Persists</div>
																<div class="has-tooltip slds-m-left_xx-small">
																	<span class="tooltip-field-help-icon slds-icon slds-icon_x-small ma-icon ma-icon-info"></span>
																	<div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip" style="bottom: 32px;left: -16px;width: 20rem;">
																		<div class="slds-popover__body">Check this box to have a record created each time your stop definition is met.</div>
																	</div>
																</div>
															</label>
															<div class="slds-form-element__control">
																<span class="slds-checkbox slds-checkbox_standalone">
																	<input id="rulePersistsInput" name="options" type="checkbox" value="Rule Persists"/>
																	<span class="slds-checkbox_faux"></span>
																</span>
															</div>
														</div>
			                                        </div>
			                                    </div>
                                            </div><!-- end name and persists -->

                                            <div class="slds-grid slds-gutters"><!-- description and active section -->
                                                <div class="slds-col slds-size_1-of-2">
                                                    <div class="slds-form-element">
                                                        <label class="slds-form-element__label" for="liveRuleDescription">Description</label>
                                                        <div class="slds-form-element__control">
                                                            <textarea id="liveRuleDescription" class="slds-textarea"></textarea>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="slds-col slds-size_1-of-2">
			                                        <div class="slds-p-left_small">
			                                            <div class="slds-form-element">
			                                                <label class="slds-checkbox__label slds-grid" for="liveRuleActiveInput">
																<div>Active</div>
															</label>
															<div class="slds-form-element__control">
																<span class="slds-checkbox slds-checkbox_standalone">
																	<input id="liveRuleActiveInput" type="checkbox"/>
																	<span class="slds-checkbox_faux"></span>
																</span>
															</div>
			                                            </div>
			                                        </div>
			                                    </div>
                                            </div><!-- end description and active section  -->

                                            <div class="slds-grid slds-gutters slds-grid_vertical-align-center"><!-- marker layer section -->
                                                <div class="slds-col slds-size_1-of-2">
                                                	<div class="slds-form-element">
                                                        <label class="slds-form-element__label slds-grid" for="livelayer">
                                                            <abbr class="slds-required">*</abbr>
                                                            <div>MapAnything Live Layer</div>
                                                            <div class="has-tooltip slds-m-left_xx-small">
                                                                <span class="tooltip-field-help-icon slds-icon slds-icon_x-small ma-icon ma-icon-info"></span>
                                                                <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip" style="bottom: 32px;left: -16px;width: 20rem;">
                                                                    <div class="slds-popover__body">The MapAnything Live Layer contains the devices your rules will apply to. You can set up MapAnything Live Layers in MapAnything.</div>
                                                                </div>
                                                            </div>
                                                        </label>
                                                        <c:MALayerSearch SelectedIdVar="" objTypes="Live" layerType="sma__MASavedQry__c" sectionId="livelayer" callbackFunc=""/>
                                                    </div>
                                                </div>
                                            </div><!-- end marker layer section  -->

                                        </div>
                                    </div><!-- end Information block -->

                                    <div class="live-rule-logic slds-section slds-is-open"><!-- Rule Logic block -->
                                        <h3 class="slds-section__title slds-theme_shade">
                                            <span class="slds-truncate slds-p-horizontal_small" title="Rule Logic">Rule Logic</span>
                                        </h3>
                                        <div aria-hidden="false" class="slds-section__content slds-container_medium live-rule-logic-data">
			                                <div class="slds-grid slds-gutters"><!-- name and persists -->
			                                    <div class="slds-col slds-size_2-of-3">
			                                        <div class="slds-card" style="padding: 1rem;">
			                                            <h2>CONDITIONS</h2>
			                                            <div class="slds-grid slds-gutters">
			                                                <div class="slds-col">
			                                                    <!-- <div class="slds-size_xx-small">
			                                                        <input class="slds-input" id="assetaction"/>
			                                                    </div> -->
                                                                <div class="slds-form-element condition-elements-wrap" id="rulelogic-assetcond" style="width:100%">
				                                                    <label for="rulelogic-assetcond" class="slds-form-element__label" >When Asset...</label>
                                                                    <div class="slds-select_container slds-form-element__control" style="width: 100%">
                                                                        <select class="slds-select rules-select" id="assetaction">
                                                                            <option value="enters">Enters</option>
                                                                            <option value="exits">Exits</option>
                                                                            <option value="entersexits">Enters and Exits</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
			                                                </div>

			                                                <div class="slds-col slds-size_2-of-3">
		                                                        <div class="slds-form-element">
			                                                        <label class="slds-form-element__label slds-grid" for="shapelayer">
			                                                            <abbr class="slds-required">*</abbr>
			                                                            <div>MapAnything Shape Layer</div>
			                                                            <div class="has-tooltip slds-m-left_xx-small">
			                                                                <span class="tooltip-field-help-icon slds-icon slds-icon_x-small ma-icon ma-icon-info"></span>
			                                                                <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-left" role="tooltip" style="bottom: 32px;left: -16px;width: 20rem;">
			                                                                    <div class="slds-popover__body">The MapAnything Shape Layer contains the boundary your rules will apply to. You can set up MapAnything Shape Layers in MapAnything.</div>
			                                                                </div>
			                                                            </div>
			                                                        </label>
			                                                        <c:MALayerSearch SelectedIdVar="" objTypes="Shape" layerType="sma__MATerritory__c" sectionId="shapelayer" callbackFunc=""/>
			                                                    </div>
			                                                </div>
			                                            </div>
			                                        </div>
			                                    </div>
			                                    <div class="slds-col slds-size_1-of-3">
			                                        <div class="slds-card" style="padding: 1rem;">
			                                            <h2>ACTIONS</h2>
			                                            <div class="slds-size_x-small">
			                                            	<label for="first-action-content" class="slds-form-element__label">&nbsp;</label>
			                                                <div class="slds-form-element slds-grid condition-elements-wrap" id="first-action-content" style="width:100%">
		                                                    	<div class="slds-select_container" id="actions1_container" style="width: 100%">
			                                                    	<select class="slds-select rules-select" id="ruleaction">
				                                                    	<option value="sfinsert">Create Record</option>
					                                                </select>
				                                                </div>
				                                                <div class="has-tooltip slds-m-left_xx-small">
	                                                                <span class="tooltip-field-help-icon slds-icon slds-icon_x-small ma-icon ma-icon-info"></span>
	                                                                <div class="slds-popover slds-popover_tooltip slds-nubbin_bottom-right" role="tooltip" style="bottom: 45px;right: -16px;width: 20rem;">
	                                                                    <div class="slds-popover__body">Creating a record will allow you to perform more advanced actions through Salesforce Process Builder and Flows.</div>
	                                                                </div>
	                                                            </div>
				                                            </div>
			                                            </div>
			                                        </div>
			                                    </div>
			                                </div>
			                            </div>
										<div class="slds-col slds-p-around--medium">
                                            <div class="slds-text-body_small">
                                                Please do not edit a MapAnything Live Layer or MapAnything Shape Layer that is applied to a Rule. <br />If a MapAnything Live Layer is applied to a rule and then edited, an Action Record will not be created. <br />If a MapAnything Shape Layer is applied to a rule and then edited, an Action Record will not be created.
                                            </div>
                                        </div>
                                    </div><!-- end Rule Logic block -->

                                </div>

                            </div>
                        </div>
					</div>
                    <footer class="slds-modal__footer">
                        <input class="slds-button slds-button_neutral" onclick="RuleModal.close(); hideSpinner();" type="button" value="Cancel"/>
                        <input class="slds-button slds-button_brand" onclick="RuleModal.save();" type="button" value="Save"/>
                    </footer>
				</div>
			</section>
			<div class="slds-backdrop"></div>
		</div>

    </div>
    <!-- end rule modal -->


    <!-- sample data structures

    TO MAIO
		{
			"actions": [
				"sfinsert"
			],
			"description": "Rule A Description",
			"deviceIds": [
				"Geotab-A",
				"Geotab-B"
			],
			"geometry": {
				"proximityType": "circle",
				"center": {
					"lat": 34.1419458,
					"lng": -84.4432626
				},
				"radius": 158338.2882349
			},
			"isActive": "true",
			"label": "Rule A",
			"metaData": {
				"livelayer": {
					"id": "a0O41000005RydtEAC",
					"name": "All Devices"
				},
				"shapelayer": {
					"id": "a0O41000005RydtEAC",
					"name": "A Fence Around Something"
				},
				"createdby": "Kara"
			},
			"oAuth": "user@mapanything.com.fullcopy",
			"persistant": "false",
			"ruleId": "6524dd3c-664a-4bc8-b419-d5a8660380f9",
			"ruleType": [
				"enters",
				"exits"
			]
		}


	FROM MAIO

	-previous values left out-
		"success": true,
		"activeDevicesCount": "7",
		"lastEvaluatedTrue": "No successful eval",
		"modifieddate": "1508756973",
		"openErrorCount": "0"

	-current values-
	GET rules
	{
		"apiVersion": "TBD",
		"code": 200,
		"data": {
			"rules": [
				{
					"actions": [
						"email"
					],
					"description": "Rule A Description",
					"deviceIds": [
						"Geotab-A",
						"Geotab-B"
					],
					"geometry": {
						"proximityType": "circle",
						"center": {
							"lat": 34.1419458,
							"lng": -84.4432626
						},
						"radius": 158338.2882349
					},
					"isActive": "true",
					"label": "Rule A",
					"metaData": {
						"livelayer": {
							"id": "a0O41000005RydtEAC",
							"name": "All Devices"
						},
						"shapelayer": {
							"id": "a0O41000005RydtEAC",
							"name": "A Fence Around Something"
						},
						"createdby": "Kara"
					},
					"oAuth": "user@mapanything.com.fullcopy",
					"persistant": "false",
					"ruleId": "00000000-0000-0000-0000-000000000000",
					"ruleType": [
						"enters"
					]
				}
			]
		},
		"info": {},
		"message": "The request succeeded",
		"method": "GET",
		"requestId": "TBD",
		"status": "ok",
		"uri": "https://api.mapanything.io/services/live/rules/"
	}

	GET single rule
		{
			"actions": [
				"email",
				"sfinsert"
			],
			"description": "Rule A Description",
			"deviceIds": [
				"Geotab-A",
				"Geotab-B"
			],
			"geometry": {
				"center": {
					"lat": 34.1419458,
					"lng": -84.4432626
				},
				"proximityType": "circle",
				"radius": 158338.2882349
			},
			"isActive": "true",
			"label": "Rule A",
			"metaData": {
				"createdBy": "Kara",
				"createdDate": "3/4/2019",
				"livelayer": {
					"id": "a0O41000005RydtEAC",
					"name": "All Devices"
				},
				"shapeLayer": {
					"id": "a0O41000005Ryd7EAC",
					"name": "A Fence Around Something"
				}
			},
			"oAuth": "user@mapanything.com.fullcopy",
			"persistant": "false",
			"ruleId": "00000000-0000-0000-0000-000000000002",
			"ruleType": [
				"enters",
				"exits"
			]
		}

 -->

</apex:page>