<apex:page sidebar="false" showChat="false" showHeader="false" controller="sma.PrintEmailRoute" title="Print/Email Interface" docType="html-5.0" extensions="sma.MARemoteFunctions" cache="false">
    <script>
        var MARemoting = {
            processAJAXRequest : '{!$RemoteAction.MARemoteFunctions.processAJAXRequest}',
            getRoute : '{!$RemoteAction.MARemoteFunctions.getRoute}',
            MapAnythingIORequestPOST : '{!$RemoteAction.MARemoteFunctions.MapAnythingIORequestPOST}',
        }
    </script>
    <!-- jQuery -->
    <script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'jquery/jquery-3.4.1.min.js')}"></script>

    <!-- jQuery UI -->
    <script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'jquery/jquery-ui.min.js')}"></script>
    <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'jquery/jquery-ui.css')}"/>

    <!-- Glyphicons -->
    <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'css/MapAnything.css')}"/>

    <!-- Google Maps -->
    <script type='text/javascript' src='https://maps.googleapis.com/maps/api/js?client=gme-cloudbiltinc&libraries='></script>

    <!-- Moment (date parsing) -->
    <script src="{!URLFOR($Resource.MapAnything, 'js/moment.js')}" type="text/javascript"></script>
    <script src="{!URLFOR($Resource.MapAnything, 'js/moment_tz.js')}" type="text/javascript"></script>

    <!-- CryptoJS (https://code.google.com/p/crypto-js/) -->
    <script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'js/google/cryptojs/core-min.js')}"></script>
    <script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'js/google/cryptojs/enc-utf16-min.js')}"></script>
    <script type='text/javascript' src="{!URLFOR($Resource.MapAnything, 'js/google/cryptojs/enc-base64-min.js')}"></script>

    <script type='text/javascript'>
        var userSettings = window.opener.userSettings;
    </script>

    <script type='text/javascript' src="{!URLFOR($Resource.MapAnythingJS, 'JSHelperFunctions.js')}"></script>

    <!-- CSS -->
    <style type='text/css'>
        * {
            box-sizing: border-box;
        }

        table {
            border-collapse: collapse;
        }

        /*Options Bar*/
        #optionsbar {
            background-color: #f9f9f9;
            width: 600px;
            padding: 20px 25px;
            font-size: 12px;
            margin-top: 15px;
            margin-bottom: 15px;
        }

        #optionsbar .right .button-small {
            background-color: #ffffff;
        }

        .right {
            float: right;
        }

        /*Email Box*/
        .email-box {
            border: 1px solid #dddbda;
            border-radius: .25rem;
            width: 600px;
            padding: 25px;
            margin-bottom: 10px;
        }

        .text-col {
            width: 65px;
            vertical-align: top;
            padding-top:5px;
        }

        .input-col {
            width: 500px;
        }

        .input-col > input {
            background-color: #fff;
            border: 1px solid #dddbda;
            border-radius: .25rem;
            width: 100%;
            transition: border .1s linear,background-color .1s linear;
            display: inline-block;
            padding: 0 1rem 0 .75rem;
            line-height: 1.875rem;
        }

        textarea.input-col {
            width: 500px;
            background-color: #fff;
            border: 1px solid #dddbda;
            border-radius: .25rem;
        }

        #emailbox .row {
            padding-bottom: 10px;
            position: relative;
        }

        #emailbox .buttonRow {
            /* left: 80px; */
            padding: 10px 0px 0px 0px;
        }

        #emailBox a {
            padding: 2px 5px;
        }

        #emailSubject{
            width: 100%;
        }

        #directions {
            margin-top: 25px;
        }

        #directions {
            border: 1px solid #E8E8E8;
        }

        #search-results {
            position: absolute;
            left: 75px;
            background-color: white;
            width: 300px;
            border: 1px solid silver;
            padding: 0px 10px;
            border-radius: 3px;
            box-shadow: 1px 1px 3px #939393;
            display:none;
            z-index: 10;
        }
        #search-results .result-row {
            margin: 5px 0px;
            cursor: pointer;
            color: #6F6F6F;
        }
        #search-results .result-row:hover {
            color: #337AB7;
            font-weight: bold;
        }

        .emailUser {
            border: 1px solid silver;
            padding: 5px;
            display: inline-block;
            margin-right: 5px;
            background-color: #F9F9F9;
        }

        /*Email Success Msg*/
        .check-img span.glyphicon-ok {
            font-size: 24px;
            color: #65D565;
        }

        .check-img span.glyphicon-remove {
            font-size: 14px;
            color: #C8C8C8;
            line-height: 24px;
        }

        div.email-success-msg {
            font-size: 14px;
            margin-left: 15px;
        }

        #emailSuccess div {
            vertical-align: middle;
        }

        #hideMsg {
            float: right;
            cursor:pointer;
        }

        /*General/Misc CSS*/
        a, button {
            cursor: pointer;
        }

        .center {
            margin-left: auto;
            margin-right: auto;
        }

        .inline {
            display: inline-block;
        }

        .logo {
            width: 600px;
            margin-bottom: 25px;
        }

        .logo img {
            width: 200px;
            border:0;
            margin-left: -25px;
        }

        #mapcontainer, #mapdiv {
            height: 400px;
        }

        .waypoint-timeOptions {
            padding-left: 52px;
            border-bottom: 1px solid #e8e8e8;
        }


        .waypoint-location {
            background-color: #E8E8E8;
            border-left: 1px solid #E8E8E8;
            border-right: 1px solid #E8E8E8;
        }

        .waypoint-location td {
            padding: 5px 7px;
        }

        .direction-body tr {
            border-bottom: 1px solid #E8E8E8;
        }

        @media print {
            #emailbox { display: none !important; }
            #emailSuccess { display: none !important; }
            #optionsbar { display: none !important; }
            #outerbox { border: none !important; }
            #logo { margin-left: 0px !important; }
        }

        @media all and (-ms-high-contrast:none) {
            .input-col > input {
                height: 32px;
            }
        }

    </style>

    <!-- JS -->
    <c:MA />

    <script type='text/javascript'>
        var userSettings;
        // fix locale issues
        MASystem.Organization.defaultOrgLocale = validateLocale(MASystem.Organization.defaultOrgLocale);
        MASystem.User.UserLocale = validateLocale(MASystem.User.UserLocale);
        $(function () {
            //First, add click events
            emailHndlr = new EmailHandling();
            emailHndlr.addClickEvents();

            //Next, start generating the map/directions
            MA.map = new google.maps.Map(document.getElementById('mapdiv'), {
                center: { lat: 36.98500309285596, lng: -97.8662109375},
                zoom: 5,
                panControl: false,
                zoomControl: false,
                streetViewControl: false,
                mapTypeControl: false,
                scaleControl: false,
                gestureHandling : 'greedy'
            });

            //remove standard POI functionality
            MA.map.setOptions({
                styles: [
                    { featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'off' }] },
                    { featureType: 'transit', elementType: 'labels', stylers: [{ visibility: 'off' }] },
                    { featureType: 'landscape', elementType: 'labels', stylers: [{ visibility: 'off' }] }
                ]
            });

            var dir = new Directions();

            // var isLoaded = false;

            window.opener.VueEventBus.$on('add-to-print', function (data) {
                if (typeof data === 'undefined') {
                    return;
                }
                else if (typeof data === 'object') {
                    var objKeys = Object.keys(data);
                    if (objKeys.length === 0) {
                        return;
                    }
                }
                dir.load(data);
                if (data.Name) {
                    $('#emailSubject').val('MapAnything Directions - ' + decodeHtml(data.Name));
                }
                $('#printPageBtn, #emailDirectionsBtn').removeClass('btnDisabled').removeAttr('disabled');
            });

            window.opener.VueEventBus.$emit('request-print-data', null);
        });

        function decodeHtml(html) {
            if (!html) return html;

            var txt = document.createElement('textarea');
            txt.innerHTML = html;
            return txt.value;
        }

        function EmailHandling() {
            this.userEmail = "{!$User.Email}";
            this.managerEmail = "{!JSENCODE(managerEmail)}";
            this.results = [];
        }

        EmailHandling.prototype = {
            addClickEvents : function() {
                var that = this;

                //hide search results on page click
                $('body').on('click',function(e) {
                    //hide the results
                    $('#search-results').hide();
                });

                //show results on input click
                $('#email-wrapper').on('click','#email-input',function (e) {
                    e.stopPropagation();
                    if($('#email-input').val() != '') {
                        $('#search-results').show();
                    }
                });

                $('#email-wrapper').on('click',function(e) {
                    $('#email-input').focus();
                    e.stopPropagation();
                    if($('#email-input').val() != '') {
                        $('#search-results').show();
                    }
                });

                //handle auto complete for email user search
                $('#emailbox').on('keyup','#email-input', function () {
                    //empty the previous search results
                    $('#search-results .result-row').remove();
                    that.results = [];

                    that.searchUsers($(this).val());
                });
            },

            searchUsers : function(searchText) {
                //append the actual entered text
                this.addInputRow(searchText);
                $('#search-results').show();

                //apex remote to get users
                if(searchText.length <= 2) {
                    return;
                }

                var that = this;

                var controller = typeof sma == 'undefined' ? PrintEmailRoute : sma.PrintEmailRoute;
                controller.searchUsers(searchText, function (response,event) {
                    if(event.status && response.success) {
                        $.each(response.data.User, function(i, user) {
                            that.addResultRow(user.value, user.label);
                        });
                    }
                },{ escape: false });
            },

            openEmailInput : function() {
                $('#emailbox').show();
                $('#emailSuccess').hide();
            },

            addMe : function() {
                this.generateEmailDiv(this.userEmail);
            },

            addManager : function() {
                if (this.managerEmail == '') {
                    alert("An email address for this user's manager has not been set.");
                    return;
                }

                this.generateEmailDiv(this.managerEmail);
            },

            generateEmailDiv : function(value, label) {
                if (label == undefined) {
                    label = value;
                }

                var link = $('<a style="margin-left: 5px;" class="inline"/>');
                link.append($('<span class="glyphicon glyphicon-remove-circle" aria-hidden="true"/>'));

                var row = $('<div class="emailUser inline" data-val="'+value+'"/>')
                    .text(label)
                    .click(function() {
                        $(this).remove();
                    });

                row.append(link);

                $('#email-wrapper').prepend(row);
            },

            sendEmail : function() {
                var that = this;

                this.emailAddresses = [];
                this.htmlBody = '';
                this.emailSubject = '';

                var selections = $('#email-wrapper .emailUser');

                if(selections.length == 0) {
                    alert('No email recipients have been selected.');
                    return;
                }

                //loop over the list and add to emailAddresses
                $.each(selections, function(i, sel) {
                    var email = $(sel).attr('data-val');
                    that.emailAddresses.push(email);
                });

                var directionsClone = $('#directions').clone();

                //remove the maneuvers if needed
                if (!$('#showDirectionsCheckbox').prop('checked')) {
                    directionsClone.find('.turn-by-turn-row').remove();
                }

                //remove the custom fields if needed
                if(!$('#showFieldsCheckbox').prop('checked')) {
                    $(directionsClone).find('.waypoint-tooltips').remove();
                }

                var logoHTML = '<a href="http://www.mapanything.com/" target="_blank">'
                            + '<img id="logo" style="width: 200px; border:0; margin-left: -25px;" src="https://cdn.mapanythingapis.com/logos/MapAnythingLogo.png" title="MapAnything" alt="MapAnything"/>'
                            + '</a>';

                //build html body
                this.htmlBody = '<br/><br/><div>'
                            + $('#emailMsg').val()
                            + '</div><br/><br/>'
                            + $('#overview').html()
                            + '<br/><br/>'
                            + $(directionsClone).html()
                            + '<br /><br />'
                            + logoHTML;

                this.emailSubject = $('#emailSubject').val() == '' ? 'MapAnything Directions' : $('#emailSubject').val();

                this.send();
            },

            send : function() {
                var MyJSObject = {
                    action: 'email_directions',
                    replyTo: this.userEmail,
                    subject: this.emailSubject,
                    toAddresses: this.emailAddresses,
                    htmlBody: this.htmlBody
                };

                var processData = {
                    ajaxResource : 'MAEmailAJAXResources',
                    MyJSObject: JSON.stringify(MyJSObject)
                };

                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                    processData,
                    function(response, event){

                        if(event.status && response.success) {
                            $('#emailbox').hide();
                            $('#emailSuccess').show();
                        }
                        else {
                            alert('Error Sending Directions Email');
                        }
                    }
                );
            },

            cancel : function() {
                $('#email-wrapper .emailUser').remove();
                $('#email-input').val('');
                $('#emailMsg').val('');
                $('#emailSubject').val('Map Anything Directions');
                $('#emailbox').hide();
            },

            addResultRow : function(value, label) {
                this.addRow(label+' - '+value, value, label);
            },

            addInputRow : function(val) {
                this.addRow(val, val, val);
            },

            addRow : function(row, value, label) {
                //Prevent the same result being added multiple times
                var found = false;
                $.each(this.results, function(i, val) {
                    if (val == row) {
                        found = true;
                    }
                });

                if (found) {
                    return;
                }

                //Add new result
                this.results.push(row);
                var that = this;

                $row = $('<div class="result-row">'+row+'</div>');
                $row.on('click',function () {
                    that.generateEmailDiv(value, label);
                    $('#email-input').val('');
                });
                $('#search-results').append($row);
            }
        };

        function Directions() {
            this.unit = '{!JSENCODE(unit)}';
            this.map = new RouteMap();
            this.waypoints = [];
            this.totalDistance = '';
            this.visitedOrders = 0;
            this.totalTime = '';
        }

        Directions.prototype = {
            load : function(data) {
                this.waypoints = [];
                this.map = new RouteMap();
                this.visitedOrders = data.waypoints.length;

                if (data.first) {
                    data.first.isFirst = true;
                    if (data.last && data.last.lat === data.first.lat && data.last.lng === data.first.lng) {
                        data.first.isFirstLast = true;
                    }
                    this.waypoints.push(data.first);
                }

                Array.prototype.push.apply(this.waypoints, data.waypoints);

                if (data.last) {
                    data.last.isLast = true;
                    if (data.first && data.last.lat === data.first.lat && data.last.lng === data.first.lng) {
                        data.last.isFirstLast = true;
                    }
                    this.waypoints.push(data.last);
                }

                if (data.summary) {
                    this.totalTime = this.stringifyTime(data.summary.totaltraveltime);
                    var totalMeters = data.summary.distance;
                    this.totalDistance = this.convertDistance(totalMeters, false);
                }

                if (data.url && data.boundingbox) {
                    this.map.boundingbox = data.boundingbox;
                    this.map.url = data.url;
                    this.map.generateOverlay();
                }

                $('#directions').empty();
                this.buildTurnByTurn().appendTo($('#directions'));

                //display total distance
                $('#routeName').text(data.Name);

                //display total distance
                $('#drivingDistance').text(this.totalDistance);

                //display visited orders
                 $('#visitedOrders').text(this.visitedOrders);

                //display total time
                $('#totalTime').text(this.totalTime);

                this.loadToolTips();
            },

            convertDistance : function (meters, mixedUnits, isMan) {//input must always be in meters

                var output = '';
                var meterThreshold = 150; //when mixedUnits is true, this is the min distance(m) used, before switching units
                
                try {
                    if (this.unit == 'mi') {
                        //Imperial system
                        if(isMan) {
                            // Manuevers come in as miles.  Convert miles to meters
                            meters = meters * 1609.34;
                        }
                        if (mixedUnits) { //use miles or feet
                            output = meters < meterThreshold ? (meters * 3.28084).toFixed(0) + ' ft' : (meters * 0.000621371).toFixed(1) + ' mi'
                        } else {
                            output = (meters * 0.000621371).toFixed(1) + ' miles';
                        }
                    } else {
                        //Metric system
                        if(isMan) {
                            // Manuevers come in as miles.  Convert miles to meters
                            meters = meters * 1000;
                        }
                        if (mixedUnits) { //use kilometers or meters
                            output = meters < meterThreshold ? meters + ' m' : (meters / 1000).toFixed(1) + ' km';
                        } else {
                            output = (meters / 1000).toFixed(1) + ' kilometers';
                        }
                    }
                } catch(e) {
                    console.warn('There was an error in calculating distances');
                }

                return output;
            },

            convertTime: function (seconds) {
                var output = '';

                try {
                    var hours = parseInt(seconds / 3600, 10);
                    var remainderSeconds = seconds - (hours * 3600);
                    var minutes = parseInt(remainderSeconds / 60, 10);
                    output = hours > 0 ? hours + ' hours ' + minutes + ' mins' : minutes + ' mins';
                } catch(e) {
                    console.warn('There was an error in calculating times');
                }

                return output;
            },

            buildTurnByTurn : function() {
                var routingTable = $('<table style="width: 100%">');
                var that = this;

                $.each(this.waypoints, function(i, wp) {
                    var markerCell = that.map.addMarker(wp);
                    //create waypoint rows
                    var waypointDiv = $('tr.directions-waypoint-row').clone();
                    waypointDiv.removeClass('directions-waypoint-row');
                    waypointDiv.attr('id', wp.id);
                    waypointDiv.addClass('waypoint-location');
                    waypointDiv.find('.name').html(htmlEncode(wp.Name));
                    waypointDiv.find('.address').html(htmlEncode(wp.Address__c));
                    waypointDiv.find('.notes').html(htmlEncode(wp.Notes__c));
                    var startTime = moment.unix(wp.start).format(MASystem.User.timeFormat)
                    var departureTime = moment.unix(wp.departuretime).format(MASystem.User.timeFormat)
                    waypointDiv.find('.start-departure').text(startTime + ' - ' + departureTime);
                    waypointDiv.prepend(markerCell);
                    routingTable.append(waypointDiv);

                    if (wp.distance && wp.distance != 0) {
                        var summary = $('tr.waypoint-summary').clone();
                        summary.removeClass('waypoint-summary');
                        summary.find('.distance').text(that.convertDistance(wp.distance, true));
                        summary.find('.time').text(that.convertTime(wp.totaltraveltime));
                        routingTable.append(summary);
                    }

                    if (wp.maneuvers) {
                        //create maneuver rows
                        $.each(wp.maneuvers, function(i, man) {
                            var manDiv = $('tr.directions-row').clone();
                            manDiv.removeClass('directions-row');
                            manDiv.addClass('turn-by-turn-row');

                            // manDiv.find('.directions-image').attr('src', man.image);
                            manDiv.find('.direction-text').html(man.maneuver);
                            manDiv.find('.index').text((i+1) + '.');
                            manDiv.find('.distance').text(that.convertDistance(man.distance, true, true));
                            routingTable.append(manDiv);
                        });
                    }


                });

                return routingTable;
            },

            stringifyTime : function(travelTime) {
                if (travelTime == undefined || travelTime == 0) {
                    return '0 mins';
                }
                //seconds => minutes
                travelTime = travelTime / 60;

                //minutes => hours
                var totalHours = Math.floor(travelTime / 60);

                //calc remaining minutes
                var totalMinutes = Math.floor(travelTime - (totalHours * 60));

                //ie: "55 mins", "1 hour 34 mins"
                return totalHours == 0 ? totalMinutes + ' mins ' : totalHours + ' hour' + (totalHours == 1 ? '' : 's') + ' ' + totalMinutes + ' mins ';
            },
            loadToolTips: function() {
                $.each(this.waypoints, function(i, wp) {
                    try {
                        if (wp.tooltipMetadata && wp.tooltipMetadata.tooltipMetadata) {
                            var tableBody = $('<tbody>');
                            var addedTooltips = [];
                            $.each(wp.tooltipMetadata.tooltipMetadata, function(i, tp) {
                                // prevent duplicate tooltips
                                if (addedTooltips.indexOf(tp.ActualFieldName) !== -1) {
                                    return;
                                }

                                addedTooltips.push(tp.ActualFieldName);
                                var tooltipData = formatTooltip(wp.tooltipMetadata.record, tp);
                                var row = $('<tr class="waypoint-tooltip-row">');
                                row.append($('<td class="label">'+tp.FieldLabel+'</td>'));
                                row.append($('<td class="data">'+tooltipData+'</td>'));
                                tableBody.append(row);
                            });
                            //clear any exisiting data
                            $('#'+wp.id + ' div.waypoint-tooltips').empty();
                            //append tooltips
                            $('#'+wp.id + ' div.waypoint-tooltips')
                                .append($('<table>')
                                    .append(tableBody));
                        }
                    } catch(e) {
                        console.warn('Failed to load tooltip for waypoint - ' + wp.id + ' Error - ' + e.message);
                    }
                });
            }
        };

        function RouteMap() {
            this.boundingbox = {};
            this.url = '';
        }

        RouteMap.prototype = {
            generateOverlay : function() {
                //Remove Current Routing Overlay
                MA.Map.removeOverlay('RoutingTiles');
                var that = this;

                //add route overlay
                routingOverlay = new google.maps.ImageMapType({
                    name: 'RoutingTiles',
                    maxZoom: 18,
                    tileSize: new google.maps.Size(256, 256),
                    opacity: 0.8,
                    getTileUrl: function(coord, zoom) {
                        var routeURL = that.url.replace('{X}',coord.x).replace('{Y}',coord.y).replace('{Z}',zoom);
                        return [ routeURL + '?strokecolor=0080ff&strokeopacity=0.75&strokeweight=5' ];
                    }
                });

                this.reCenterMap();

                MA.map.overlayMapTypes.push(routingOverlay);
            },

            reCenterMap : function() {
                //center map on the route
                var latLngBounds = new google.maps.LatLngBounds()
                    .extend(this.boundingbox.northeast || {})
                    .extend(this.boundingbox.southwest || {});

                MA.map.fitBounds(latLngBounds);
            },
            addMarker : function(wp) {
                var icon = {};
                if (wp.isFirstLast && wp.isFirst) {
                    icon = this.getFirstLastIcon();
                } else if (wp.isFirstLast && wp.isLast) {
                    return $('<td>').append('<img class="adp-marker" style="width: 25px;" src="'+this.getFirstLastIcon().url+'">');
                } else if (wp.isFirst) {
                    icon = this.getFirstIcon();
                } else if (wp.isLast) {
                    icon = this.getLastIcon();
                } else {
                    icon = this.getWaypointIcon(wp.index);
                }

                var mapMarker = new google.maps.Marker({
                    position: {
                        lat: wp.lat,
                        lng: wp.lng
                    },
                    map: MA.map,
                    icon: icon,
                    optimized: !window.MA.Util.isIE(),
                    layerType: 'waypoint-marker',
                    zIndex: 1000
                });

                var markerCell = $('<td>').append('<img class="adp-marker" style="width: 25px;" src="'+icon.url+'">');
                return markerCell;
            },
            getFirstIcon: function() {
                var color = '#1589ee';
                color = color.replace(/#/g, '');
                var MAIOEndPoint = '{!MAIO_EndPoint}';
                var icon = 'markerWaypointFirst';

                return {
                    url: MAIOEndPoint + '/services/images/marker?color=' + color + '&forlegend=false&icon=' + icon,
                    anchor: new google.maps.Point(14, 35),
                    scaledSize: { height: 35, width: 28 }
                };
            },
            getLastIcon: function() {
                var color = '#1589ee';
                color = color.replace(/#/g, '');
                var MAIOEndPoint = '{!MAIO_EndPoint}';
                var icon = 'markerWaypointLast';

                return {
                    url: MAIOEndPoint + '/services/images/marker?color=' + color + '&forlegend=false&icon=' + icon,
                    anchor: new google.maps.Point(14, 35),
                    scaledSize: { height: 35, width: 28 }
                };
            },
            getFirstLastIcon: function() {
                var color = '#1589ee';
                color = color.replace(/#/g, '');
                var MAIOEndPoint = '{!MAIO_EndPoint}';
                var icon = 'markerWaypointCombo';
                
                return {
                    url: MAIOEndPoint + '/services/images/marker?color=' + color + '&forlegend=false&icon=' + icon,
                    anchor: new google.maps.Point(14, 35),
                    scaledSize: { height: 35, width: 42 }
                };
            },
            getWaypointSVG: function(index) {
                var color = '#1589ee';
                color = color.replace(/#/g, '');
                var MAIOEndPoint = '{!MAIO_EndPoint}';
                return MAIOEndPoint + '/services/images/marker?color=' + color + '&forlegend=false&icon=markerWaypoint&text=' + index;
            },
            getWaypointIcon: function(index) {
                return {
                    url: this.getWaypointSVG(index),
                    anchor: new window.google.maps.Point(14, 35),
                    size : {height: 70, width : 56},
                    scaledSize : {height: 35, width : 28}
                };
            }
        }

        //hide/show dom elements
        function hideShow(element, target) {
            if($(element)[0].checked) {
                $(target).show();

                if (target == '#mapcontainer') {
                    google.maps.event.trigger(MA.map, 'resize');
                }

            } else {
                $(target).hide();
            }
        }

    </script>

    <!-- Options Bar -->
    <div id="optionsbar" class="center">

        <input type="checkbox" id="showMapCheckbox" onclick="hideShow(this, '#mapcontainer');" checked="checked" /> {!$Label.MA_Map} |
        <input type="checkbox" id="showDirectionsCheckbox" onclick="hideShow(this, '.turn-by-turn-row');" checked="checked" /> {!$Label.MA_Turn_By_Turn} |
        <input type="checkbox" id="showFieldsCheckbox" onclick="hideShow(this, '.waypoint-tooltips');" checked="checked" /> {!$Label.MA_Custom_Fields}

        <div class="right">
            <button id='printPageBtn' onclick="window.print();" class="MAbutton button-silver button-small btnDisabled" disabled="disabled">{!$Label.MA_Print_Page}</button>
            <button id='emailDirectionsBtn' onclick="emailHndlr.openEmailInput();" class="MAbutton button-silver button-small btnDisabled" disabled="disabled">{!$Label.MA_Email_Directions}</button>
        </div>

    </div>

    <!-- Email Box -->
    <div id="emailbox" class="email-box center" style="display: none;">
        <div class="row">
            <div class="text-col inline">To:</div>
            <div id="email-wrapper" class="to-wrapper inline input-col">
                <input id="email-input" type="text"/>
            </div>

            <div id="search-results"></div>

            <div class="row buttonRow">
                <a onclick="emailHndlr.addMe();" class="MAbutton button-small button-blue inline">Add Me</a>
                <a onclick="emailHndlr.addManager();" class="MAbutton button-small button-blue inline">Add Manager</a>
            </div>
        </div>

        <div class="row">
            <div class="text-col inline">Subject: </div>
            <div class="inline input-col">
                <input id="emailSubject" value="MapAnything Directions - " type="text"/>
            </div>
        </div>

        <div class="row">
            <div class="text-col inline">Message:</div>
            <div class="inline">
                <textarea id="emailMsg" class="input-col"></textarea>
            </div>
        </div>

        <div class="button-wrapper">
            <a onclick="emailHndlr.sendEmail();" class="MAbutton button-blue">Send</a>
            <a onclick="emailHndlr.cancel();" class="MAbutton button-silver">Cancel</a>
        </div>
    </div>

    <!-- Email Success Message -->
    <div id="emailSuccess" class="center email-box" style="display:none;">
        <div class="check-img inline">
            <span class="MAIcon glyphicon-ok" aria-hidden="true"></span>
        </div>

        <div class="inline email-success-msg">Email sent successfully.</div>

        <div class="check-img inline" id="hideMsg" onclick="$('#emailSuccess').hide();">
            <span class="MAIcon glyphicon-remove" aria-hidden="true"></span>
        </div>
    </div>

    <!-- Outer Box -->
    <div id="outerbox" class="center email-box">
        <!-- Route Overview -->
        <div id="overview" style="width: 100%; margin-bottom: 10px;">
            <table>
                <tr>
                    <td style="font-weight: bold;">Route Name:</td>
                    <td id="routeName" style="font-weight: bold;"></td>
                </tr>
                <tr>
                    <td style="padding-right: 10px;">Driving Distance:</td>
                    <td id="drivingDistance" style="font-weight: bold;"></td>
                </tr>
                <tr>
                    <td>Total Time:</td>
                    <td id="totalTime" style="font-weight: bold;"></td>
                </tr>
                <tr>
                    <td>Visited Orders:</td>
                    <td id="visitedOrders" style="font-weight: bold;"></td>
                </tr>
            </table>
        </div>

        <!-- Map Container -->
        <div id="mapcontainer" style="width: 100%;">
            <!-- Map -->
            <div id="mapdiv" style="width: 100%;"></div>

            <!-- Growl Wrapper -->
            <div id="growl-wrapper" style='position: absolute; top: 5px; right: 5px;'></div>
        </div>

        <!-- Directions Outer -->
        <div id="directionsouter" style="width: 100%;">
            <!-- Directions -->
            <div id="directions" style="width: 100%;"></div>
        </div>
    </div>

    <!-- MapAnything Logo -->
    <div class="center logo">
        <a href="http://www.mapanything.com" target="_blank">
            <img id="logo" src="{!URLFOR($Resource.MapAnything,"/MA_logo_blue.png")}" title="MapAnything" alt="MapAnything"/>
        </a>
    </div>

    <!-- Templates -->
    <div id='templates' style='display: none;'>

        <div id="DirectionsTemplate">
            <table class="direction-body">
                <!-- Waypoint Row Template -->
                <tr class='directions-waypoint-row'>
                    <td colspan='4'>
                        <table style='width: 100%; border-spacing: 0;'>
                            <tr class="waypoint-row-background">
                                <td>
                                    <div class='name' style='font-family: helvetica,arial,sans-serif; font-size: 16px; color: #006DB4; font-weight: bold;'></div>
                                    <div class='address' style='font-family: helvetica,arial,sans-serif; font-size: 12px; color: black;'></div>
                                    <div class='notes' style='max-width:350px;font-size:10px;color:#757575;padding-top:5px;'></div>
                                    <div class='start-departure' style='max-width:350px;font-size:10px;color:#757575;padding-top:5px;'></div>
                                </td>
                                <td>
                                    <div class='waypoint-tooltips'></div> <!--style="width:300px !important; white-space:normal !important;"-->
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>

                <tr class='waypoint-summary'>
                    <td colspan='4' class='waypoint-timeOptions'>
                        <span class='distance'></span>. About <span class='time'></span>
                    </td>
                </tr>

                <!-- Maneuver Row Template -->
                <tr class='directions-row'>
                    <td style='border-bottom: 1px solid #dddbda; width: 1px; white-space: nowrap;'><img class='directions-image'></img></td>
                    <td class='index' style='padding: 10px; width: 1px; white-space: nowrap; border-bottom: 1px solid #dddbda;font-family: helvetica,arial,sans-serif;font-size: 14px;color: #006DB4;font-weight: bold;text-align: center;'></td>
                    <td class='direction-text' style='border-bottom: 1px solid #dddbda;'></td>
                    <td class='distance' style='border-bottom: 1px solid #dddbda;'></td>
                </tr>
            </table>

            <!-- SVG Marker - Waypoint -->
            <svg class="svg-marker-waypoint" xmlns="http://www.w3.org/2000/svg" width="28" height="34.958" viewBox="0 0 28 34.958">
                <path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Z" style="fill: __COLOR__"/>
                <path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Zm3,24a3,3,0,0,1-3,3H19.112L14,32.771,8.887,27H4a3,3,0,0,1-3-3V4A3,3,0,0,1,4,1H24a3,3,0,0,1,3,3Z" style="opacity: 0.3199999928474426;isolation: isolate"/>

                <text text-anchor="middle" fill="#FFF" font-family="Salesforce Sans" font-size="13">
                    <tspan x="14" y="18.312">__TEXT__</tspan>
                </text>
            </svg>

            <!-- SVG Marker - Waypoint Start -->
            <svg id="svgMarkerWaypointFirst" xmlns="http://www.w3.org/2000/svg" width="28" height="34.958" viewBox="0 0 28 34.958"><path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Z" style="fill:#4bca81"/><path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Zm3,24a3,3,0,0,1-3,3H19.112L14,32.771,8.887,27H4a3,3,0,0,1-3-3V4A3,3,0,0,1,4,1H24a3,3,0,0,1,3,3Z" style="opacity:0.3199999928474426;isolation:isolate"/><path d="M7,6A.945.945,0,0,0,6,7V20.8a1,1,0,0,0,2,0V7A1,1,0,0,0,7,6ZM21.3,7.5C17,9.7,13.7,5.9,9.6,7.4a.446.446,0,0,0-.3.4v7.3c0,.4.4.6.8.5,3.9-1.1,7.2,2.5,11.4.2a.55.55,0,0,0,.3-.5V7.7A.365.365,0,0,0,21.3,7.5Z" style="fill:#fff"/></svg>

            <!-- SVG Marker - Waypoint end/last/destination -->
            <svg id="svgMarkerWaypointLast" xmlns="http://www.w3.org/2000/svg" width="28" height="34.958" viewBox="0 0 28 34.958"><title>waypoint-finish-v2</title><path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Z" style="fill:#061c3f"/><path d="M24,0H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H8.437L14,34.278,19.563,28H24a4,4,0,0,0,4-4V4A4,4,0,0,0,24,0Zm3,24a3,3,0,0,1-3,3H19.112L14,32.771,8.887,27H4a3,3,0,0,1-3-3V4A3,3,0,0,1,4,1H24a3,3,0,0,1,3,3Z" style="opacity:0.3199999928474426;isolation:isolate"/><path d="M6.983,5.9A.965.965,0,0,0,6,6.883V20.65a.984.984,0,0,0,1.967,0V6.883A.966.966,0,0,0,6.983,5.9ZM21.34,7.375C17.079,9.6,13.7,5.769,9.671,7.244a.563.563,0,0,0-.393.492v7.342a.591.591,0,0,0,.754.524c3.867-1.147,7.211,2.491,11.406.2a.554.554,0,0,0,.3-.459V7.6A.268.268,0,0,0,21.34,7.375Zm-.918,7.441-.164.065a4.319,4.319,0,0,1-1.737.2h-.065V13.439a10.922,10.922,0,0,1-1.967-.23v1.738c-.557-.1-1.082-.2-1.508-.295-.164-.033-.328-.1-.459-.131v-1.8c-.557-.164-1.409-.328-1.966-.459v1.868a4.187,4.187,0,0,0-.918-.1,3.179,3.179,0,0,0-.525.033l-.524.032v-1.9a6.235,6.235,0,0,1,1.147-.065,3.152,3.152,0,0,1,.82.1V10.259a7.918,7.918,0,0,0-1.967.033V8.26l.295-.033a7.345,7.345,0,0,1,1.672.131v1.9c.458.1,1.245.263,1.835.427.033,0,.1.032.131.032v-1.9a15.716,15.716,0,0,0,1.967.459v1.868a13.543,13.543,0,0,0,1.967.164v-1.8h.065a10.394,10.394,0,0,0,1.541-.23l.393-.131v1.967a6.871,6.871,0,0,1-1.836.229h-.131v2.1h.066a4.956,4.956,0,0,0,1.9-.492v1.869Zm-5.9-4.1v1.967a1.917,1.917,0,0,1,.394.131c.491.131,1.016.295,1.573.393V11.177C15.8,11.046,15.112,10.882,14.522,10.718Z" style="fill:#fff"/></svg>

            <!-- SVG Marker - Waypoint combined start/end -->
            <svg id="svgMarkerWaypointCombo" xmlns="http://www.w3.org/2000/svg" width="42" height="34.354" viewBox="0 0 42 34.354"><title>waypoint-finish-and-start-v3</title><path d="M38,0H21V34.278L26.563,28H38a4,4,0,0,0,4-4V4A4,4,0,0,0,38,0Z" style="fill:#061c3f"/><path d="M4,0A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H15.437L21,34.278V0Z" style="fill:#4bca81"/><g style="opacity:0.32"><path d="M38,1a3,3,0,0,1,3,3V24a3,3,0,0,1-3,3H26.113l-.3.337L21,32.77l-4.815-5.433-.3-.337H4a3,3,0,0,1-3-3V4A3,3,0,0,1,4,1H38m0-1H4A4,4,0,0,0,0,4V24a4,4,0,0,0,4,4H15.437L21,34.278,26.563,28H38a4,4,0,0,0,4-4V4a4,4,0,0,0-4-4Z"/></g><path d="M24.7,6.224a.924.924,0,0,0-1.154.666L21,16.378,18.467,6.919a.943.943,0,1,0-1.821.488L20.061,20.15a.945.945,0,0,0,1.154.667.93.93,0,0,0,.141-.071.919.919,0,0,0,.594-.624L25.364,7.378A.925.925,0,0,0,24.7,6.224Z" style="fill:#fff"/><path d="M30.481,12.554l-.487,1.82a1.789,1.789,0,0,1,.331.219c.423.244.868.526,1.359.755l.5-1.881C31.583,13.174,30.987,12.852,30.481,12.554Z" style="fill:#fff"/><path d="M37.622,11.15c-4.5,1.006-6.671-3.381-10.769-3.016a.54.54,0,0,0-.486.358l-1.822,6.8a.567.567,0,0,0,.568.672c3.865-.1,6.058,4.1,10.511,3.011a.528.528,0,0,0,.386-.351l1.919-7.161A.257.257,0,0,0,37.622,11.15Zm-1.746,3.24a6.618,6.618,0,0,1-1.756-.243L34,14.114l-.52,1.942.061.016a4.745,4.745,0,0,0,1.882.017l-.464,1.729-.03-.008-.168.02a4.127,4.127,0,0,1-1.657-.249l-.061-.016.407-1.517a10.625,10.625,0,0,1-1.764-.7l-.431,1.608c-.491-.229-.952-.45-1.322-.647-.144-.071-.279-.172-.393-.235l.448-1.669c-.476-.29-1.224-.653-1.707-.913l-.464,1.73a3.918,3.918,0,0,0-.825-.319,3.074,3.074,0,0,0-.493-.1L26,14.7l.471-1.76a5.861,5.861,0,0,1,1.079.224,2.981,2.981,0,0,1,.734.294l.488-1.821a7.543,7.543,0,0,0-1.829-.457l.5-1.881.281.042a7.041,7.041,0,0,1,1.515.536l-.471,1.76c.4.205,1.088.552,1.593.85.031.008.083.055.113.063l.472-1.76a15.2,15.2,0,0,0,1.707.913L32.2,13.436a13.15,13.15,0,0,0,1.78.64l.447-1.669.061.016a9.985,9.985,0,0,0,1.483.17l.4-.024Z" style="fill:#fff"/><path d="M15.158,8.163c-4.1-.365-6.272,4.022-10.77,3.016a.257.257,0,0,0-.307.31L6,18.65A.531.531,0,0,0,6.387,19c4.453,1.084,6.645-3.114,10.51-3.011a.568.568,0,0,0,.568-.673l-1.821-6.8A.541.541,0,0,0,15.158,8.163Z" style="fill:#fff"/></svg>
        </div>
    </div>

</apex:page>